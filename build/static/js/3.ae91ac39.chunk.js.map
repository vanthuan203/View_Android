{"version":3,"sources":["app/modules/history/components/ChannelStaticItem/index.tsx","app/modules/history/VpsThreadList.tsx"],"names":["ChannelStaticItem","item","index","className","vps","substring","lastIndexOf","length","style","marginRight","backgroundColor","fontSize","color","time","total","ComputerList","dispatch","useDispatch","API_URL","useState","ipv4","setipv4","keytrue","setKeyTrue","addtrue","status","setStatus","proxies","useSelector","histories","computers","shallowEqual","sum_die","i","delipv4","requestUrl","fetch","method","headers","Headers","response","json","responseJson","addipv4","useEffect","actions","requestComputers","margin","height","width","float","id","name","placeholder","value","type","onChange","e","target","maxWidth","marginTop","marginBottom","onClick","arr","split","window","confirm","clickDeleteHandler","clickAddHandler","map"],"mappings":"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","file":"static/js/3.ae91ac39.chunk.js","sourcesContent":["import React from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport {ComputerModel} from 'app/modules/history/models/Account'\nimport {resetComputer} from 'app/modules/history/redux/AccountCRUD'\nimport moment from 'moment'\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n    item: ComputerModel,\n    index: number\n}\n\nconst ChannelStaticItem: React.FC<Props> = ({ item, index }) => {\n\n    return (\n        <tr>\n            <td className='w-25px'>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n            <td>\n                <div className='d-flex align-items-center'>\n                    <div className='d-flex justify-content-start flex-column'>\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\n                            {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length).length!=0&&<span style={{marginRight:2,backgroundColor:\"#26695c\"}} className='badge badge-dark'>\n                                <text style={{fontSize:11}}>\n                                {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length)}\n                                </text>\n                            </span>}\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\n                                <text style={{fontSize:11,color:\"black\"}}>\n                                {item.vps.substring(0,item.vps.lastIndexOf('-'))}\n                                </text>\n                            </span>\n                            <span style={{marginRight:2,backgroundColor:item.time<5?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\n                                <text style={{fontSize:11,color:\"white\"}}>\n                                    {item.time}{'m'}\n                                </text>\n                            </span>\n                        </div>\n\n                    </div>\n                </div>\n            </td>\n            <td>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{item.total}</span>\n            </td>\n        </tr>\n    )\n}\n\nexport default ChannelStaticItem","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, {useEffect, useState} from 'react'\nimport {ComputerModel} from 'app/modules/history/models/Account'\nimport ComputerItem from './components/ComputerItem'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { actions } from './redux/AccountRedux'\nimport { RootState } from 'setup'\nimport {Input, Label} from \"reactstrap\";\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\nimport ChannelStaticItem from \"./components/ChannelStaticItem\";\ntype Props = {\n  className: string,\n}\n\nconst ComputerList: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch()\n\n\n  const API_URL = 'http://125.212.231.69/'\n  const [ipv4, setipv4] = useState(\"\")\n  const [keytrue, setKeyTrue] = useState(0)\n  const [addtrue, setAddTrue] = useState(0)\n  const [status, setStatus] = useState('')\n  const proxies:ComputerModel[] = useSelector<RootState>(({ histories }) => histories.computers, shallowEqual) as ComputerModel[] || []\n  let sum_total=0;\n  let sum_die=0;\n\n  for (var i = 0; i < proxies.length; i++) {\n      if(proxies[i].time>=5){\n        sum_die=sum_die+1\n      }\n  }\n  useEffect(() => {\n    dispatch(actions.requestComputers())\n    setipv4('')\n    setKeyTrue(0)\n  }, [status])\n  async function delipv4(ipv4:string) {\n    let  requestUrl = API_URL+'proxy/delipv4?ipv4='+ipv4;\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {status} = responseJson;\n    return status\n  }\n  async function addipv4(ipv4:string) {\n    let  requestUrl = API_URL+'proxy/addipv4?ipv4='+ipv4;\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {status} = responseJson;\n    return status\n  }\n  async function addcron() {\n    let  requestUrl = API_URL+'proxy/addcron'\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {num} = responseJson;\n    sum_total=num\n    return num\n  }\n  const clickDeleteHandler = () => {\n    const arr:string[]=ipv4.split('\\n');\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" đơn!\") == true) {\n      for(var i=0;i<arr.length;i++){\n        delipv4(arr[i])\n      }\n      setStatus('true')\n    }\n  }\n  const clickAddHandler = () => {\n    const arr:string[]=ipv4.split('\\n');\n    for(var i=0;i<arr.length;i++){\n      addipv4(arr[i])\n    }\n    setStatus('true')\n  }\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách VPS</span>\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {proxies.length} | Die: {sum_die} | Live: {proxies.length-sum_die})</span>\n            </div>\n          </div>\n        </div>\n        {keytrue==1&&<div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\n            <div >\n                <Input style={{height:500,width:'100%',float:\"left\"}}\n                       id=\"list_id\"\n                       name=\"list_id\"\n                       className=\"form-control form-control-solid\"\n                       placeholder={\"1 ipv4 một dòng!\"}\n                       value={ipv4}\n                       type={\"textarea\"}\n                       onChange={(e) => setipv4(e.target.value)}\n                />\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\n                        onClick={() => {\n                          clickDeleteHandler()\n                        }}\n                    /*\n                    if(key.trim().length==0){\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                        dispatch(actions.requestOrders(''))\n                      }else{\n                        dispatch(actions.requestOrders(user))\n                      }\n                    }else{\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                        dispatch(actions.showordersfilter(key,''))\n                      }else{\n                        dispatch(actions.showordersfilter(key,user))\n                      }\n                    }\n                    //setKey(\"\")\n                  }}\n\n                     */\n                        className='btn btn-success'\n                >\n                  Xóa\n                </button>}\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\n                                   onClick={() => {\n                                     clickAddHandler()\n                                   }}\n                  /*\n                  if(key.trim().length==0){\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                      dispatch(actions.requestOrders(''))\n                    }else{\n                      dispatch(actions.requestOrders(user))\n                    }\n                  }else{\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                      dispatch(actions.showordersfilter(key,''))\n                    }else{\n                      dispatch(actions.showordersfilter(key,user))\n                    }\n                  }\n                  //setKey(\"\")\n                }}\n\n                   */\n                                   className='btn btn-success'\n              >\n                Thêm\n              </button>}\n            </div>\n\n\n          </div>\n        </div>}\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      {keytrue==0&&<div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='min-w-10px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>VPS Name</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {\n                proxies&&proxies?.map((item: ComputerModel,index:number) => {\n                  return <ChannelStaticItem key={\"ipv4-\"+index} item={item} index={index}/>\n                })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>}\n      {/* begin::Body */}\n    </div>\n  )\n}\n\nexport default ComputerList\n"],"sourceRoot":""}