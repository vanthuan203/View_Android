{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeProperties = exports.randomString = exports.supportsInlineSVG = exports.isSupportedEnvironment = exports.canUseDOM = exports.STATUS = void 0;\n\nvar exenv_1 = require(\"exenv\");\n\nexports.STATUS = {\n  FAILED: 'failed',\n  LOADED: 'loaded',\n  LOADING: 'loading',\n  PENDING: 'pending',\n  READY: 'ready',\n  UNSUPPORTED: 'unsupported'\n};\n\nfunction canUseDOM() {\n  return exenv_1.canUseDOM;\n}\n\nexports.canUseDOM = canUseDOM;\n\nfunction isSupportedEnvironment() {\n  return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\n\nexports.isSupportedEnvironment = isSupportedEnvironment;\n\nfunction supportsInlineSVG() {\n  /* istanbul ignore next */\n  if (!document) {\n    return false;\n  }\n\n  var div = document.createElement('div');\n  div.innerHTML = '<svg />';\n  return !!div.firstChild && div.firstChild.namespaceURI === 'http://www.w3.org/2000/svg';\n}\n\nexports.supportsInlineSVG = supportsInlineSVG;\n\nfunction randomString(length) {\n  var letters = 'abcdefghijklmnopqrstuvwxyz';\n  var numbers = '1234567890';\n  var charset = \"\" + letters + letters.toUpperCase() + numbers;\n\n  var randomCharacter = function randomCharacter(character) {\n    return character[Math.floor(Math.random() * character.length)];\n  };\n\n  var R = '';\n\n  for (var i = 0; i < length; i++) {\n    R += randomCharacter(charset);\n  }\n\n  return R;\n}\n\nexports.randomString = randomString;\n/**\n *  Remove properties from an object\n */\n\nfunction removeProperties(input) {\n  var filter = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    filter[_i - 1] = arguments[_i];\n  }\n\n  var output = {};\n\n  for (var key in input) {\n    /* istanbul ignore else */\n    if ({}.hasOwnProperty.call(input, key)) {\n      if (!filter.includes(key)) {\n        output[key] = input[key];\n      }\n    }\n  }\n\n  return output;\n}\n\nexports.removeProperties = removeProperties;","map":{"version":3,"sources":["../src/helpers.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAIa,OAAA,CAAA,MAAA,GAAS;EACpB,MAAM,EAAE,QADY;EAEpB,MAAM,EAAE,QAFY;EAGpB,OAAO,EAAE,SAHW;EAIpB,OAAO,EAAE,SAJW;EAKpB,KAAK,EAAE,OALa;EAMpB,WAAW,EAAE;AANO,CAAT;;AASb,SAAgB,SAAhB,GAAyB;EACvB,OAAO,OAAA,CAAA,SAAP;AACD;;AAFD,OAAA,CAAA,SAAA,GAAA,SAAA;;AAIA,SAAgB,sBAAhB,GAAsC;EACpC,OAAO,iBAAiB,MAAM,OAAO,MAAP,KAAkB,WAAzC,IAAwD,MAAM,KAAK,IAA1E;AACD;;AAFD,OAAA,CAAA,sBAAA,GAAA,sBAAA;;AAIA,SAAgB,iBAAhB,GAAiC;EAC/B;EACA,IAAI,CAAC,QAAL,EAAe;IACb,OAAO,KAAP;EACD;;EAED,IAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;EACA,GAAG,CAAC,SAAJ,GAAgB,SAAhB;EACA,OAAO,CAAC,CAAC,GAAG,CAAC,UAAN,IAAoB,GAAG,CAAC,UAAJ,CAAe,YAAf,KAAgC,4BAA3D;AACD;;AATD,OAAA,CAAA,iBAAA,GAAA,iBAAA;;AAWA,SAAgB,YAAhB,CAA6B,MAA7B,EAA2C;EACzC,IAAM,OAAO,GAAG,4BAAhB;EACA,IAAM,OAAO,GAAG,YAAhB;EACA,IAAM,OAAO,GAAG,KAAG,OAAH,GAAa,OAAO,CAAC,WAAR,EAAb,GAAqC,OAArD;;EAEA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,SAAD,EAAkB;IACxC,OAAA,SAAS,CAAC,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,MAAL,KAAgB,SAAS,CAAC,MAArC,CAAD,CAAT;EAAuD,CADzD;;EAGA,IAAI,CAAC,GAAG,EAAR;;EACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;IAC/B,CAAC,IAAI,eAAe,CAAC,OAAD,CAApB;EACD;;EAED,OAAO,CAAP;AACD;;AAdD,OAAA,CAAA,YAAA,GAAA,YAAA;AAgBA;;AAEG;;AACH,SAAgB,gBAAhB,CACE,KADF,EACU;EACR,IAAA,MAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;IAAd,MAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;EAEA,IAAM,MAAM,GAAQ,EAApB;;EAEA,KAAK,IAAM,GAAX,IAAkB,KAAlB,EAAyB;IACvB;IACA,IAAI,GAAG,cAAH,CAAkB,IAAlB,CAAuB,KAAvB,EAA8B,GAA9B,CAAJ,EAAwC;MACtC,IAAI,CAAC,MAAM,CAAC,QAAP,CAAiB,GAAjB,CAAL,EAA6C;QAC3C,MAAM,CAAC,GAAD,CAAN,GAAc,KAAK,CAAC,GAAD,CAAnB;MACD;IACF;EACF;;EAED,OAAO,MAAP;AACD;;AAhBD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeProperties = exports.randomString = exports.supportsInlineSVG = exports.isSupportedEnvironment = exports.canUseDOM = exports.STATUS = void 0;\nvar exenv_1 = require(\"exenv\");\nexports.STATUS = {\n    FAILED: 'failed',\n    LOADED: 'loaded',\n    LOADING: 'loading',\n    PENDING: 'pending',\n    READY: 'ready',\n    UNSUPPORTED: 'unsupported',\n};\nfunction canUseDOM() {\n    return exenv_1.canUseDOM;\n}\nexports.canUseDOM = canUseDOM;\nfunction isSupportedEnvironment() {\n    return supportsInlineSVG() && typeof window !== 'undefined' && window !== null;\n}\nexports.isSupportedEnvironment = isSupportedEnvironment;\nfunction supportsInlineSVG() {\n    /* istanbul ignore next */\n    if (!document) {\n        return false;\n    }\n    var div = document.createElement('div');\n    div.innerHTML = '<svg />';\n    return !!div.firstChild && div.firstChild.namespaceURI === 'http://www.w3.org/2000/svg';\n}\nexports.supportsInlineSVG = supportsInlineSVG;\nfunction randomString(length) {\n    var letters = 'abcdefghijklmnopqrstuvwxyz';\n    var numbers = '1234567890';\n    var charset = \"\" + letters + letters.toUpperCase() + numbers;\n    var randomCharacter = function (character) {\n        return character[Math.floor(Math.random() * character.length)];\n    };\n    var R = '';\n    for (var i = 0; i < length; i++) {\n        R += randomCharacter(charset);\n    }\n    return R;\n}\nexports.randomString = randomString;\n/**\n *  Remove properties from an object\n */\nfunction removeProperties(input) {\n    var filter = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        filter[_i - 1] = arguments[_i];\n    }\n    var output = {};\n    for (var key in input) {\n        /* istanbul ignore else */\n        if ({}.hasOwnProperty.call(input, key)) {\n            if (!filter.includes(key)) {\n                output[key] = input[key];\n            }\n        }\n    }\n    return output;\n}\nexports.removeProperties = removeProperties;\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"script"}