{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KT2\\\\OneDrive\\\\Documents\\\\Buffh\\\\ssc.fe.cheatview-main\\\\src\\\\_metronic\\\\i18n\\\\i18nProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLang } from './Metronici18n';\nimport { IntlProvider } from 'react-intl';\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/de';\nimport '@formatjs/intl-relativetimeformat/locale-data/es';\nimport '@formatjs/intl-relativetimeformat/locale-data/fr';\nimport '@formatjs/intl-relativetimeformat/locale-data/ja';\nimport '@formatjs/intl-relativetimeformat/locale-data/zh';\nimport deMessages from './messages/de.json';\nimport enMessages from './messages/en.json';\nimport esMessages from './messages/es.json';\nimport frMessages from './messages/fr.json';\nimport jaMessages from './messages/ja.json';\nimport zhMessages from './messages/zh.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allMessages = {\n  de: deMessages,\n  en: enMessages,\n  es: esMessages,\n  fr: frMessages,\n  ja: jaMessages,\n  zh: zhMessages\n};\n\nconst I18nProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const locale = useLang();\n  const messages = allMessages[locale];\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: locale,\n    messages: messages,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(I18nProvider, \"dReTO0296CSZbayiNlOKjLlqWBo=\", false, function () {\n  return [useLang];\n});\n\n_c = I18nProvider;\nexport { I18nProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"I18nProvider\");","map":{"version":3,"names":["useLang","IntlProvider","deMessages","enMessages","esMessages","frMessages","jaMessages","zhMessages","allMessages","de","en","es","fr","ja","zh","I18nProvider","children","locale","messages"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/src/_metronic/i18n/i18nProvider.tsx"],"sourcesContent":["import {FC} from 'react'\nimport {useLang} from './Metronici18n'\nimport {IntlProvider} from 'react-intl'\nimport '@formatjs/intl-relativetimeformat/polyfill'\nimport '@formatjs/intl-relativetimeformat/locale-data/en'\nimport '@formatjs/intl-relativetimeformat/locale-data/de'\nimport '@formatjs/intl-relativetimeformat/locale-data/es'\nimport '@formatjs/intl-relativetimeformat/locale-data/fr'\nimport '@formatjs/intl-relativetimeformat/locale-data/ja'\nimport '@formatjs/intl-relativetimeformat/locale-data/zh'\n\nimport deMessages from './messages/de.json'\nimport enMessages from './messages/en.json'\nimport esMessages from './messages/es.json'\nimport frMessages from './messages/fr.json'\nimport jaMessages from './messages/ja.json'\nimport zhMessages from './messages/zh.json'\n\nconst allMessages = {\n  de: deMessages,\n  en: enMessages,\n  es: esMessages,\n  fr: frMessages,\n  ja: jaMessages,\n  zh: zhMessages,\n}\n\nconst I18nProvider: FC = ({children}) => {\n  const locale = useLang()\n  const messages = allMessages[locale]\n\n  return (\n    <IntlProvider locale={locale} messages={messages}>\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport {I18nProvider}\n"],"mappings":";;;AACA,SAAQA,OAAR,QAAsB,gBAAtB;AACA,SAAQC,YAAR,QAA2B,YAA3B;AACA,OAAO,4CAAP;AACA,OAAO,kDAAP;AACA,OAAO,kDAAP;AACA,OAAO,kDAAP;AACA,OAAO,kDAAP;AACA,OAAO,kDAAP;AACA,OAAO,kDAAP;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,WAAW,GAAG;EAClBC,EAAE,EAAEP,UADc;EAElBQ,EAAE,EAAEP,UAFc;EAGlBQ,EAAE,EAAEP,UAHc;EAIlBQ,EAAE,EAAEP,UAJc;EAKlBQ,EAAE,EAAEP,UALc;EAMlBQ,EAAE,EAAEP;AANc,CAApB;;AASA,MAAMQ,YAAgB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACvC,MAAMC,MAAM,GAAGjB,OAAO,EAAtB;EACA,MAAMkB,QAAQ,GAAGV,WAAW,CAACS,MAAD,CAA5B;EAEA,oBACE,QAAC,YAAD;IAAc,MAAM,EAAEA,MAAtB;IAA8B,QAAQ,EAAEC,QAAxC;IAAA,UACGF;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CATD;;GAAMD,Y;UACWf,O;;;KADXe,Y;AAWN,SAAQA,YAAR"},"metadata":{},"sourceType":"module"}