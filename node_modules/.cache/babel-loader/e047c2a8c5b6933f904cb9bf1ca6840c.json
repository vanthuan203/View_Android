{"ast":null,"code":"import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\n\nexport function FormatNumericToString(intlObject, x) {\n  var isNegative = x < 0 || SameValue(x, -0);\n\n  if (isNegative) {\n    x = -x;\n  }\n\n  var result;\n  var rourndingType = intlObject.roundingType;\n\n  switch (rourndingType) {\n    case 'significantDigits':\n      result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n      break;\n\n    case 'fractionDigits':\n      result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n      break;\n\n    default:\n      result = ToRawPrecision(x, 1, 2);\n\n      if (result.integerDigitsCount > 1) {\n        result = ToRawFixed(x, 0, 0);\n      }\n\n      break;\n  }\n\n  x = result.roundedNumber;\n  var string = result.formattedString;\n  var int = result.integerDigitsCount;\n  var minInteger = intlObject.minimumIntegerDigits;\n\n  if (int < minInteger) {\n    var forwardZeros = repeat('0', minInteger - int);\n    string = forwardZeros + string;\n  }\n\n  if (isNegative) {\n    x = -x;\n  }\n\n  return {\n    roundedNumber: x,\n    formattedString: string\n  };\n}","map":{"version":3,"names":["SameValue","ToRawPrecision","repeat","ToRawFixed","FormatNumericToString","intlObject","x","isNegative","result","rourndingType","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","integerDigitsCount","roundedNumber","string","formattedString","int","minInteger","minimumIntegerDigits","forwardZeros"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js"],"sourcesContent":["import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n    var isNegative = x < 0 || SameValue(x, -0);\n    if (isNegative) {\n        x = -x;\n    }\n    var result;\n    var rourndingType = intlObject.roundingType;\n    switch (rourndingType) {\n        case 'significantDigits':\n            result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n            break;\n        case 'fractionDigits':\n            result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n            break;\n        default:\n            result = ToRawPrecision(x, 1, 2);\n            if (result.integerDigitsCount > 1) {\n                result = ToRawFixed(x, 0, 0);\n            }\n            break;\n    }\n    x = result.roundedNumber;\n    var string = result.formattedString;\n    var int = result.integerDigitsCount;\n    var minInteger = intlObject.minimumIntegerDigits;\n    if (int < minInteger) {\n        var forwardZeros = repeat('0', minInteger - int);\n        string = forwardZeros + string;\n    }\n    if (isNegative) {\n        x = -x;\n    }\n    return { roundedNumber: x, formattedString: string };\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA;AACA;AACA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,UAA/B,EAA2CC,CAA3C,EAA8C;EACjD,IAAIC,UAAU,GAAGD,CAAC,GAAG,CAAJ,IAASN,SAAS,CAACM,CAAD,EAAI,CAAC,CAAL,CAAnC;;EACA,IAAIC,UAAJ,EAAgB;IACZD,CAAC,GAAG,CAACA,CAAL;EACH;;EACD,IAAIE,MAAJ;EACA,IAAIC,aAAa,GAAGJ,UAAU,CAACK,YAA/B;;EACA,QAAQD,aAAR;IACI,KAAK,mBAAL;MACID,MAAM,GAAGP,cAAc,CAACK,CAAD,EAAID,UAAU,CAACM,wBAAf,EAAyCN,UAAU,CAACO,wBAApD,CAAvB;MACA;;IACJ,KAAK,gBAAL;MACIJ,MAAM,GAAGL,UAAU,CAACG,CAAD,EAAID,UAAU,CAACQ,qBAAf,EAAsCR,UAAU,CAACS,qBAAjD,CAAnB;MACA;;IACJ;MACIN,MAAM,GAAGP,cAAc,CAACK,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAvB;;MACA,IAAIE,MAAM,CAACO,kBAAP,GAA4B,CAAhC,EAAmC;QAC/BP,MAAM,GAAGL,UAAU,CAACG,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;MACH;;MACD;EAZR;;EAcAA,CAAC,GAAGE,MAAM,CAACQ,aAAX;EACA,IAAIC,MAAM,GAAGT,MAAM,CAACU,eAApB;EACA,IAAIC,GAAG,GAAGX,MAAM,CAACO,kBAAjB;EACA,IAAIK,UAAU,GAAGf,UAAU,CAACgB,oBAA5B;;EACA,IAAIF,GAAG,GAAGC,UAAV,EAAsB;IAClB,IAAIE,YAAY,GAAGpB,MAAM,CAAC,GAAD,EAAMkB,UAAU,GAAGD,GAAnB,CAAzB;IACAF,MAAM,GAAGK,YAAY,GAAGL,MAAxB;EACH;;EACD,IAAIV,UAAJ,EAAgB;IACZD,CAAC,GAAG,CAACA,CAAL;EACH;;EACD,OAAO;IAAEU,aAAa,EAAEV,CAAjB;IAAoBY,eAAe,EAAED;EAArC,CAAP;AACH"},"metadata":{},"sourceType":"module"}