{"ast":null,"code":"import React,{createContext,useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var I18N_CONFIG_KEY=process.env.REACT_APP_I18N_CONFIG_KEY||'i18nConfig';var initialState={selectedLang:'en'};function getConfig(){var ls=localStorage.getItem(I18N_CONFIG_KEY);if(ls){try{return JSON.parse(ls);}catch(er){console.error(er);}}return initialState;}// Side effect\nexport function setLanguage(lang){localStorage.setItem(I18N_CONFIG_KEY,JSON.stringify({selectedLang:lang}));window.location.reload();}var I18nContext=/*#__PURE__*/createContext(initialState);var useLang=function useLang(){return useContext(I18nContext).selectedLang;};var MetronicI18nProvider=function MetronicI18nProvider(_ref){var children=_ref.children;var lang=getConfig();return/*#__PURE__*/_jsx(I18nContext.Provider,{value:lang,children:children});};export{MetronicI18nProvider,useLang};","map":{"version":3,"names":["React","createContext","useContext","I18N_CONFIG_KEY","process","env","REACT_APP_I18N_CONFIG_KEY","initialState","selectedLang","getConfig","ls","localStorage","getItem","JSON","parse","er","console","error","setLanguage","lang","setItem","stringify","window","location","reload","I18nContext","useLang","MetronicI18nProvider","children"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/src/_metronic/i18n/Metronici18n.tsx"],"sourcesContent":["import React, {FC, createContext, useContext} from 'react'\n\nconst I18N_CONFIG_KEY = process.env.REACT_APP_I18N_CONFIG_KEY || 'i18nConfig'\n\ntype Props = {\n  selectedLang: 'de' | 'en' | 'es' | 'fr' | 'ja' | 'zh'\n}\nconst initialState: Props = {\n  selectedLang: 'en',\n}\n\nfunction getConfig(): Props {\n  const ls = localStorage.getItem(I18N_CONFIG_KEY)\n  if (ls) {\n    try {\n      return JSON.parse(ls) as Props\n    } catch (er) {\n      console.error(er)\n    }\n  }\n  return initialState\n}\n\n// Side effect\nexport function setLanguage(lang: string) {\n  localStorage.setItem(I18N_CONFIG_KEY, JSON.stringify({selectedLang: lang}))\n  window.location.reload()\n}\n\nconst I18nContext = createContext<Props>(initialState)\n\nconst useLang = () => {\n  return useContext(I18nContext).selectedLang\n}\n\nconst MetronicI18nProvider: FC = ({children}) => {\n  const lang = getConfig()\n  return <I18nContext.Provider value={lang}>{children}</I18nContext.Provider>\n}\n\nexport {MetronicI18nProvider, useLang}\n"],"mappings":"AAAA,MAAOA,MAAP,EAAmBC,aAAnB,CAAkCC,UAAlC,KAAmD,OAAnD,C,2CAEA,GAAMC,gBAAe,CAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,EAAyC,YAAjE,CAKA,GAAMC,aAAmB,CAAG,CAC1BC,YAAY,CAAE,IADY,CAA5B,CAIA,QAASC,UAAT,EAA4B,CAC1B,GAAMC,GAAE,CAAGC,YAAY,CAACC,OAAb,CAAqBT,eAArB,CAAX,CACA,GAAIO,EAAJ,CAAQ,CACN,GAAI,CACF,MAAOG,KAAI,CAACC,KAAL,CAAWJ,EAAX,CAAP,CACD,CAAC,MAAOK,EAAP,CAAW,CACXC,OAAO,CAACC,KAAR,CAAcF,EAAd,EACD,CACF,CACD,MAAOR,aAAP,CACD,CAED;AACA,MAAO,SAASW,YAAT,CAAqBC,IAArB,CAAmC,CACxCR,YAAY,CAACS,OAAb,CAAqBjB,eAArB,CAAsCU,IAAI,CAACQ,SAAL,CAAe,CAACb,YAAY,CAAEW,IAAf,CAAf,CAAtC,EACAG,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACD,CAED,GAAMC,YAAW,cAAGxB,aAAa,CAAQM,YAAR,CAAjC,CAEA,GAAMmB,QAAO,CAAG,QAAVA,QAAU,EAAM,CACpB,MAAOxB,WAAU,CAACuB,WAAD,CAAV,CAAwBjB,YAA/B,CACD,CAFD,CAIA,GAAMmB,qBAAwB,CAAG,QAA3BA,qBAA2B,MAAgB,IAAdC,SAAc,MAAdA,QAAc,CAC/C,GAAMT,KAAI,CAAGV,SAAS,EAAtB,CACA,mBAAO,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEU,IAA7B,UAAoCS,QAApC,EAAP,CACD,CAHD,CAKA,OAAQD,oBAAR,CAA8BD,OAA9B"},"metadata":{},"sourceType":"module"}