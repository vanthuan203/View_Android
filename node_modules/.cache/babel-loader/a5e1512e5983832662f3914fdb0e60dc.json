{"ast":null,"code":"import axios from 'axios';\nimport { postWithoutTokenFunciton, getFunciton } from 'utils/ApiHelper';\nconst API_URL = process.env.REACT_APP_API_URL;\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`; // Server should return AuthModel\n\nexport async function login(email, password) {\n  const res = await postWithoutTokenFunciton(\"auth/login\", {\n    username: email,\n    password: password\n  });\n  return res;\n} // Server should return AuthModel\n\nexport async function register(username, password) {\n  const res = await postWithoutTokenFunciton(\"api/register\", {\n    username: username,\n    password: password\n  });\n  return res;\n} // Server should return object => { result: boolean } (Is Email in DB)\n\nexport function requestPassword(email) {\n  return axios.get(REQUEST_PASSWORD_URL, {\n    params: {\n      email: email\n    }\n  });\n}\nexport async function getUserByToken() {\n  // Authorization head should be fulfilled in interceptor.\n  // Check common redux folder => setupAxios\n  const res = await getFunciton(\"auth/verify_token\");\n  return res;\n}","map":{"version":3,"names":["axios","postWithoutTokenFunciton","getFunciton","API_URL","process","env","REACT_APP_API_URL","REQUEST_PASSWORD_URL","login","email","password","res","username","register","requestPassword","get","params","getUserByToken"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/src/app/modules/auth/redux/AuthCRUD.ts"],"sourcesContent":["import axios from 'axios'\nimport { postWithoutTokenFunciton,getFunciton } from 'utils/ApiHelper'\nconst API_URL = process.env.REACT_APP_API_URL\nexport const REQUEST_PASSWORD_URL = `${API_URL}/forgot_password`\n// Server should return AuthModel\nexport async function login(email: string, password: string) {\n  const res = await postWithoutTokenFunciton(\"auth/login\", {\n    username: email,\n    password: password,\n  })\n  return res\n}\n\n// Server should return AuthModel\nexport async function register(username: string, password: string) {\n  const res = await postWithoutTokenFunciton(\"api/register\", {\n    username: username,\n    password: password,\n  })\n  return res\n}\n\n// Server should return object => { result: boolean } (Is Email in DB)\nexport function requestPassword(email: string) {\n  return axios.get<{ result: boolean }>(REQUEST_PASSWORD_URL, {\n    params: {\n      email: email,\n    },\n  })\n}\n\nexport async function getUserByToken() {\n  // Authorization head should be fulfilled in interceptor.\n  // Check common redux folder => setupAxios\n  const res:any = await getFunciton(\"auth/verify_token\")\n  return res\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,EAAkCC,WAAlC,QAAqD,iBAArD;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,OAAO,MAAMC,oBAAoB,GAAI,GAAEJ,OAAQ,kBAAxC,C,CACP;;AACA,OAAO,eAAeK,KAAf,CAAqBC,KAArB,EAAoCC,QAApC,EAAsD;EAC3D,MAAMC,GAAG,GAAG,MAAMV,wBAAwB,CAAC,YAAD,EAAe;IACvDW,QAAQ,EAAEH,KAD6C;IAEvDC,QAAQ,EAAEA;EAF6C,CAAf,CAA1C;EAIA,OAAOC,GAAP;AACD,C,CAED;;AACA,OAAO,eAAeE,QAAf,CAAwBD,QAAxB,EAA0CF,QAA1C,EAA4D;EACjE,MAAMC,GAAG,GAAG,MAAMV,wBAAwB,CAAC,cAAD,EAAiB;IACzDW,QAAQ,EAAEA,QAD+C;IAEzDF,QAAQ,EAAEA;EAF+C,CAAjB,CAA1C;EAIA,OAAOC,GAAP;AACD,C,CAED;;AACA,OAAO,SAASG,eAAT,CAAyBL,KAAzB,EAAwC;EAC7C,OAAOT,KAAK,CAACe,GAAN,CAA+BR,oBAA/B,EAAqD;IAC1DS,MAAM,EAAE;MACNP,KAAK,EAAEA;IADD;EADkD,CAArD,CAAP;AAKD;AAED,OAAO,eAAeQ,cAAf,GAAgC;EACrC;EACA;EACA,MAAMN,GAAO,GAAG,MAAMT,WAAW,CAAC,mBAAD,CAAjC;EACA,OAAOS,GAAP;AACD"},"metadata":{},"sourceType":"module"}