{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SingularRelativeTimeUnit = void 0;\n\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\n\n\nfunction SingularRelativeTimeUnit(unit) {\n  (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(unit) === 'String', 'unit must be a string');\n  if (unit === 'seconds') return 'second';\n  if (unit === 'minutes') return 'minute';\n  if (unit === 'hours') return 'hour';\n  if (unit === 'days') return 'day';\n  if (unit === 'weeks') return 'week';\n  if (unit === 'months') return 'month';\n  if (unit === 'quarters') return 'quarter';\n  if (unit === 'years') return 'year';\n\n  if (unit !== 'second' && unit !== 'minute' && unit !== 'hour' && unit !== 'day' && unit !== 'week' && unit !== 'month' && unit !== 'quarter' && unit !== 'year') {\n    throw new RangeError('invalid unit');\n  }\n\n  return unit;\n}\n\nexports.SingularRelativeTimeUnit = SingularRelativeTimeUnit;","map":{"version":3,"names":["Object","defineProperty","exports","value","SingularRelativeTimeUnit","ecma402_abstract_1","require","unit","invariant","Type","RangeError"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/node_modules/@formatjs/intl-relativetimeformat/abstract/SingularRelativeTimeUnit.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SingularRelativeTimeUnit = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n/**\n * https://tc39.es/proposal-intl-relative-time/#sec-singularrelativetimeunit\n * @param unit\n */\nfunction SingularRelativeTimeUnit(unit) {\n    (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(unit) === 'String', 'unit must be a string');\n    if (unit === 'seconds')\n        return 'second';\n    if (unit === 'minutes')\n        return 'minute';\n    if (unit === 'hours')\n        return 'hour';\n    if (unit === 'days')\n        return 'day';\n    if (unit === 'weeks')\n        return 'week';\n    if (unit === 'months')\n        return 'month';\n    if (unit === 'quarters')\n        return 'quarter';\n    if (unit === 'years')\n        return 'year';\n    if (unit !== 'second' &&\n        unit !== 'minute' &&\n        unit !== 'hour' &&\n        unit !== 'day' &&\n        unit !== 'week' &&\n        unit !== 'month' &&\n        unit !== 'quarter' &&\n        unit !== 'year') {\n        throw new RangeError('invalid unit');\n    }\n    return unit;\n}\nexports.SingularRelativeTimeUnit = SingularRelativeTimeUnit;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,wBAAR,GAAmC,KAAK,CAAxC;;AACA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;AACA;AACA;AACA;AACA;;;AACA,SAASF,wBAAT,CAAkCG,IAAlC,EAAwC;EACpC,CAAC,GAAGF,kBAAkB,CAACG,SAAvB,EAAkC,CAAC,GAAGH,kBAAkB,CAACI,IAAvB,EAA6BF,IAA7B,MAAuC,QAAzE,EAAmF,uBAAnF;EACA,IAAIA,IAAI,KAAK,SAAb,EACI,OAAO,QAAP;EACJ,IAAIA,IAAI,KAAK,SAAb,EACI,OAAO,QAAP;EACJ,IAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;EACJ,IAAIA,IAAI,KAAK,MAAb,EACI,OAAO,KAAP;EACJ,IAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;EACJ,IAAIA,IAAI,KAAK,QAAb,EACI,OAAO,OAAP;EACJ,IAAIA,IAAI,KAAK,UAAb,EACI,OAAO,SAAP;EACJ,IAAIA,IAAI,KAAK,OAAb,EACI,OAAO,MAAP;;EACJ,IAAIA,IAAI,KAAK,QAAT,IACAA,IAAI,KAAK,QADT,IAEAA,IAAI,KAAK,MAFT,IAGAA,IAAI,KAAK,KAHT,IAIAA,IAAI,KAAK,MAJT,IAKAA,IAAI,KAAK,OALT,IAMAA,IAAI,KAAK,SANT,IAOAA,IAAI,KAAK,MAPb,EAOqB;IACjB,MAAM,IAAIG,UAAJ,CAAe,cAAf,CAAN;EACH;;EACD,OAAOH,IAAP;AACH;;AACDL,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC"},"metadata":{},"sourceType":"script"}