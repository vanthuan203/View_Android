{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { MenuComponent, DrawerComponent, ScrollComponent, ScrollTopComponent, StickyComponent, ToggleComponent, SwapperComponent } from '../assets/ts/components';\nimport { useLayout } from './core';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MasterInit() {\n  _s();\n\n  const {\n    config\n  } = useLayout();\n  const isFirstRun = useRef(true);\n\n  const pluginsInitialization = () => {\n    isFirstRun.current = false;\n    setTimeout(() => {\n      ToggleComponent.bootstrap();\n      ScrollTopComponent.bootstrap();\n      DrawerComponent.bootstrap();\n      StickyComponent.bootstrap();\n      MenuComponent.bootstrap();\n      ScrollComponent.bootstrap();\n      SwapperComponent.bootstrap();\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      pluginsInitialization();\n    }\n  }, [config]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MasterInit, \"sMN/w0Sa8nCWWZsbp5zLlmKxwWc=\", false, function () {\n  return [useLayout];\n});\n\n_c = MasterInit;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasterInit\");","map":{"version":3,"names":["useEffect","useRef","MenuComponent","DrawerComponent","ScrollComponent","ScrollTopComponent","StickyComponent","ToggleComponent","SwapperComponent","useLayout","MasterInit","config","isFirstRun","pluginsInitialization","current","setTimeout","bootstrap"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/src/_metronic/layout/MasterInit.tsx"],"sourcesContent":["import {useEffect, useRef} from 'react'\nimport {\n  MenuComponent,\n  DrawerComponent,\n  ScrollComponent,\n  ScrollTopComponent,\n  StickyComponent,\n  ToggleComponent,\n  SwapperComponent,\n} from '../assets/ts/components'\n\nimport {useLayout} from './core'\n\nexport function MasterInit() {\n  const {config} = useLayout()\n  const isFirstRun = useRef(true)\n  const pluginsInitialization = () => {\n    isFirstRun.current = false\n    setTimeout(() => {\n      ToggleComponent.bootstrap()\n      ScrollTopComponent.bootstrap()\n      DrawerComponent.bootstrap()\n      StickyComponent.bootstrap()\n      MenuComponent.bootstrap()\n      ScrollComponent.bootstrap()\n      SwapperComponent.bootstrap()\n    }, 500)\n  }\n\n  useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false\n      pluginsInitialization()\n    }\n  }, [config])\n\n  return <></>\n}\n"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,QAAgC,OAAhC;AACA,SACEC,aADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,gBAPF,QAQO,yBARP;AAUA,SAAQC,SAAR,QAAwB,QAAxB;;;AAEA,OAAO,SAASC,UAAT,GAAsB;EAAA;;EAC3B,MAAM;IAACC;EAAD,IAAWF,SAAS,EAA1B;EACA,MAAMG,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;;EACA,MAAMY,qBAAqB,GAAG,MAAM;IAClCD,UAAU,CAACE,OAAX,GAAqB,KAArB;IACAC,UAAU,CAAC,MAAM;MACfR,eAAe,CAACS,SAAhB;MACAX,kBAAkB,CAACW,SAAnB;MACAb,eAAe,CAACa,SAAhB;MACAV,eAAe,CAACU,SAAhB;MACAd,aAAa,CAACc,SAAd;MACAZ,eAAe,CAACY,SAAhB;MACAR,gBAAgB,CAACQ,SAAjB;IACD,CARS,EAQP,GARO,CAAV;EASD,CAXD;;EAaAhB,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,CAACE,OAAf,EAAwB;MACtBF,UAAU,CAACE,OAAX,GAAqB,KAArB;MACAD,qBAAqB;IACtB;EACF,CALQ,EAKN,CAACF,MAAD,CALM,CAAT;EAOA,oBAAO,qCAAP;AACD;;GAxBeD,U;UACGD,S;;;KADHC,U"},"metadata":{},"sourceType":"module"}