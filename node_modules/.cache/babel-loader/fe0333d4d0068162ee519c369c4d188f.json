{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KT2\\\\Desktop\\\\ssc.fe.cheatview-main\\\\src\\\\index.tsx\";\n\n/**\n * TIP: Replace this style import with dark styles to enable dark mode\n *\n * import './_metronic/assets/sass/style.dark.scss'\n *\n * TIP: Replace this style import with rtl styles to enable rtl mode\n *\n * import './_metronic/assets/css/style.rtl.css'\n **/\nimport './_metronic/assets/sass/style.scss';\nimport './_metronic/assets/sass/style.react.scss';\nimport 'antd/dist/antd.css';\nimport * as _redux from './setup';\nimport { Chart, registerables } from 'chart.js';\nimport store, { persistor } from './setup/redux/Store'; // Apps\n\nimport { App } from './app/App';\nimport { MetronicI18nProvider } from './_metronic/i18n/Metronici18n'; // Redux\n// https://github.com/rt2zz/redux-persist\n\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Axios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/**\n * Base URL of the website.\n *\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\n */\nconst {\n  PUBLIC_URL\n} = process.env;\n/**\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\n * basic Metronic mocks and returns it.\n *\n * @see https://github.com/ctimmerm/axios-mock-adapter\n */\n\n/**\n * Inject Metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n\n_redux.setupAxios(store);\n\nChart.register(...registerables);\nReactDOM.render( /*#__PURE__*/_jsxDEV(MetronicI18nProvider, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      persistor: persistor,\n      loading: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0110ang t\\u1EA3i...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 51\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(App, {\n        basename: PUBLIC_URL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"names":["_redux","Chart","registerables","store","persistor","App","MetronicI18nProvider","PersistGate","Provider","React","ReactDOM","PUBLIC_URL","process","env","setupAxios","register","render","document","getElementById"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/src/index.tsx"],"sourcesContent":["/**\n * TIP: Replace this style import with dark styles to enable dark mode\n *\n * import './_metronic/assets/sass/style.dark.scss'\n *\n * TIP: Replace this style import with rtl styles to enable rtl mode\n *\n * import './_metronic/assets/css/style.rtl.css'\n **/\nimport './_metronic/assets/sass/style.scss'\nimport './_metronic/assets/sass/style.react.scss'\nimport 'antd/dist/antd.css';\n\nimport * as _redux from './setup'\n\nimport {Chart, registerables} from 'chart.js'\nimport store, {persistor} from './setup/redux/Store'\n\n// Apps\nimport {App} from './app/App'\nimport {MetronicI18nProvider} from './_metronic/i18n/Metronici18n'\n// Redux\n// https://github.com/rt2zz/redux-persist\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {Provider} from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// Axios\nimport axios from 'axios'\n\n/**\n * Base URL of the website.\n *\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\n */\nconst {PUBLIC_URL} = process.env\n/**\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\n * basic Metronic mocks and returns it.\n *\n * @see https://github.com/ctimmerm/axios-mock-adapter\n */\n\n/**\n * Inject Metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n_redux.setupAxios(store)\n\nChart.register(...registerables)\n\nReactDOM.render(\n  <MetronicI18nProvider>\n    <Provider store={store}>\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\n      <PersistGate persistor={persistor} loading={<div>Đang tải...</div>}>\n        <App basename={PUBLIC_URL} />\n      </PersistGate>\n    </Provider>\n  </MetronicI18nProvider>,\n  document.getElementById('root')\n)\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,oCAAP;AACA,OAAO,0CAAP;AACA,OAAO,oBAAP;AAEA,OAAO,KAAKA,MAAZ,MAAwB,SAAxB;AAEA,SAAQC,KAAR,EAAeC,aAAf,QAAmC,UAAnC;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,qBAA/B,C,CAEA;;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,SAAQC,oBAAR,QAAmC,+BAAnC,C,CACA;AACA;;AACA,SAAQC,WAAR,QAA0B,iCAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM;EAACC;AAAD,IAAeC,OAAO,CAACC,GAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACAb,MAAM,CAACc,UAAP,CAAkBX,KAAlB;;AAEAF,KAAK,CAACc,QAAN,CAAe,GAAGb,aAAlB;AAEAQ,QAAQ,CAACM,MAAT,eACE,QAAC,oBAAD;EAAA,uBACE,QAAC,QAAD;IAAU,KAAK,EAAEb,KAAjB;IAAA,uBAEE,QAAC,WAAD;MAAa,SAAS,EAAEC,SAAxB;MAAmC,OAAO,eAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA5C;MAAA,uBACE,QAAC,GAAD;QAAK,QAAQ,EAAEO;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,EASEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF"},"metadata":{},"sourceType":"module"}