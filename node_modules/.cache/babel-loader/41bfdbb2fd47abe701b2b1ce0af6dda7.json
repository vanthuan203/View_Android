{"ast":null,"code":"import { DataUtil, ElementStyleUtil, EventHandlerUtil, getUniqueIdWithPrefix, getAttributeValueByBreakpoint } from '../_utils/index';\nconst defaultFeedbackOptions = {\n  width: 100,\n  placement: 'top-center',\n  content: '',\n  type: 'popup'\n};\n\nclass FeedbackComponent {\n  constructor(_element, options) {\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this.shown = void 0;\n\n    this._handlers = () => {\n      this.element.addEventListener('click', e => {\n        e.preventDefault();\n\n        this._go();\n      });\n    };\n\n    this._go = () => {};\n\n    this.showPopup = () => {\n      this.element = document.createElement('DIV');\n      this.element.classList.add('feedback feedback-popup');\n      this.element.innerHTML = this.options.content || '';\n\n      if (this.options.placement === 'top-center') {\n        this.setPopupTopCenterPosition();\n      }\n\n      document.body.appendChild(this.element);\n      this.element.classList.add('feedback-shown');\n      this.shown = true;\n    };\n\n    this.setPopupTopCenterPosition = () => {\n      var _this$options$width;\n\n      const width = getAttributeValueByBreakpoint(((_this$options$width = this.options.width) === null || _this$options$width === void 0 ? void 0 : _this$options$width.toString()) || '0');\n      const height = ElementStyleUtil.get(this.element, 'height');\n      this.element.classList.add('feedback-top-center');\n      ElementStyleUtil.set(this.element, 'width', width);\n      ElementStyleUtil.set(this.element, 'left', '50%');\n      ElementStyleUtil.set(this.element, 'top', '-' + height);\n    };\n\n    this.hidePopup = () => {\n      this.element.remove();\n    };\n\n    this.show = () => {\n      if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\n        return;\n      }\n\n      if (this.options.type === 'popup') {\n        this.showPopup();\n      }\n\n      EventHandlerUtil.trigger(this.element, 'kt.feedback.shown');\n      return this;\n    };\n\n    this.hide = () => {\n      if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\n        return;\n      }\n\n      if (this.options.type === 'popup') {\n        this.hidePopup();\n      }\n\n      this.shown = false;\n      EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden');\n      return this;\n    };\n\n    this.isShown = () => {\n      return this.isShown;\n    };\n\n    this.getElement = () => {\n      return this.element;\n    };\n\n    this.on = (name, handler) => {\n      return EventHandlerUtil.on(this.element, name, handler);\n    };\n\n    this.one = (name, handler) => {\n      return EventHandlerUtil.one(this.element, name, handler);\n    };\n\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n\n    this.trigger = (name, event) => {\n      return EventHandlerUtil.trigger(this.element, name, event);\n    };\n\n    this.element = _element;\n    this.options = Object.assign(defaultFeedbackOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('feedback');\n    this.shown = false; // Event handlers\n\n    this._handlers(); // will add in the show popup\n\n\n    DataUtil.set(this.element, 'feedback', this);\n  }\n\n  // Create Instances\n  static createInstances(selector) {\n    throw new Error('not implemented');\n  } // Static methods\n\n\n  static hasInstace(element) {\n    throw new Error('not implemented');\n  }\n\n  static getInstance(element) {\n    throw new Error('not implemented');\n  }\n\n  static bootstrap() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-Feedback]';\n    throw new Error('not implemented');\n  }\n\n}\n\nexport { FeedbackComponent, defaultFeedbackOptions };","map":{"version":3,"names":["DataUtil","ElementStyleUtil","EventHandlerUtil","getUniqueIdWithPrefix","getAttributeValueByBreakpoint","defaultFeedbackOptions","width","placement","content","type","FeedbackComponent","constructor","_element","options","element","instanceUid","shown","_handlers","addEventListener","e","preventDefault","_go","showPopup","document","createElement","classList","add","innerHTML","setPopupTopCenterPosition","body","appendChild","toString","height","get","set","hidePopup","remove","show","trigger","hide","isShown","getElement","on","name","handler","one","off","event","Object","assign","createInstances","selector","Error","hasInstace","getInstance","bootstrap","attr"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/src/_metronic/assets/ts/components/_FeedbackComponent.ts"],"sourcesContent":["import {\n  DataUtil,\n  ElementStyleUtil,\n  EventHandlerUtil,\n  getUniqueIdWithPrefix,\n  getAttributeValueByBreakpoint,\n} from '../_utils/index'\n\nexport interface FeedbackOptions {\n  width?: number\n  placement?: string\n  content?: string\n  type?: string\n}\n\nconst defaultFeedbackOptions: FeedbackOptions = {\n  width: 100,\n  placement: 'top-center',\n  content: '',\n  type: 'popup',\n}\n\nclass FeedbackComponent {\n  element: HTMLElement\n  options: FeedbackOptions\n  instanceUid: string\n  shown: boolean\n\n  constructor(_element: HTMLElement, options: FeedbackOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultFeedbackOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('feedback')\n    this.shown = false\n\n    // Event handlers\n    this._handlers() // will add in the show popup\n    DataUtil.set(this.element, 'feedback', this)\n  }\n\n  private _handlers = () => {\n    this.element.addEventListener('click', (e: Event) => {\n      e.preventDefault()\n      this._go()\n    })\n  }\n\n  private _go = () => {}\n\n  private showPopup = () => {\n    this.element = document.createElement('DIV')\n\n    this.element.classList.add('feedback feedback-popup')\n    this.element.innerHTML = this.options.content || ''\n\n    if (this.options.placement === 'top-center') {\n      this.setPopupTopCenterPosition()\n    }\n\n    document.body.appendChild(this.element)\n    this.element.classList.add('feedback-shown')\n    this.shown = true\n  }\n\n  private setPopupTopCenterPosition = () => {\n    const width = getAttributeValueByBreakpoint(this.options.width?.toString() || '0')\n    const height = ElementStyleUtil.get(this.element, 'height')\n    this.element.classList.add('feedback-top-center')\n    ElementStyleUtil.set(this.element, 'width', width)\n    ElementStyleUtil.set(this.element, 'left', '50%')\n    ElementStyleUtil.set(this.element, 'top', '-' + height)\n  }\n\n  private hidePopup = () => {\n    this.element.remove()\n  }\n\n  ///////////////////////\n  // ** Public API  ** //\n  ///////////////////////\n  public show = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\n      return\n    }\n\n    if (this.options.type === 'popup') {\n      this.showPopup()\n    }\n\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.shown')\n\n    return this\n  }\n\n  public hide = () => {\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\n      return\n    }\n\n    if (this.options.type === 'popup') {\n      this.hidePopup()\n    }\n\n    this.shown = false\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden')\n    return this\n  }\n\n  public isShown = () => {\n    return this.isShown\n  }\n\n  public getElement = () => {\n    return this.element\n  }\n\n  // Event API\n  public on = (name: string, handler: Function) => {\n    return EventHandlerUtil.on(this.element, name, handler)\n  }\n\n  public one = (name: string, handler: Function) => {\n    return EventHandlerUtil.one(this.element, name, handler)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string, event: Event) => {\n    return EventHandlerUtil.trigger(this.element, name, event)\n  }\n\n  // Create Instances\n  public static createInstances(selector: string) {\n    throw new Error('not implemented')\n  }\n\n  // Static methods\n  public static hasInstace(element: HTMLElement) {\n    throw new Error('not implemented')\n  }\n\n  public static getInstance(element: HTMLElement) {\n    throw new Error('not implemented')\n  }\n\n  public static bootstrap(attr: string = '[data-Feedback]') {\n    throw new Error('not implemented')\n  }\n}\n\nexport {FeedbackComponent, defaultFeedbackOptions}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}