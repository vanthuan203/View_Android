{"ast":null,"code":"import { DataUtil } from './_DataUtil';\nimport { getUniqueIdWithPrefix } from './_TypesHelpers';\nexport class EventHandlerUtil {\n  static setEventMetasByName(name, metas) {\n    EventHandlerUtil.store.set(name, metas);\n  }\n\n  static getEventMetasByName(name) {\n    return EventHandlerUtil.store.get(name);\n  }\n\n  static setEventMetaByNameAndHandlerId(name, handlerId, meta) {\n    let metas = EventHandlerUtil.getEventMetasByName(name);\n\n    if (!metas) {\n      metas = new Map();\n    }\n\n    metas.set(handlerId, meta);\n    EventHandlerUtil.setEventMetasByName(name, metas);\n  }\n\n  static getEventsMetaByHandlerId(name, handlerId) {\n    const metas = EventHandlerUtil.store.get(name);\n\n    if (!metas) {\n      return;\n    }\n\n    return metas.get(handlerId);\n  }\n\n  static setFiredByNameAndHandlerId(name, handerId, fired) {\n    const meta = EventHandlerUtil.getEventsMetaByHandlerId(name, handerId);\n\n    if (!meta) {\n      return;\n    }\n\n    meta.fired = fired;\n    EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handerId, meta);\n  }\n\n  static addEvent(element, name, callback) {\n    let one = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    const handlerId = getUniqueIdWithPrefix('event');\n    DataUtil.set(element, name, handlerId);\n    const meta = {\n      name: name,\n      callback: callback,\n      one: one,\n      fired: false\n    };\n    EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handlerId, meta);\n  }\n\n  static removeEvent(element, name) {\n    const handlerId = DataUtil.get(element, name);\n\n    if (!handlerId) {\n      return;\n    }\n\n    const metas = EventHandlerUtil.getEventMetasByName(name);\n\n    if (!metas) {\n      return;\n    }\n\n    metas.delete(handlerId);\n    EventHandlerUtil.setEventMetasByName(name, metas);\n  }\n\n  static trigger(element, name, target, e) {\n    if (DataUtil.has(element, name)) {\n      const handlerId = DataUtil.get(element, name);\n\n      if (!handlerId) {\n        return undefined;\n      }\n\n      const handler = EventHandlerUtil.getEventsMetaByHandlerId(name, handlerId);\n\n      if (handler) {\n        if (handler.name === name) {\n          if (handler.one === true) {\n            if (handler.fired === false) {\n              EventHandlerUtil.setFiredByNameAndHandlerId(name, handlerId, true);\n              return handler.callback.call(this, target, e);\n            }\n          } else {\n            return handler.callback.call(this, target, e);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  static one(element, name, callBack) {\n    EventHandlerUtil.addEvent(element, name, callBack, true);\n  }\n\n  static off(element, name) {\n    EventHandlerUtil.removeEvent(element, name);\n  }\n\n}\nEventHandlerUtil.store = new Map();\n\nEventHandlerUtil.on = function (element, name, callBack) {\n  EventHandlerUtil.addEvent(element, name, callBack, false);\n};","map":{"version":3,"names":["DataUtil","getUniqueIdWithPrefix","EventHandlerUtil","setEventMetasByName","name","metas","store","set","getEventMetasByName","get","setEventMetaByNameAndHandlerId","handlerId","meta","Map","getEventsMetaByHandlerId","setFiredByNameAndHandlerId","handerId","fired","addEvent","element","callback","one","removeEvent","delete","trigger","target","e","has","undefined","handler","call","callBack","off","on"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/src/_metronic/assets/ts/_utils/EventHandlerUtil.ts"],"sourcesContent":["import {DataUtil} from './_DataUtil'\nimport {getUniqueIdWithPrefix} from './_TypesHelpers'\n\nexport interface EventMeta {\n  name: string\n  callback: Function\n  one: boolean\n  fired: boolean\n}\n\nexport class EventHandlerUtil {\n  static store: Map<string, Map<string, EventMeta>> = new Map()\n\n  private static setEventMetasByName(name: string, metas: Map<string, EventMeta>): void {\n    EventHandlerUtil.store.set(name, metas)\n  }\n\n  private static getEventMetasByName(name: string): Map<string, EventMeta> | undefined {\n    return EventHandlerUtil.store.get(name)\n  }\n\n  private static setEventMetaByNameAndHandlerId(\n    name: string,\n    handlerId: string,\n    meta: EventMeta\n  ): void {\n    let metas = EventHandlerUtil.getEventMetasByName(name)\n    if (!metas) {\n      metas = new Map()\n    }\n\n    metas.set(handlerId, meta)\n    EventHandlerUtil.setEventMetasByName(name, metas)\n  }\n\n  private static getEventsMetaByHandlerId(name: string, handlerId: string): EventMeta | undefined {\n    const metas = EventHandlerUtil.store.get(name)\n    if (!metas) {\n      return\n    }\n\n    return metas.get(handlerId)\n  }\n\n  private static setFiredByNameAndHandlerId(name: string, handerId: string, fired: boolean): void {\n    const meta = EventHandlerUtil.getEventsMetaByHandlerId(name, handerId)\n    if (!meta) {\n      return\n    }\n\n    meta.fired = fired\n    EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handerId, meta)\n  }\n\n  private static addEvent(\n    element: HTMLElement,\n    name: string,\n    callback: Function,\n    one: boolean = false\n  ) {\n    const handlerId = getUniqueIdWithPrefix('event')\n    DataUtil.set(element, name, handlerId)\n    const meta: EventMeta = {\n      name: name,\n      callback: callback,\n      one: one,\n      fired: false,\n    }\n\n    EventHandlerUtil.setEventMetaByNameAndHandlerId(name, handlerId, meta)\n  }\n\n  private static removeEvent(element: HTMLElement, name: string) {\n    const handlerId = DataUtil.get(element, name)\n    if (!handlerId) {\n      return\n    }\n\n    const metas = EventHandlerUtil.getEventMetasByName(name)\n    if (!metas) {\n      return\n    }\n\n    metas.delete(handlerId)\n    EventHandlerUtil.setEventMetasByName(name, metas)\n  }\n\n  public static trigger(element: HTMLElement, name: string, target?: any, e?: Event) {\n    if (DataUtil.has(element, name)) {\n      const handlerId = DataUtil.get(element, name)\n      if (!handlerId) {\n        return undefined\n      }\n\n      const handler = EventHandlerUtil.getEventsMetaByHandlerId(name, handlerId)\n      if (handler) {\n        if (handler.name === name) {\n          if (handler.one === true) {\n            if (handler.fired === false) {\n              EventHandlerUtil.setFiredByNameAndHandlerId(name, handlerId, true)\n              return handler.callback.call(this, target, e)\n            }\n          } else {\n            return handler.callback.call(this, target, e)\n          }\n        }\n      }\n    }\n\n    return null\n  }\n\n  public static on = function (element: HTMLElement, name: string, callBack: Function): void {\n    EventHandlerUtil.addEvent(element, name, callBack, false)\n  }\n\n  public static one(element: HTMLElement, name: string, callBack: Function): void {\n    EventHandlerUtil.addEvent(element, name, callBack, true)\n  }\n\n  public static off(element: HTMLElement, name: string): void {\n    EventHandlerUtil.removeEvent(element, name)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}