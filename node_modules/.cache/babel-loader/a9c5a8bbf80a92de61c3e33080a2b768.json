{"ast":null,"code":"import { useState, useEffect, useCallback } from 'react';\nimport uniq from 'lodash/uniq';\nimport remove from 'lodash/remove';\nimport slice from 'lodash/slice';\nimport { flattenTree } from '../utils/treeUtils';\nimport { attachParent } from '../utils/attachParent';\n/**\n * Get all parents of a node\n * @param node\n */\n\nexport var getParents = function getParents(node) {\n  var parents = [];\n\n  if (!node.parent) {\n    return parents;\n  }\n\n  parents.push(node.parent);\n  parents = parents.concat(getParents(node.parent));\n  return parents;\n};\n/**\n * Check if any child nodes are selected.\n * @param node\n * @param value\n * @param itemKeys\n */\n\nexport var isSomeChildChecked = function isSomeChildChecked(node, value, itemKeys) {\n  var childrenKey = itemKeys.childrenKey,\n      valueKey = itemKeys.valueKey;\n\n  if (!node[childrenKey] || !value) {\n    return false;\n  }\n\n  return node[childrenKey].some(function (child) {\n    var _child$childrenKey;\n\n    if (value.some(function (n) {\n      return n === child[valueKey];\n    })) {\n      return true;\n    }\n\n    if ((_child$childrenKey = child[childrenKey]) !== null && _child$childrenKey !== void 0 && _child$childrenKey.length) {\n      return isSomeChildChecked(child, value, itemKeys);\n    }\n\n    return false;\n  });\n};\n/**\n * Check if the parent is selected.\n * @param node\n * @param value\n * @param itemKeys\n */\n\nexport var isSomeParentChecked = function isSomeParentChecked(node, value, itemKeys) {\n  var valueKey = itemKeys.valueKey;\n\n  if (!value) {\n    return false;\n  }\n\n  if (value.some(function (n) {\n    return n === node[valueKey];\n  })) {\n    return true;\n  }\n\n  if (node.parent) {\n    return isSomeParentChecked(node.parent, value, itemKeys);\n  }\n\n  return false;\n};\nexport var getOtherItemValuesByUnselectChild = function getOtherItemValuesByUnselectChild(itemNode, value, itemKeys) {\n  var valueKey = itemKeys.valueKey,\n      childrenKey = itemKeys.childrenKey;\n  var parentValues = [];\n  var itemValues = []; // Find the parent node of the current node by value\n\n  function findParent(item) {\n    parentValues.push(item[valueKey]);\n\n    if (value.some(function (v) {\n      return v === item[valueKey];\n    })) {\n      return item;\n    }\n\n    if (item.parent) {\n      var p = findParent(item.parent);\n\n      if (p) {\n        return p;\n      }\n    }\n\n    return null;\n  } // Get child nodes through parent node\n\n\n  function pushChildValue(item) {\n    if (!item[childrenKey]) {\n      return;\n    }\n\n    item[childrenKey].forEach(function (n) {\n      // Determine whether it is a direct parent\n      if (parentValues.some(function (v) {\n        return v === n[valueKey];\n      }) && n[childrenKey]) {\n        pushChildValue(n);\n      } else if (n[valueKey] !== itemNode[valueKey]) {\n        itemValues.push(n[valueKey]);\n      }\n    });\n  }\n\n  var parent = findParent(itemNode);\n\n  if (!parent) {\n    return [];\n  }\n\n  pushChildValue(parent);\n  return itemValues;\n};\n/**\n * Remove the values of all children.\n */\n\nexport var removeAllChildrenValue = function removeAllChildrenValue(value, item, itemKeys) {\n  var valueKey = itemKeys.valueKey,\n      childrenKey = itemKeys.childrenKey;\n  var removedValue = [];\n\n  if (!item[childrenKey]) {\n    return;\n  }\n\n  item[childrenKey].forEach(function (n) {\n    removedValue = removedValue.concat(remove(value, function (v) {\n      return v === n[valueKey];\n    }));\n\n    if (n[childrenKey]) {\n      removeAllChildrenValue(value, n, itemKeys);\n    }\n  });\n  return removedValue;\n};\n/**\n * A hook to flatten tree structure data\n * @param data\n */\n\nexport function useFlattenData(data, itemKeys) {\n  var childrenKey = itemKeys.childrenKey;\n\n  var _useState = useState(flattenTree(data, itemKeys.childrenKey)),\n      flattenData = _useState[0],\n      setFlattenData = _useState[1];\n\n  var addFlattenData = useCallback(function (children, parent) {\n    var nodes = children.map(function (child) {\n      return attachParent(child, parent);\n    });\n    parent[childrenKey] = nodes;\n    setFlattenData([].concat(flattenData, nodes));\n  }, [childrenKey, flattenData]);\n  useEffect(function () {\n    setFlattenData(flattenTree(data, itemKeys.childrenKey));\n  }, [data, itemKeys.childrenKey]);\n  return {\n    addFlattenData: addFlattenData,\n    flattenData: flattenData\n  };\n}\n/**\n * A hook for column data\n * @param flattenData\n */\n\nexport function useColumnData(flattenData) {\n  // The columns displayed in the cascading panel.\n  var _useState2 = useState([flattenData.filter(function (item) {\n    return !item.parent;\n  })]),\n      columnData = _useState2[0],\n      setColumnData = _useState2[1];\n  /**\n   * Add a list of options to the cascading panel. Used for lazy loading options.\n   * @param column\n   * @param index The index of the current column.\n   */\n\n\n  function addColumn(column, index) {\n    setColumnData([].concat(slice(columnData, 0, index), [column]));\n  }\n  /**\n   * Remove subsequent columns of the specified column\n   * @param index\n   */\n\n\n  function romoveColumnByIndex(index) {\n    setColumnData([].concat(slice(columnData, 0, index)));\n  }\n\n  function enforceUpdateColumnData(nextData) {\n    var nextFlattenData = flattenTree(nextData);\n    setColumnData([nextFlattenData.filter(function (item) {\n      return !item.parent;\n    })]);\n  }\n\n  return {\n    columnData: columnData,\n    addColumn: addColumn,\n    romoveColumnByIndex: romoveColumnByIndex,\n    setColumnData: setColumnData,\n    enforceUpdateColumnData: enforceUpdateColumnData\n  };\n}\n/**\n * A hook that converts the value into a cascading value\n * @param props\n * @param flattenData\n */\n\nexport function useCascadeValue(props, flattenData) {\n  var valueKey = props.valueKey,\n      childrenKey = props.childrenKey,\n      uncheckableItemValues = props.uncheckableItemValues,\n      cascade = props.cascade,\n      valueProp = props.value;\n  /**\n   * Get the values of all children\n   */\n\n  var getChildrenValue = useCallback(function (item) {\n    var values = [];\n\n    if (!item[childrenKey]) {\n      return values;\n    }\n\n    item[childrenKey].forEach(function (n) {\n      if (uncheckableItemValues && !uncheckableItemValues.some(function (v) {\n        return v === n[valueKey];\n      })) {\n        values.push(n[valueKey]);\n      }\n\n      values = values.concat(getChildrenValue(n));\n    });\n    return values;\n  }, [childrenKey, uncheckableItemValues, valueKey]);\n  var splitValue = useCallback(function (item, checked, value) {\n    var itemValue = item[valueKey];\n    var childrenValue = getChildrenValue(item);\n    var parents = getParents(item);\n    var nextValue = [].concat(value);\n    var removedValue = [];\n\n    if (checked) {\n      nextValue.push(itemValue); // Delete all values under the current node\n\n      removedValue = removedValue.concat(removeAllChildrenValue(nextValue, item, {\n        valueKey: valueKey,\n        childrenKey: childrenKey\n      }) || []); // Traverse all ancestor nodes of the current node\n      // Then determine whether all the child nodes of these nodes are selected, and then they themselves must be selected\n\n      var _loop = function _loop(i) {\n        // Whether the parent node can be selected\n        var isCheckableParent = !(uncheckableItemValues !== null && uncheckableItemValues !== void 0 && uncheckableItemValues.some(function (v) {\n          return v === parents[i][valueKey];\n        }));\n\n        if (isCheckableParent) {\n          var isCheckAll = parents[i][childrenKey] // Filter out options that are marked as not selectable\n          .filter(function (n) {\n            return !(uncheckableItemValues !== null && uncheckableItemValues !== void 0 && uncheckableItemValues.some(function (v) {\n              return v === n[valueKey];\n            }));\n          }) // Check if all nodes are selected\n          .every(function (n) {\n            return nextValue.some(function (v) {\n              return v === n[valueKey];\n            });\n          });\n\n          if (isCheckAll) {\n            // Add parent node value\n            nextValue.push(parents[i][valueKey]); // Delete all values under the parent node\n\n            removedValue = removedValue.concat(removeAllChildrenValue(nextValue, parents[i], {\n              valueKey: valueKey,\n              childrenKey: childrenKey\n            }) || []);\n          }\n        }\n      };\n\n      for (var i = 0; i < parents.length; i++) {\n        _loop(i);\n      }\n    } else {\n      var tempValue = childrenValue.concat(parents.map(function (item) {\n        return item[valueKey];\n      }));\n      nextValue = nextValue.concat(getOtherItemValuesByUnselectChild(item, nextValue, {\n        valueKey: valueKey,\n        childrenKey: childrenKey\n      })); // Delete related child and parent nodes\n\n      removedValue = remove(nextValue, function (v) {\n        // Delete yourself\n        if (v === itemValue) {\n          return true;\n        }\n\n        return tempValue.some(function (n) {\n          return n === v;\n        });\n      });\n    }\n\n    var uniqValue = uniq(nextValue);\n    var uniqRemovedValue = uniq(removedValue);\n    return {\n      value: uniqValue,\n      removedValue: uniqRemovedValue\n    };\n  }, [valueKey, childrenKey, uncheckableItemValues, getChildrenValue]);\n  var transformValue = useCallback(function (value) {\n    if (value === void 0) {\n      value = [];\n    }\n\n    if (!cascade) {\n      return value;\n    }\n\n    var tempRemovedValue = [];\n    var nextValue = [];\n\n    var _loop2 = function _loop2(i) {\n      // If the value in the current value is already in the deleted list, it will not be processed\n      if (tempRemovedValue.some(function (v) {\n        return v === value[i];\n      })) {\n        return \"continue\";\n      }\n\n      var item = flattenData.find(function (v) {\n        return v[valueKey] === value[i];\n      });\n\n      if (!item) {\n        return \"continue\";\n      }\n\n      var sv = splitValue(item, true, value);\n      tempRemovedValue = uniq(tempRemovedValue.concat(sv.removedValue)); // Get all relevant values\n\n      nextValue = uniq(nextValue.concat(sv.value));\n    };\n\n    for (var i = 0; i < value.length; i++) {\n      var _ret = _loop2(i);\n\n      if (_ret === \"continue\") continue;\n    } // Finally traverse all nextValue, and delete if its parent node is also nextValue\n\n\n    return nextValue.filter(function (v) {\n      var item = flattenData.find(function (n) {\n        return n[valueKey] === v;\n      });\n\n      if (item !== null && item !== void 0 && item.parent && nextValue.some(function (v) {\n        return v === item.parent && item.parent[valueKey];\n      })) {\n        return false;\n      }\n\n      return true;\n    });\n  }, [cascade, flattenData, splitValue, valueKey]);\n\n  var _useState3 = useState(transformValue(valueProp) || []),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  useEffect(function () {\n    // Update value when valueProp is updated.\n    setValue(transformValue(valueProp) || []);\n  }, [transformValue, valueProp]);\n  return {\n    value: value,\n    setValue: setValue,\n    splitValue: splitValue\n  };\n}","map":{"version":3,"names":["useState","useEffect","useCallback","uniq","remove","slice","flattenTree","attachParent","getParents","node","parents","parent","push","concat","isSomeChildChecked","value","itemKeys","childrenKey","valueKey","some","child","_child$childrenKey","n","length","isSomeParentChecked","getOtherItemValuesByUnselectChild","itemNode","parentValues","itemValues","findParent","item","v","p","pushChildValue","forEach","removeAllChildrenValue","removedValue","useFlattenData","data","_useState","flattenData","setFlattenData","addFlattenData","children","nodes","map","useColumnData","_useState2","filter","columnData","setColumnData","addColumn","column","index","romoveColumnByIndex","enforceUpdateColumnData","nextData","nextFlattenData","useCascadeValue","props","uncheckableItemValues","cascade","valueProp","getChildrenValue","values","splitValue","checked","itemValue","childrenValue","nextValue","_loop","i","isCheckableParent","isCheckAll","every","tempValue","uniqValue","uniqRemovedValue","transformValue","tempRemovedValue","_loop2","find","sv","_ret","_useState3","setValue"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/rsuite/esm/MultiCascader/utils.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport uniq from 'lodash/uniq';\nimport remove from 'lodash/remove';\nimport slice from 'lodash/slice';\nimport { flattenTree } from '../utils/treeUtils';\nimport { attachParent } from '../utils/attachParent';\n\n/**\n * Get all parents of a node\n * @param node\n */\nexport var getParents = function getParents(node) {\n  var parents = [];\n\n  if (!node.parent) {\n    return parents;\n  }\n\n  parents.push(node.parent);\n  parents = parents.concat(getParents(node.parent));\n  return parents;\n};\n/**\n * Check if any child nodes are selected.\n * @param node\n * @param value\n * @param itemKeys\n */\n\nexport var isSomeChildChecked = function isSomeChildChecked(node, value, itemKeys) {\n  var childrenKey = itemKeys.childrenKey,\n      valueKey = itemKeys.valueKey;\n\n  if (!node[childrenKey] || !value) {\n    return false;\n  }\n\n  return node[childrenKey].some(function (child) {\n    var _child$childrenKey;\n\n    if (value.some(function (n) {\n      return n === child[valueKey];\n    })) {\n      return true;\n    }\n\n    if ((_child$childrenKey = child[childrenKey]) !== null && _child$childrenKey !== void 0 && _child$childrenKey.length) {\n      return isSomeChildChecked(child, value, itemKeys);\n    }\n\n    return false;\n  });\n};\n/**\n * Check if the parent is selected.\n * @param node\n * @param value\n * @param itemKeys\n */\n\nexport var isSomeParentChecked = function isSomeParentChecked(node, value, itemKeys) {\n  var valueKey = itemKeys.valueKey;\n\n  if (!value) {\n    return false;\n  }\n\n  if (value.some(function (n) {\n    return n === node[valueKey];\n  })) {\n    return true;\n  }\n\n  if (node.parent) {\n    return isSomeParentChecked(node.parent, value, itemKeys);\n  }\n\n  return false;\n};\nexport var getOtherItemValuesByUnselectChild = function getOtherItemValuesByUnselectChild(itemNode, value, itemKeys) {\n  var valueKey = itemKeys.valueKey,\n      childrenKey = itemKeys.childrenKey;\n  var parentValues = [];\n  var itemValues = []; // Find the parent node of the current node by value\n\n  function findParent(item) {\n    parentValues.push(item[valueKey]);\n\n    if (value.some(function (v) {\n      return v === item[valueKey];\n    })) {\n      return item;\n    }\n\n    if (item.parent) {\n      var p = findParent(item.parent);\n\n      if (p) {\n        return p;\n      }\n    }\n\n    return null;\n  } // Get child nodes through parent node\n\n\n  function pushChildValue(item) {\n    if (!item[childrenKey]) {\n      return;\n    }\n\n    item[childrenKey].forEach(function (n) {\n      // Determine whether it is a direct parent\n      if (parentValues.some(function (v) {\n        return v === n[valueKey];\n      }) && n[childrenKey]) {\n        pushChildValue(n);\n      } else if (n[valueKey] !== itemNode[valueKey]) {\n        itemValues.push(n[valueKey]);\n      }\n    });\n  }\n\n  var parent = findParent(itemNode);\n\n  if (!parent) {\n    return [];\n  }\n\n  pushChildValue(parent);\n  return itemValues;\n};\n/**\n * Remove the values of all children.\n */\n\nexport var removeAllChildrenValue = function removeAllChildrenValue(value, item, itemKeys) {\n  var valueKey = itemKeys.valueKey,\n      childrenKey = itemKeys.childrenKey;\n  var removedValue = [];\n\n  if (!item[childrenKey]) {\n    return;\n  }\n\n  item[childrenKey].forEach(function (n) {\n    removedValue = removedValue.concat(remove(value, function (v) {\n      return v === n[valueKey];\n    }));\n\n    if (n[childrenKey]) {\n      removeAllChildrenValue(value, n, itemKeys);\n    }\n  });\n  return removedValue;\n};\n/**\n * A hook to flatten tree structure data\n * @param data\n */\n\nexport function useFlattenData(data, itemKeys) {\n  var childrenKey = itemKeys.childrenKey;\n\n  var _useState = useState(flattenTree(data, itemKeys.childrenKey)),\n      flattenData = _useState[0],\n      setFlattenData = _useState[1];\n\n  var addFlattenData = useCallback(function (children, parent) {\n    var nodes = children.map(function (child) {\n      return attachParent(child, parent);\n    });\n    parent[childrenKey] = nodes;\n    setFlattenData([].concat(flattenData, nodes));\n  }, [childrenKey, flattenData]);\n  useEffect(function () {\n    setFlattenData(flattenTree(data, itemKeys.childrenKey));\n  }, [data, itemKeys.childrenKey]);\n  return {\n    addFlattenData: addFlattenData,\n    flattenData: flattenData\n  };\n}\n/**\n * A hook for column data\n * @param flattenData\n */\n\nexport function useColumnData(flattenData) {\n  // The columns displayed in the cascading panel.\n  var _useState2 = useState([flattenData.filter(function (item) {\n    return !item.parent;\n  })]),\n      columnData = _useState2[0],\n      setColumnData = _useState2[1];\n  /**\n   * Add a list of options to the cascading panel. Used for lazy loading options.\n   * @param column\n   * @param index The index of the current column.\n   */\n\n\n  function addColumn(column, index) {\n    setColumnData([].concat(slice(columnData, 0, index), [column]));\n  }\n  /**\n   * Remove subsequent columns of the specified column\n   * @param index\n   */\n\n\n  function romoveColumnByIndex(index) {\n    setColumnData([].concat(slice(columnData, 0, index)));\n  }\n\n  function enforceUpdateColumnData(nextData) {\n    var nextFlattenData = flattenTree(nextData);\n    setColumnData([nextFlattenData.filter(function (item) {\n      return !item.parent;\n    })]);\n  }\n\n  return {\n    columnData: columnData,\n    addColumn: addColumn,\n    romoveColumnByIndex: romoveColumnByIndex,\n    setColumnData: setColumnData,\n    enforceUpdateColumnData: enforceUpdateColumnData\n  };\n}\n/**\n * A hook that converts the value into a cascading value\n * @param props\n * @param flattenData\n */\n\nexport function useCascadeValue(props, flattenData) {\n  var valueKey = props.valueKey,\n      childrenKey = props.childrenKey,\n      uncheckableItemValues = props.uncheckableItemValues,\n      cascade = props.cascade,\n      valueProp = props.value;\n  /**\n   * Get the values of all children\n   */\n\n  var getChildrenValue = useCallback(function (item) {\n    var values = [];\n\n    if (!item[childrenKey]) {\n      return values;\n    }\n\n    item[childrenKey].forEach(function (n) {\n      if (uncheckableItemValues && !uncheckableItemValues.some(function (v) {\n        return v === n[valueKey];\n      })) {\n        values.push(n[valueKey]);\n      }\n\n      values = values.concat(getChildrenValue(n));\n    });\n    return values;\n  }, [childrenKey, uncheckableItemValues, valueKey]);\n  var splitValue = useCallback(function (item, checked, value) {\n    var itemValue = item[valueKey];\n    var childrenValue = getChildrenValue(item);\n    var parents = getParents(item);\n    var nextValue = [].concat(value);\n    var removedValue = [];\n\n    if (checked) {\n      nextValue.push(itemValue); // Delete all values under the current node\n\n      removedValue = removedValue.concat(removeAllChildrenValue(nextValue, item, {\n        valueKey: valueKey,\n        childrenKey: childrenKey\n      }) || []); // Traverse all ancestor nodes of the current node\n      // Then determine whether all the child nodes of these nodes are selected, and then they themselves must be selected\n\n      var _loop = function _loop(i) {\n        // Whether the parent node can be selected\n        var isCheckableParent = !(uncheckableItemValues !== null && uncheckableItemValues !== void 0 && uncheckableItemValues.some(function (v) {\n          return v === parents[i][valueKey];\n        }));\n\n        if (isCheckableParent) {\n          var isCheckAll = parents[i][childrenKey] // Filter out options that are marked as not selectable\n          .filter(function (n) {\n            return !(uncheckableItemValues !== null && uncheckableItemValues !== void 0 && uncheckableItemValues.some(function (v) {\n              return v === n[valueKey];\n            }));\n          }) // Check if all nodes are selected\n          .every(function (n) {\n            return nextValue.some(function (v) {\n              return v === n[valueKey];\n            });\n          });\n\n          if (isCheckAll) {\n            // Add parent node value\n            nextValue.push(parents[i][valueKey]); // Delete all values under the parent node\n\n            removedValue = removedValue.concat(removeAllChildrenValue(nextValue, parents[i], {\n              valueKey: valueKey,\n              childrenKey: childrenKey\n            }) || []);\n          }\n        }\n      };\n\n      for (var i = 0; i < parents.length; i++) {\n        _loop(i);\n      }\n    } else {\n      var tempValue = childrenValue.concat(parents.map(function (item) {\n        return item[valueKey];\n      }));\n      nextValue = nextValue.concat(getOtherItemValuesByUnselectChild(item, nextValue, {\n        valueKey: valueKey,\n        childrenKey: childrenKey\n      })); // Delete related child and parent nodes\n\n      removedValue = remove(nextValue, function (v) {\n        // Delete yourself\n        if (v === itemValue) {\n          return true;\n        }\n\n        return tempValue.some(function (n) {\n          return n === v;\n        });\n      });\n    }\n\n    var uniqValue = uniq(nextValue);\n    var uniqRemovedValue = uniq(removedValue);\n    return {\n      value: uniqValue,\n      removedValue: uniqRemovedValue\n    };\n  }, [valueKey, childrenKey, uncheckableItemValues, getChildrenValue]);\n  var transformValue = useCallback(function (value) {\n    if (value === void 0) {\n      value = [];\n    }\n\n    if (!cascade) {\n      return value;\n    }\n\n    var tempRemovedValue = [];\n    var nextValue = [];\n\n    var _loop2 = function _loop2(i) {\n      // If the value in the current value is already in the deleted list, it will not be processed\n      if (tempRemovedValue.some(function (v) {\n        return v === value[i];\n      })) {\n        return \"continue\";\n      }\n\n      var item = flattenData.find(function (v) {\n        return v[valueKey] === value[i];\n      });\n\n      if (!item) {\n        return \"continue\";\n      }\n\n      var sv = splitValue(item, true, value);\n      tempRemovedValue = uniq(tempRemovedValue.concat(sv.removedValue)); // Get all relevant values\n\n      nextValue = uniq(nextValue.concat(sv.value));\n    };\n\n    for (var i = 0; i < value.length; i++) {\n      var _ret = _loop2(i);\n\n      if (_ret === \"continue\") continue;\n    } // Finally traverse all nextValue, and delete if its parent node is also nextValue\n\n\n    return nextValue.filter(function (v) {\n      var item = flattenData.find(function (n) {\n        return n[valueKey] === v;\n      });\n\n      if (item !== null && item !== void 0 && item.parent && nextValue.some(function (v) {\n        return v === item.parent && item.parent[valueKey];\n      })) {\n        return false;\n      }\n\n      return true;\n    });\n  }, [cascade, flattenData, splitValue, valueKey]);\n\n  var _useState3 = useState(transformValue(valueProp) || []),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  useEffect(function () {\n    // Update value when valueProp is updated.\n    setValue(transformValue(valueProp) || []);\n  }, [transformValue, valueProp]);\n  return {\n    value: value,\n    setValue: setValue,\n    splitValue: splitValue\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}