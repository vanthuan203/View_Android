{"ast":null,"code":"import { getElementOffset, getScrollTop, getAttributeValueByBreakpoint, getUniqueIdWithPrefix, getObjectPropertyValueByKey, stringSnakeToCamel, getCSS, DataUtil, ElementAnimateUtil, ElementStyleUtil, EventHandlerUtil } from '../_utils/index';\nconst defaultStickyOptions = {\n  offset: 200,\n  reverse: false,\n  animation: true,\n  animationSpeed: '0.3s',\n  animationClass: 'animation-slide-in-down'\n};\n\nclass StickyComponent {\n  constructor(_element, options) {\n    var _this = this;\n\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this.instanceName = '';\n    this.attributeName = void 0;\n    this.eventTriggerState = void 0;\n    this.lastScrollTop = void 0;\n\n    this.scroll = () => {\n      let offset = this.getOption('offset');\n      let reverse = this.getOption('reverse'); // Exit if false\n\n      if (offset === false) {\n        return;\n      }\n\n      let offsetNum = 0;\n\n      if (typeof offset === 'string') {\n        offsetNum = parseInt(offset);\n      }\n\n      const st = getScrollTop(); // Reverse scroll mode\n\n      if (reverse === true) {\n        // Release on reverse scroll mode\n        if (st > offsetNum && this.lastScrollTop < st) {\n          if (document.body.hasAttribute(this.attributeName) === false) {\n            this.enable();\n            document.body.setAttribute(this.attributeName, 'on');\n          }\n\n          if (this.eventTriggerState === true) {\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.on');\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n            this.eventTriggerState = false;\n          }\n        } else {\n          // Back scroll mode\n          if (document.body.hasAttribute(this.attributeName)) {\n            this.disable();\n            document.body.removeAttribute(this.attributeName);\n          }\n\n          if (this.eventTriggerState === false) {\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.off');\n            EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n            this.eventTriggerState = true;\n          }\n        }\n\n        this.lastScrollTop = st;\n        return;\n      } // Classic scroll mode\n\n\n      if (st > offsetNum) {\n        if (document.body.hasAttribute(this.attributeName) === false) {\n          this.enable();\n          document.body.setAttribute(this.attributeName, 'on');\n        }\n\n        if (this.eventTriggerState === true) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.on');\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n          this.eventTriggerState = false;\n        }\n      } else {\n        // back scroll mode\n        if (document.body.hasAttribute(this.attributeName) === true) {\n          this.disable();\n          document.body.removeAttribute(this.attributeName);\n        }\n\n        if (this.eventTriggerState === false) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.off');\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change');\n          this.eventTriggerState = true;\n        }\n      }\n    };\n\n    this.getOption = name => {\n      const dataStickyAttr = 'data-kt-sticky-' + name;\n\n      if (this.element.hasAttribute(dataStickyAttr) === true) {\n        const attrValueInStr = this.element.getAttribute(dataStickyAttr);\n        const attrValue = getAttributeValueByBreakpoint(attrValueInStr || '');\n\n        if (attrValue !== null && String(attrValue) === 'true') {\n          return true;\n        } else if (attrValue !== null && String(attrValue) === 'false') {\n          return false;\n        }\n\n        return attrValue;\n      } else {\n        const optionName = stringSnakeToCamel(name);\n        const option = getObjectPropertyValueByKey(this.options, optionName);\n\n        if (option) {\n          return getAttributeValueByBreakpoint(option);\n        }\n      }\n    };\n\n    this.disable = () => {\n      ElementStyleUtil.remove(this.element, 'top');\n      ElementStyleUtil.remove(this.element, 'width');\n      ElementStyleUtil.remove(this.element, 'left');\n      ElementStyleUtil.remove(this.element, 'right');\n      ElementStyleUtil.remove(this.element, 'z-index');\n      ElementStyleUtil.remove(this.element, 'position');\n    };\n\n    this.enable = function () {\n      let update = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      const top = _this.getOption('top');\n\n      const left = _this.getOption('left'); // const right = this.getOption(\"right\");\n\n\n      let width = _this.getOption('width');\n\n      const zindex = _this.getOption('zindex');\n\n      if (update !== true && _this.getOption('animation') === true) {\n        ElementStyleUtil.set(_this.element, 'animationDuration', _this.getOption('animationSpeed'));\n        ElementAnimateUtil.animateClass(_this.element, 'animation ' + _this.getOption('animationClass'));\n      }\n\n      if (zindex !== null) {\n        ElementStyleUtil.set(_this.element, 'z-index', zindex);\n        ElementStyleUtil.set(_this.element, 'position', 'fixed');\n      }\n\n      if (top !== null) {\n        ElementStyleUtil.set(_this.element, 'top', top);\n      }\n\n      if (width !== null && width !== undefined) {\n        const widthTarget = getObjectPropertyValueByKey(width, 'target');\n\n        if (widthTarget) {\n          const targetElement = document.querySelector(widthTarget);\n\n          if (targetElement) {\n            width = getCSS(targetElement, 'width');\n          }\n        }\n\n        ElementStyleUtil.set(_this.element, 'width', width);\n      }\n\n      if (left !== null) {\n        if (String(left).toLowerCase() === 'auto') {\n          var offsetLeft = getElementOffset(_this.element).left;\n\n          if (offsetLeft > 0) {\n            ElementStyleUtil.set(_this.element, 'left', String(offsetLeft) + 'px');\n          }\n        }\n      }\n    };\n\n    this.update = () => {\n      if (document.body.hasAttribute(this.attributeName) === true) {\n        this.disable();\n        document.body.removeAttribute(this.attributeName);\n        this.enable(true);\n        document.body.setAttribute(this.attributeName, 'on');\n      }\n    };\n\n    this.on = (name, callBack) => {\n      return EventHandlerUtil.on(this.element, name, callBack);\n    };\n\n    this.one = (name, callback) => {\n      return EventHandlerUtil.one(this.element, name, callback);\n    };\n\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n\n    this.trigger = name => {\n      return EventHandlerUtil.trigger(this.element, name);\n    };\n\n    this.element = _element;\n    this.options = Object.assign(defaultStickyOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('sticky');\n    this.instanceName = this.element.getAttribute('data-kt-sticky-name');\n    this.attributeName = 'data-kt-sticky-' + this.instanceName;\n    this.eventTriggerState = true;\n    this.lastScrollTop = 0; // Event Handlers\n\n    window.addEventListener('scroll', this.scroll); // Initial Launch\n\n    this.scroll();\n    DataUtil.set(this.element, 'sticky', this);\n  }\n\n  // Static methods\n  static hasInstace(element) {\n    return DataUtil.has(element, 'sticky');\n  }\n\n  static getInstance(element) {\n    if (element !== null && StickyComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'sticky');\n    }\n  } // Create Instances\n\n\n  static createInstances(selector) {\n    const elements = document.body.querySelectorAll(selector);\n    elements.forEach(element => {\n      const item = element;\n      let sticky = StickyComponent.getInstance(item);\n\n      if (!sticky) {\n        sticky = new StickyComponent(item, defaultStickyOptions);\n      }\n    });\n  }\n\n  static bootstrap() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-kt-sticky=\"true\"]';\n    StickyComponent.createInstances(attr);\n  }\n\n  static reInitialization() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-kt-sticky=\"true\"]';\n    StickyComponent.createInstances(attr);\n  }\n\n}\n\nStickyComponent.createInsance = function (selector) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultStickyOptions;\n  const element = document.body.querySelector(selector);\n\n  if (!element) {\n    return;\n  }\n\n  const item = element;\n  let sticky = StickyComponent.getInstance(item);\n\n  if (!sticky) {\n    sticky = new StickyComponent(item, options);\n  }\n\n  return sticky;\n};\n\nexport { StickyComponent, defaultStickyOptions };","map":{"version":3,"names":["getElementOffset","getScrollTop","getAttributeValueByBreakpoint","getUniqueIdWithPrefix","getObjectPropertyValueByKey","stringSnakeToCamel","getCSS","DataUtil","ElementAnimateUtil","ElementStyleUtil","EventHandlerUtil","defaultStickyOptions","offset","reverse","animation","animationSpeed","animationClass","StickyComponent","constructor","_element","options","element","instanceUid","instanceName","attributeName","eventTriggerState","lastScrollTop","scroll","getOption","offsetNum","parseInt","st","document","body","hasAttribute","enable","setAttribute","trigger","disable","removeAttribute","name","dataStickyAttr","attrValueInStr","getAttribute","attrValue","String","optionName","option","remove","update","top","left","width","zindex","set","animateClass","undefined","widthTarget","targetElement","querySelector","toLowerCase","offsetLeft","on","callBack","one","callback","off","Object","assign","window","addEventListener","hasInstace","has","getInstance","get","createInstances","selector","elements","querySelectorAll","forEach","item","sticky","bootstrap","attr","reInitialization","createInsance"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/src/_metronic/assets/ts/components/_StickyComponent.ts"],"sourcesContent":["import {\n  getElementOffset,\n  getScrollTop,\n  getAttributeValueByBreakpoint,\n  getUniqueIdWithPrefix,\n  getObjectPropertyValueByKey,\n  stringSnakeToCamel,\n  getCSS,\n  DataUtil,\n  ElementAnimateUtil,\n  ElementStyleUtil,\n  EventHandlerUtil,\n} from '../_utils/index'\n\nexport interface StickyOptions {\n  offset: number\n  reverse: boolean\n  animation: boolean\n  animationSpeed: string\n  animationClass: string\n}\n\nconst defaultStickyOptions: StickyOptions = {\n  offset: 200,\n  reverse: false,\n  animation: true,\n  animationSpeed: '0.3s',\n  animationClass: 'animation-slide-in-down',\n}\n\nclass StickyComponent {\n  element: HTMLElement\n  options: StickyOptions\n  instanceUid: string\n  instanceName: string | null = ''\n  attributeName: string\n  eventTriggerState: boolean\n  lastScrollTop: number\n\n  constructor(_element: HTMLElement, options: StickyOptions) {\n    this.element = _element\n    this.options = Object.assign(defaultStickyOptions, options)\n    this.instanceUid = getUniqueIdWithPrefix('sticky')\n    this.instanceName = this.element.getAttribute('data-kt-sticky-name')\n    this.attributeName = 'data-kt-sticky-' + this.instanceName\n    this.eventTriggerState = true\n    this.lastScrollTop = 0\n\n    // Event Handlers\n    window.addEventListener('scroll', this.scroll)\n\n    // Initial Launch\n    this.scroll()\n\n    DataUtil.set(this.element, 'sticky', this)\n  }\n\n  private scroll = () => {\n    let offset = this.getOption('offset')\n    let reverse = this.getOption('reverse')\n\n    // Exit if false\n    if (offset === false) {\n      return\n    }\n\n    let offsetNum = 0\n    if (typeof offset === 'string') {\n      offsetNum = parseInt(offset)\n    }\n\n    const st = getScrollTop()\n\n    // Reverse scroll mode\n    if (reverse === true) {\n      // Release on reverse scroll mode\n      if (st > offsetNum && this.lastScrollTop < st) {\n        if (document.body.hasAttribute(this.attributeName) === false) {\n          this.enable()\n          document.body.setAttribute(this.attributeName, 'on')\n        }\n\n        if (this.eventTriggerState === true) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.on')\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n\n          this.eventTriggerState = false\n        }\n      } else {\n        // Back scroll mode\n        if (document.body.hasAttribute(this.attributeName)) {\n          this.disable()\n          document.body.removeAttribute(this.attributeName)\n        }\n\n        if (this.eventTriggerState === false) {\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.off')\n          EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n\n          this.eventTriggerState = true\n        }\n      }\n\n      this.lastScrollTop = st\n      return\n    }\n\n    // Classic scroll mode\n    if (st > offsetNum) {\n      if (document.body.hasAttribute(this.attributeName) === false) {\n        this.enable()\n        document.body.setAttribute(this.attributeName, 'on')\n      }\n\n      if (this.eventTriggerState === true) {\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.on')\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n        this.eventTriggerState = false\n      }\n    } else {\n      // back scroll mode\n      if (document.body.hasAttribute(this.attributeName) === true) {\n        this.disable()\n        document.body.removeAttribute(this.attributeName)\n      }\n\n      if (this.eventTriggerState === false) {\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.off')\n        EventHandlerUtil.trigger(this.element, 'kt.sticky.change')\n        this.eventTriggerState = true\n      }\n    }\n  }\n\n  private getOption = (name: string) => {\n    const dataStickyAttr = 'data-kt-sticky-' + name\n    if (this.element.hasAttribute(dataStickyAttr) === true) {\n      const attrValueInStr = this.element.getAttribute(dataStickyAttr)\n      const attrValue = getAttributeValueByBreakpoint(attrValueInStr || '')\n      if (attrValue !== null && String(attrValue) === 'true') {\n        return true\n      } else if (attrValue !== null && String(attrValue) === 'false') {\n        return false\n      }\n\n      return attrValue\n    } else {\n      const optionName = stringSnakeToCamel(name)\n      const option = getObjectPropertyValueByKey(this.options, optionName)\n      if (option) {\n        return getAttributeValueByBreakpoint(option)\n      }\n    }\n  }\n\n  private disable = () => {\n    ElementStyleUtil.remove(this.element, 'top')\n    ElementStyleUtil.remove(this.element, 'width')\n    ElementStyleUtil.remove(this.element, 'left')\n    ElementStyleUtil.remove(this.element, 'right')\n    ElementStyleUtil.remove(this.element, 'z-index')\n    ElementStyleUtil.remove(this.element, 'position')\n  }\n\n  private enable = (update: boolean = false) => {\n    const top = this.getOption('top')\n    const left = this.getOption('left')\n    // const right = this.getOption(\"right\");\n    let width = this.getOption('width')\n    const zindex = this.getOption('zindex')\n\n    if (update !== true && this.getOption('animation') === true) {\n      ElementStyleUtil.set(this.element, 'animationDuration', this.getOption('animationSpeed'))\n      ElementAnimateUtil.animateClass(this.element, 'animation ' + this.getOption('animationClass'))\n    }\n\n    if (zindex !== null) {\n      ElementStyleUtil.set(this.element, 'z-index', zindex)\n      ElementStyleUtil.set(this.element, 'position', 'fixed')\n    }\n\n    if (top !== null) {\n      ElementStyleUtil.set(this.element, 'top', top)\n    }\n\n    if (width !== null && width !== undefined) {\n      const widthTarget = getObjectPropertyValueByKey(width, 'target')\n      if (widthTarget) {\n        const targetElement = document.querySelector(widthTarget)\n        if (targetElement) {\n          width = getCSS(targetElement, 'width')\n        }\n      }\n      ElementStyleUtil.set(this.element, 'width', width)\n    }\n\n    if (left !== null) {\n      if (String(left).toLowerCase() === 'auto') {\n        var offsetLeft = getElementOffset(this.element).left\n\n        if (offsetLeft > 0) {\n          ElementStyleUtil.set(this.element, 'left', String(offsetLeft) + 'px')\n        }\n      }\n    }\n  }\n\n  public update = () => {\n    if (document.body.hasAttribute(this.attributeName) === true) {\n      this.disable()\n      document.body.removeAttribute(this.attributeName)\n      this.enable(true)\n      document.body.setAttribute(this.attributeName, 'on')\n    }\n  }\n\n  // Event API\n  public on = (name: string, callBack: Function) => {\n    return EventHandlerUtil.on(this.element, name, callBack)\n  }\n\n  public one = (name: string, callback: Function) => {\n    return EventHandlerUtil.one(this.element, name, callback)\n  }\n\n  public off = (name: string) => {\n    return EventHandlerUtil.off(this.element, name)\n  }\n\n  public trigger = (name: string) => {\n    return EventHandlerUtil.trigger(this.element, name)\n  }\n\n  // Static methods\n  public static hasInstace(element: HTMLElement) {\n    return DataUtil.has(element, 'sticky')\n  }\n\n  public static getInstance(element: HTMLElement) {\n    if (element !== null && StickyComponent.hasInstace(element)) {\n      return DataUtil.get(element, 'sticky')\n    }\n  }\n\n  // Create Instances\n  public static createInstances(selector: string) {\n    const elements = document.body.querySelectorAll(selector)\n    elements.forEach((element) => {\n      const item = element as HTMLElement\n      let sticky = StickyComponent.getInstance(item)\n      if (!sticky) {\n        sticky = new StickyComponent(item, defaultStickyOptions)\n      }\n    })\n  }\n\n  public static createInsance = (\n    selector: string,\n    options: StickyOptions = defaultStickyOptions\n  ): StickyComponent | undefined => {\n    const element = document.body.querySelector(selector)\n    if (!element) {\n      return\n    }\n    const item = element as HTMLElement\n    let sticky = StickyComponent.getInstance(item)\n    if (!sticky) {\n      sticky = new StickyComponent(item, options)\n    }\n    return sticky\n  }\n\n  public static bootstrap(attr: string = '[data-kt-sticky=\"true\"]') {\n    StickyComponent.createInstances(attr)\n  }\n\n  public static reInitialization(attr: string = '[data-kt-sticky=\"true\"]') {\n    StickyComponent.createInstances(attr)\n  }\n}\n\nexport {StickyComponent, defaultStickyOptions}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}