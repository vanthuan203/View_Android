{"ast":null,"code":"import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\n\nexport function ComputeExponent(numberFormat, x, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n\n  if (x === 0) {\n    return [0, 0];\n  }\n\n  if (x < 0) {\n    x = -x;\n  }\n\n  var magnitude = getMagnitude(x);\n  var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n    getInternalSlots: getInternalSlots\n  }); // Preserve more precision by doing multiplication when exponent is negative.\n\n  x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n  var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n\n  if (formatNumberResult.roundedNumber === 0) {\n    return [exponent, magnitude];\n  }\n\n  var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n\n  if (newMagnitude === magnitude - exponent) {\n    return [exponent, magnitude];\n  }\n\n  return [ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n    getInternalSlots: getInternalSlots\n  }), magnitude + 1];\n}","map":{"version":3,"names":["getMagnitude","ComputeExponentForMagnitude","FormatNumericToString","ComputeExponent","numberFormat","x","_a","getInternalSlots","magnitude","exponent","Math","pow","formatNumberResult","roundedNumber","newMagnitude"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js"],"sourcesContent":["import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n    var getInternalSlots = _a.getInternalSlots;\n    if (x === 0) {\n        return [0, 0];\n    }\n    if (x < 0) {\n        x = -x;\n    }\n    var magnitude = getMagnitude(x);\n    var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n        getInternalSlots: getInternalSlots,\n    });\n    // Preserve more precision by doing multiplication when exponent is negative.\n    x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n    if (formatNumberResult.roundedNumber === 0) {\n        return [exponent, magnitude];\n    }\n    var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n    if (newMagnitude === magnitude - exponent) {\n        return [exponent, magnitude];\n    }\n    return [\n        ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n            getInternalSlots: getInternalSlots,\n        }),\n        magnitude + 1,\n    ];\n}\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,UAA7B;AACA,SAASC,2BAAT,QAA4C,+BAA5C;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,YAAzB,EAAuCC,CAAvC,EAA0CC,EAA1C,EAA8C;EACjD,IAAIC,gBAAgB,GAAGD,EAAE,CAACC,gBAA1B;;EACA,IAAIF,CAAC,KAAK,CAAV,EAAa;IACT,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;EACH;;EACD,IAAIA,CAAC,GAAG,CAAR,EAAW;IACPA,CAAC,GAAG,CAACA,CAAL;EACH;;EACD,IAAIG,SAAS,GAAGR,YAAY,CAACK,CAAD,CAA5B;EACA,IAAII,QAAQ,GAAGR,2BAA2B,CAACG,YAAD,EAAeI,SAAf,EAA0B;IAChED,gBAAgB,EAAEA;EAD8C,CAA1B,CAA1C,CATiD,CAYjD;;EACAF,CAAC,GAAGI,QAAQ,GAAG,CAAX,GAAeJ,CAAC,GAAGK,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,CAACF,QAAd,CAAnB,GAA6CJ,CAAC,GAAGK,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaF,QAAb,CAArD;EACA,IAAIG,kBAAkB,GAAGV,qBAAqB,CAACK,gBAAgB,CAACH,YAAD,CAAjB,EAAiCC,CAAjC,CAA9C;;EACA,IAAIO,kBAAkB,CAACC,aAAnB,KAAqC,CAAzC,EAA4C;IACxC,OAAO,CAACJ,QAAD,EAAWD,SAAX,CAAP;EACH;;EACD,IAAIM,YAAY,GAAGd,YAAY,CAACY,kBAAkB,CAACC,aAApB,CAA/B;;EACA,IAAIC,YAAY,KAAKN,SAAS,GAAGC,QAAjC,EAA2C;IACvC,OAAO,CAACA,QAAD,EAAWD,SAAX,CAAP;EACH;;EACD,OAAO,CACHP,2BAA2B,CAACG,YAAD,EAAeI,SAAS,GAAG,CAA3B,EAA8B;IACrDD,gBAAgB,EAAEA;EADmC,CAA9B,CADxB,EAIHC,SAAS,GAAG,CAJT,CAAP;AAMH"},"metadata":{},"sourceType":"module"}