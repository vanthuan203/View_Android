{"ast":null,"code":"import { filterProps } from './utils';\nimport { IntlFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = ['localeMatcher', 'type'];\nexport function formatPlural(_a, getPluralRules, value, options) {\n  var locale = _a.locale,\n      onError = _a.onError;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!Intl.PluralRules) {\n    onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n  }\n\n  var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n  try {\n    return getPluralRules(locale, filteredOptions).select(value);\n  } catch (e) {\n    onError(new IntlFormatError('Error formatting plural.', locale, e));\n  }\n\n  return 'other';\n}","map":{"version":3,"names":["filterProps","IntlFormatError","ErrorCode","FormatError","PLURAL_FORMAT_OPTIONS","formatPlural","_a","getPluralRules","value","options","locale","onError","Intl","PluralRules","MISSING_INTL_API","filteredOptions","select","e"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/@formatjs/intl/lib/src/plural.js"],"sourcesContent":["import { filterProps } from './utils';\nimport { IntlFormatError } from './error';\nimport { ErrorCode, FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", ErrorCode.MISSING_INTL_API));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new IntlFormatError('Error formatting plural.', locale, e));\n    }\n    return 'other';\n}\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,oBAAvC;AACA,IAAIC,qBAAqB,GAAG,CACxB,eADwB,EAExB,MAFwB,CAA5B;AAIA,OAAO,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,cAA1B,EAA0CC,KAA1C,EAAiDC,OAAjD,EAA0D;EAC7D,IAAIC,MAAM,GAAGJ,EAAE,CAACI,MAAhB;EAAA,IAAwBC,OAAO,GAAGL,EAAE,CAACK,OAArC;;EACA,IAAIF,OAAO,KAAK,KAAK,CAArB,EAAwB;IAAEA,OAAO,GAAG,EAAV;EAAe;;EACzC,IAAI,CAACG,IAAI,CAACC,WAAV,EAAuB;IACnBF,OAAO,CAAC,IAAIR,WAAJ,CAAgB,mHAAhB,EAAqID,SAAS,CAACY,gBAA/I,CAAD,CAAP;EACH;;EACD,IAAIC,eAAe,GAAGf,WAAW,CAACS,OAAD,EAAUL,qBAAV,CAAjC;;EACA,IAAI;IACA,OAAOG,cAAc,CAACG,MAAD,EAASK,eAAT,CAAd,CAAwCC,MAAxC,CAA+CR,KAA/C,CAAP;EACH,CAFD,CAGA,OAAOS,CAAP,EAAU;IACNN,OAAO,CAAC,IAAIV,eAAJ,CAAoB,0BAApB,EAAgDS,MAAhD,EAAwDO,CAAxD,CAAD,CAAP;EACH;;EACD,OAAO,OAAP;AACH"},"metadata":{},"sourceType":"module"}