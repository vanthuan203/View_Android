{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MakePartsList = void 0;\n\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n\nfunction MakePartsList(pattern, unit, parts) {\n  var patternParts = (0, ecma402_abstract_1.PartitionPattern)(pattern);\n  var result = [];\n\n  for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n    var patternPart = patternParts_1[_i];\n\n    if (patternPart.type === 'literal') {\n      result.push({\n        type: 'literal',\n        value: patternPart.value\n      });\n    } else {\n      (0, ecma402_abstract_1.invariant)(patternPart.type === '0', \"Malformed pattern \".concat(pattern));\n\n      for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n        var part = parts_1[_a];\n        result.push({\n          type: part.type,\n          value: part.value,\n          unit: unit\n        });\n      }\n    }\n  }\n\n  return result;\n}\n\nexports.MakePartsList = MakePartsList;","map":{"version":3,"names":["Object","defineProperty","exports","value","MakePartsList","ecma402_abstract_1","require","pattern","unit","parts","patternParts","PartitionPattern","result","_i","patternParts_1","length","patternPart","type","push","invariant","concat","_a","parts_1","part"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/@formatjs/intl-relativetimeformat/abstract/MakePartsList.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MakePartsList = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nfunction MakePartsList(pattern, unit, parts) {\n    var patternParts = (0, ecma402_abstract_1.PartitionPattern)(pattern);\n    var result = [];\n    for (var _i = 0, patternParts_1 = patternParts; _i < patternParts_1.length; _i++) {\n        var patternPart = patternParts_1[_i];\n        if (patternPart.type === 'literal') {\n            result.push({\n                type: 'literal',\n                value: patternPart.value,\n            });\n        }\n        else {\n            (0, ecma402_abstract_1.invariant)(patternPart.type === '0', \"Malformed pattern \".concat(pattern));\n            for (var _a = 0, parts_1 = parts; _a < parts_1.length; _a++) {\n                var part = parts_1[_a];\n                result.push({\n                    type: part.type,\n                    value: part.value,\n                    unit: unit,\n                });\n            }\n        }\n    }\n    return result;\n}\nexports.MakePartsList = MakePartsList;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AACA,SAASF,aAAT,CAAuBG,OAAvB,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6C;EACzC,IAAIC,YAAY,GAAG,CAAC,GAAGL,kBAAkB,CAACM,gBAAvB,EAAyCJ,OAAzC,CAAnB;EACA,IAAIK,MAAM,GAAG,EAAb;;EACA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,cAAc,GAAGJ,YAAlC,EAAgDG,EAAE,GAAGC,cAAc,CAACC,MAApE,EAA4EF,EAAE,EAA9E,EAAkF;IAC9E,IAAIG,WAAW,GAAGF,cAAc,CAACD,EAAD,CAAhC;;IACA,IAAIG,WAAW,CAACC,IAAZ,KAAqB,SAAzB,EAAoC;MAChCL,MAAM,CAACM,IAAP,CAAY;QACRD,IAAI,EAAE,SADE;QAERd,KAAK,EAAEa,WAAW,CAACb;MAFX,CAAZ;IAIH,CALD,MAMK;MACD,CAAC,GAAGE,kBAAkB,CAACc,SAAvB,EAAkCH,WAAW,CAACC,IAAZ,KAAqB,GAAvD,EAA4D,qBAAqBG,MAArB,CAA4Bb,OAA5B,CAA5D;;MACA,KAAK,IAAIc,EAAE,GAAG,CAAT,EAAYC,OAAO,GAAGb,KAA3B,EAAkCY,EAAE,GAAGC,OAAO,CAACP,MAA/C,EAAuDM,EAAE,EAAzD,EAA6D;QACzD,IAAIE,IAAI,GAAGD,OAAO,CAACD,EAAD,CAAlB;QACAT,MAAM,CAACM,IAAP,CAAY;UACRD,IAAI,EAAEM,IAAI,CAACN,IADH;UAERd,KAAK,EAAEoB,IAAI,CAACpB,KAFJ;UAGRK,IAAI,EAAEA;QAHE,CAAZ;MAKH;IACJ;EACJ;;EACD,OAAOI,MAAP;AACH;;AACDV,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}