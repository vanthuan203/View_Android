{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { actions } from './redux/AccountRedux';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const histories = useSelector(_ref => {\n    let {\n      histories\n    } = _ref;\n    return histories.histories;\n  }, shallowEqual) || [];\n  const computers = useSelector(_ref2 => {\n    let {\n      histories\n    } = _ref2;\n    return histories.computers;\n  }, shallowEqual) || [];\n  useEffect(() => {\n    dispatch(actions.requestHistories(1));\n    dispatch(actions.requestComputers());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(AccountPage, \"JeIDcUY+HNplM6PARpkGdYXugZk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AccountPage;\nexport default AccountPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","shallowEqual","actions","AccountPage","dispatch","histories","computers","requestHistories","requestComputers"],"sources":["C:/Users/KT2/Desktop/ssc.fe.cheatview-main/src/app/modules/history/HistoryPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  HistoryList\n} from './HistoryList'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { actions } from './redux/AccountRedux'\nimport { ComputerModel, HistoryModel } from 'app/modules/history/models/Account'\nimport { RootState } from 'setup'\nimport { ComputerList } from './ComputerList'\nimport { StaticList } from './StaticList'\n\n\nconst AccountPage: React.FC = () => {\n  const dispatch = useDispatch()\n  const histories: HistoryModel[] = useSelector<RootState>(({ histories }) => histories.histories, shallowEqual) as HistoryModel[] || []\n  const computers: ComputerModel[] = useSelector<RootState>(({ histories }) => histories.computers, shallowEqual) as ComputerModel[] || []\n\n  useEffect(() => {\n    dispatch(actions.requestHistories(1))\n    dispatch(actions.requestComputers())\n\n\n  }, [])\n\n  return (\n    <>\n    </>\n  )\n}\nexport default AccountPage\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AAIA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,OAAT,QAAwB,sBAAxB;;;;AAOA,MAAMC,WAAqB,GAAG,MAAM;EAAA;;EAClC,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAMM,SAAyB,GAAGL,WAAW,CAAY;IAAA,IAAC;MAAEK;IAAF,CAAD;IAAA,OAAmBA,SAAS,CAACA,SAA7B;EAAA,CAAZ,EAAoDJ,YAApD,CAAX,IAAkG,EAApI;EACA,MAAMK,SAA0B,GAAGN,WAAW,CAAY;IAAA,IAAC;MAAEK;IAAF,CAAD;IAAA,OAAmBA,SAAS,CAACC,SAA7B;EAAA,CAAZ,EAAoDL,YAApD,CAAX,IAAmG,EAAtI;EAEAH,SAAS,CAAC,MAAM;IACdM,QAAQ,CAACF,OAAO,CAACK,gBAAR,CAAyB,CAAzB,CAAD,CAAR;IACAH,QAAQ,CAACF,OAAO,CAACM,gBAAR,EAAD,CAAR;EAGD,CALQ,EAKN,EALM,CAAT;EAOA,oBACE,qCADF;AAID,CAhBD;;GAAML,W;UACaJ,W,EACiBC,W,EACCA,W;;;KAH/BG,W;AAiBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}