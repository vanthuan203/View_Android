{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache } from '@formatjs/intl';\nimport { isFormatXMLElementFn } from 'intl-messageformat';\n\nfunction processIntlConfig(config) {\n  return {\n    locale: config.locale,\n    timeZone: config.timeZone,\n    fallbackOnEmptyString: config.fallbackOnEmptyString,\n    formats: config.formats,\n    textComponent: config.textComponent,\n    messages: config.messages,\n    defaultLocale: config.defaultLocale,\n    defaultFormats: config.defaultFormats,\n    onError: config.onError,\n    onWarn: config.onWarn,\n    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    defaultRichTextElements: config.defaultRichTextElements\n  };\n}\n\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n  if (!values) {\n    return values;\n  }\n\n  return Object.keys(values).reduce(function (acc, k) {\n    var v = values[k];\n    acc[k] = isFormatXMLElementFn(v) ? assignUniqueKeysToParts(v) : v;\n    return acc;\n  }, {});\n}\n\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n  var rest = [];\n\n  for (var _i = 4; _i < arguments.length; _i++) {\n    rest[_i - 4] = arguments[_i];\n  }\n\n  var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n  var chunks = coreFormatMessage.apply(void 0, __spreadArray([config, formatters, descriptor, values], rest, false));\n\n  if (Array.isArray(chunks)) {\n    return React.Children.toArray(chunks);\n  }\n\n  return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\n\n\nexport var createIntl = function (_a, cache) {\n  var rawDefaultRichTextElements = _a.defaultRichTextElements,\n      config = __rest(_a, [\"defaultRichTextElements\"]);\n\n  var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n  var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), {\n    defaultRichTextElements: defaultRichTextElements\n  }), cache);\n  return __assign(__assign({}, coreIntl), {\n    formatMessage: formatMessage.bind(null, {\n      locale: coreIntl.locale,\n      timeZone: coreIntl.timeZone,\n      fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n      formats: coreIntl.formats,\n      defaultLocale: coreIntl.defaultLocale,\n      defaultFormats: coreIntl.defaultFormats,\n      messages: coreIntl.messages,\n      onError: coreIntl.onError,\n      defaultRichTextElements: defaultRichTextElements\n    }, coreIntl.formatters)\n  });\n};\n\nvar IntlProvider =\n/** @class */\nfunction (_super) {\n  __extends(IntlProvider, _super);\n\n  function IntlProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.cache = createIntlCache();\n    _this.state = {\n      cache: _this.cache,\n      intl: createIntl(processIntlConfig(_this.props), _this.cache),\n      prevConfig: processIntlConfig(_this.props)\n    };\n    return _this;\n  }\n\n  IntlProvider.getDerivedStateFromProps = function (props, _a) {\n    var prevConfig = _a.prevConfig,\n        cache = _a.cache;\n    var config = processIntlConfig(props);\n\n    if (!shallowEqual(prevConfig, config)) {\n      return {\n        intl: createIntl(config, cache),\n        prevConfig: config\n      };\n    }\n\n    return null;\n  };\n\n  IntlProvider.prototype.render = function () {\n    invariantIntlContext(this.state.intl);\n    return React.createElement(Provider, {\n      value: this.state.intl\n    }, this.props.children);\n  };\n\n  IntlProvider.displayName = 'IntlProvider';\n  IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n  return IntlProvider;\n}(React.PureComponent);\n\nexport default IntlProvider;","map":{"version":3,"names":["__assign","__extends","__rest","__spreadArray","React","Provider","DEFAULT_INTL_CONFIG","invariantIntlContext","assignUniqueKeysToParts","shallowEqual","formatMessage","coreFormatMessage","createIntl","coreCreateIntl","createIntlCache","isFormatXMLElementFn","processIntlConfig","config","locale","timeZone","fallbackOnEmptyString","formats","textComponent","messages","defaultLocale","defaultFormats","onError","onWarn","wrapRichTextChunksInFragment","defaultRichTextElements","assignUniqueKeysToFormatXMLElementFnArgument","values","Object","keys","reduce","acc","k","v","formatters","descriptor","rawValues","rest","_i","arguments","length","chunks","apply","Array","isArray","Children","toArray","_a","cache","rawDefaultRichTextElements","coreIntl","bind","IntlProvider","_super","_this","state","intl","props","prevConfig","getDerivedStateFromProps","prototype","render","createElement","value","children","displayName","defaultProps","PureComponent"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/react-intl/lib/src/components/provider.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __assign, __extends, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, invariantIntlContext, assignUniqueKeysToParts, shallowEqual, } from '../utils';\nimport { formatMessage as coreFormatMessage, createIntl as coreCreateIntl, createIntlCache, } from '@formatjs/intl';\nimport { isFormatXMLElementFn, } from 'intl-messageformat';\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nfunction assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    if (!values) {\n        return values;\n    }\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nvar formatMessage = function (config, formatters, descriptor, rawValues) {\n    var rest = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        rest[_i - 4] = arguments[_i];\n    }\n    var values = assignUniqueKeysToFormatXMLElementFnArgument(rawValues);\n    var chunks = coreFormatMessage.apply(void 0, __spreadArray([config,\n        formatters,\n        descriptor,\n        values], rest, false));\n    if (Array.isArray(chunks)) {\n        return React.Children.toArray(chunks);\n    }\n    return chunks;\n};\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport var createIntl = function (_a, cache) {\n    var rawDefaultRichTextElements = _a.defaultRichTextElements, config = __rest(_a, [\"defaultRichTextElements\"]);\n    var defaultRichTextElements = assignUniqueKeysToFormatXMLElementFnArgument(rawDefaultRichTextElements);\n    var coreIntl = coreCreateIntl(__assign(__assign(__assign({}, DEFAULT_INTL_CONFIG), config), { defaultRichTextElements: defaultRichTextElements }), cache);\n    return __assign(__assign({}, coreIntl), { formatMessage: formatMessage.bind(null, {\n            locale: coreIntl.locale,\n            timeZone: coreIntl.timeZone,\n            fallbackOnEmptyString: coreIntl.fallbackOnEmptyString,\n            formats: coreIntl.formats,\n            defaultLocale: coreIntl.defaultLocale,\n            defaultFormats: coreIntl.defaultFormats,\n            messages: coreIntl.messages,\n            onError: coreIntl.onError,\n            defaultRichTextElements: defaultRichTextElements,\n        }, coreIntl.formatters) });\n};\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEqual(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}