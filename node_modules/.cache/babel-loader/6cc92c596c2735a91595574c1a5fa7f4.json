{"ast":null,"code":"/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport useIntl from './useIntl';\n\nvar FormattedPlural = function (props) {\n  var _a = useIntl(),\n      formatPlural = _a.formatPlural,\n      Text = _a.textComponent;\n\n  var value = props.value,\n      other = props.other,\n      children = props.children;\n  var pluralCategory = formatPlural(value, props);\n  var formattedPlural = props[pluralCategory] || other;\n\n  if (typeof children === 'function') {\n    return children(formattedPlural);\n  }\n\n  if (Text) {\n    return React.createElement(Text, null, formattedPlural);\n  } // Work around @types/react where React.FC cannot return string\n\n\n  return formattedPlural;\n};\n\nFormattedPlural.defaultProps = {\n  type: 'cardinal'\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default FormattedPlural;","map":{"version":3,"names":["React","useIntl","FormattedPlural","props","_a","formatPlural","Text","textComponent","value","other","children","pluralCategory","formattedPlural","createElement","defaultProps","type","displayName"],"sources":["C:/Users/KT2/OneDrive/Documents/Buffh/ssc.fe.cheatview-main/node_modules/react-intl/lib/src/components/plural.js"],"sourcesContent":["/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport useIntl from './useIntl';\nvar FormattedPlural = function (props) {\n    var _a = useIntl(), formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var value = props.value, other = props.other, children = props.children;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\nexport default FormattedPlural;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,IAAIC,eAAe,GAAG,UAAUC,KAAV,EAAiB;EACnC,IAAIC,EAAE,GAAGH,OAAO,EAAhB;EAAA,IAAoBI,YAAY,GAAGD,EAAE,CAACC,YAAtC;EAAA,IAAoDC,IAAI,GAAGF,EAAE,CAACG,aAA9D;;EACA,IAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB;EAAA,IAAyBC,KAAK,GAAGN,KAAK,CAACM,KAAvC;EAAA,IAA8CC,QAAQ,GAAGP,KAAK,CAACO,QAA/D;EACA,IAAIC,cAAc,GAAGN,YAAY,CAACG,KAAD,EAAQL,KAAR,CAAjC;EACA,IAAIS,eAAe,GAAGT,KAAK,CAACQ,cAAD,CAAL,IAAyBF,KAA/C;;EACA,IAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;IAChC,OAAOA,QAAQ,CAACE,eAAD,CAAf;EACH;;EACD,IAAIN,IAAJ,EAAU;IACN,OAAON,KAAK,CAACa,aAAN,CAAoBP,IAApB,EAA0B,IAA1B,EAAgCM,eAAhC,CAAP;EACH,CAVkC,CAWnC;;;EACA,OAAOA,eAAP;AACH,CAbD;;AAcAV,eAAe,CAACY,YAAhB,GAA+B;EAC3BC,IAAI,EAAE;AADqB,CAA/B;AAGAb,eAAe,CAACc,WAAhB,GAA8B,iBAA9B;AACA,eAAed,eAAf"},"metadata":{},"sourceType":"module"}