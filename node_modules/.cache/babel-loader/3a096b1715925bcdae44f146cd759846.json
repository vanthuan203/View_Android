{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nimport * as React from 'react';\nimport convert from 'react-from-dom';\nimport { STATUS, canUseDOM, isSupportedEnvironment, randomString, removeProperties } from './helpers';\nexport var cacheStore = Object.create(null);\n\nvar InlineSVG =\n/** @class */\nfunction (_super) {\n  __extends(InlineSVG, _super);\n\n  function InlineSVG(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.isActive = false;\n\n    _this.handleCacheQueue = function (content) {\n      /* istanbul ignore else */\n      if (typeof content === 'string') {\n        _this.handleLoad(content);\n\n        return;\n      }\n\n      _this.handleError(content);\n    };\n\n    _this.handleLoad = function (content) {\n      /* istanbul ignore else */\n      if (_this.isActive) {\n        _this.setState({\n          content: content,\n          status: STATUS.LOADED\n        }, _this.getElement);\n      }\n    };\n\n    _this.handleError = function (error) {\n      var onError = _this.props.onError;\n      var status = error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n      /* istanbul ignore else */\n\n      if (_this.isActive) {\n        _this.setState({\n          status: status\n        }, function () {\n          /* istanbul ignore else */\n          if (typeof onError === 'function') {\n            onError(error);\n          }\n        });\n      }\n    };\n\n    _this.request = function () {\n      var _a = _this.props,\n          cacheRequests = _a.cacheRequests,\n          fetchOptions = _a.fetchOptions,\n          src = _a.src;\n\n      try {\n        if (cacheRequests) {\n          cacheStore[src] = {\n            content: '',\n            status: STATUS.LOADING,\n            queue: []\n          };\n        }\n\n        return fetch(src, fetchOptions).then(function (response) {\n          var contentType = response.headers.get('content-type');\n\n          var _a = __read((contentType || '').split(/ ?; ?/), 1),\n              fileType = _a[0];\n\n          if (response.status > 299) {\n            throw new Error('Not found');\n          }\n\n          if (!['image/svg+xml', 'text/plain'].some(function (d) {\n            return fileType.indexOf(d) >= 0;\n          })) {\n            throw new Error(\"Content type isn't valid: \" + fileType);\n          }\n\n          return response.text();\n        }).then(function (content) {\n          var currentSrc = _this.props.src; // the current src don't match the previous one, skipping...\n\n          if (src !== currentSrc) {\n            return;\n          }\n\n          _this.handleLoad(content);\n          /* istanbul ignore else */\n\n\n          if (cacheRequests) {\n            var cache = cacheStore[src];\n            /* istanbul ignore else */\n\n            if (cache) {\n              cache.content = content;\n              cache.status = STATUS.LOADED;\n              cache.queue = cache.queue.filter(function (cb) {\n                cb(content);\n                return false;\n              });\n            }\n          }\n        }).catch(function (error) {\n          _this.handleError(error);\n          /* istanbul ignore else */\n\n\n          if (cacheRequests) {\n            var cache = cacheStore[src];\n            /* istanbul ignore else */\n\n            if (cache) {\n              cache.queue.forEach(function (cb) {\n                cb(error);\n              });\n              delete cacheStore[src];\n            }\n          }\n        });\n      } catch (error) {\n        return _this.handleError(new Error(error.message));\n      }\n    };\n\n    _this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.PENDING\n    };\n    _this.hash = props.uniqueHash || randomString(8);\n    return _this;\n  }\n\n  InlineSVG.prototype.componentDidMount = function () {\n    this.isActive = true;\n\n    if (!canUseDOM()) {\n      return;\n    }\n\n    var status = this.state.status;\n    var src = this.props.src;\n\n    try {\n      /* istanbul ignore else */\n      if (status === STATUS.PENDING) {\n        /* istanbul ignore else */\n        if (!isSupportedEnvironment()) {\n          throw new Error('Browser does not support SVG');\n        }\n        /* istanbul ignore else */\n\n\n        if (!src) {\n          throw new Error('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error) {\n      this.handleError(error);\n    }\n  };\n\n  InlineSVG.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    var _a = this.state,\n        hasCache = _a.hasCache,\n        status = _a.status;\n    var _b = this.props,\n        onLoad = _b.onLoad,\n        src = _b.src;\n\n    if (prevState.status !== STATUS.READY && status === STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (prevProps.src !== src) {\n      if (!src) {\n        this.handleError(new Error('Missing src'));\n        return;\n      }\n\n      this.load();\n    }\n  };\n\n  InlineSVG.prototype.componentWillUnmount = function () {\n    this.isActive = false;\n  };\n\n  InlineSVG.prototype.processSVG = function () {\n    var content = this.state.content;\n    var preProcessor = this.props.preProcessor;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  };\n\n  InlineSVG.prototype.updateSVGAttributes = function (node) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.baseURL,\n        baseURL = _b === void 0 ? '' : _b,\n        uniquifyIDs = _a.uniquifyIDs;\n    var replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    var linkAttributes = ['href', 'xlink:href'];\n\n    var isDataValue = function (name, value) {\n      return linkAttributes.indexOf(name) >= 0 && (value ? value.indexOf('#') < 0 : false);\n    };\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    __spreadArray([], __read(node.children)).map(function (d) {\n      if (d.attributes && d.attributes.length) {\n        var attributes_1 = Object.values(d.attributes).map(function (a) {\n          var attr = a;\n          var match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            attr.value = a.value.replace(match[0], \"url(\" + baseURL + match[1] + \"__\" + _this.hash + \")\");\n          }\n\n          return attr;\n        });\n        replaceableAttributes.forEach(function (r) {\n          var attribute = attributes_1.find(function (a) {\n            return a.name === r;\n          });\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = attribute.value + \"__\" + _this.hash;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        return _this.updateSVGAttributes(d);\n      }\n\n      return d;\n    });\n\n    return node;\n  };\n\n  InlineSVG.prototype.getNode = function () {\n    var _a = this.props,\n        description = _a.description,\n        title = _a.title;\n\n    try {\n      var svgText = this.processSVG();\n      var node = convert(svgText, {\n        nodeOnly: true\n      });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new Error('Could not convert the src to a DOM Node');\n      }\n\n      var svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        var originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        var descElement = document.createElement('desc');\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (title) {\n        var originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        var titleElement = document.createElement('title');\n        titleElement.innerHTML = title;\n        svg.prepend(titleElement);\n      }\n\n      return svg;\n    } catch (error) {\n      return this.handleError(error);\n    }\n  };\n\n  InlineSVG.prototype.getElement = function () {\n    try {\n      var node = this.getNode();\n      var element = convert(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new Error('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element: element,\n        status: STATUS.READY\n      });\n    } catch (error) {\n      this.handleError(new Error(error.message));\n    }\n  };\n\n  InlineSVG.prototype.load = function () {\n    var _this = this;\n    /* istanbul ignore else */\n\n\n    if (this.isActive) {\n      this.setState({\n        content: '',\n        element: null,\n        status: STATUS.LOADING\n      }, function () {\n        var _a = _this.props,\n            cacheRequests = _a.cacheRequests,\n            src = _a.src;\n        var cache = cacheRequests && cacheStore[src];\n\n        if (cache) {\n          /* istanbul ignore else */\n          if (cache.status === STATUS.LOADING) {\n            cache.queue.push(_this.handleCacheQueue);\n          } else if (cache.status === STATUS.LOADED) {\n            _this.handleLoad(cache.content);\n          }\n\n          return;\n        }\n\n        var dataURI = src.match(/data:image\\/svg[^,]*?(;base64)?,(.*)/);\n        var inlineSrc;\n\n        if (dataURI) {\n          inlineSrc = dataURI[1] ? atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n        } else if (src.indexOf('<svg') >= 0) {\n          inlineSrc = src;\n        }\n\n        if (inlineSrc) {\n          _this.handleLoad(inlineSrc);\n\n          return;\n        }\n\n        _this.request();\n      });\n    }\n  };\n\n  InlineSVG.prototype.render = function () {\n    var _a = this.state,\n        element = _a.element,\n        status = _a.status;\n    var _b = this.props,\n        _c = _b.children,\n        children = _c === void 0 ? null : _c,\n        innerRef = _b.innerRef,\n        _d = _b.loader,\n        loader = _d === void 0 ? null : _d;\n    var elementProps = removeProperties(this.props, 'baseURL', 'cacheRequests', 'children', 'description', 'fetchOptions', 'innerRef', 'loader', 'onError', 'onLoad', 'preProcessor', 'src', 'title', 'uniqueHash', 'uniquifyIDs');\n\n    if (!canUseDOM()) {\n      return loader;\n    }\n\n    if (element) {\n      return React.cloneElement(element, __assign({\n        ref: innerRef\n      }, elementProps));\n    }\n\n    if ([STATUS.UNSUPPORTED, STATUS.FAILED].indexOf(status) > -1) {\n      return children;\n    }\n\n    return loader;\n  };\n\n  InlineSVG.defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false\n  };\n  return InlineSVG;\n}(React.PureComponent);\n\nexport default InlineSVG;\nexport * from './types';","map":{"version":3,"sources":["../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport * as React from 'react';\nimport convert from 'react-from-dom';\nimport { STATUS, canUseDOM, isSupportedEnvironment, randomString, removeProperties, } from './helpers';\nexport var cacheStore = Object.create(null);\nvar InlineSVG = /** @class */ (function (_super) {\n    __extends(InlineSVG, _super);\n    function InlineSVG(props) {\n        var _this = _super.call(this, props) || this;\n        _this.isActive = false;\n        _this.handleCacheQueue = function (content) {\n            /* istanbul ignore else */\n            if (typeof content === 'string') {\n                _this.handleLoad(content);\n                return;\n            }\n            _this.handleError(content);\n        };\n        _this.handleLoad = function (content) {\n            /* istanbul ignore else */\n            if (_this.isActive) {\n                _this.setState({\n                    content: content,\n                    status: STATUS.LOADED,\n                }, _this.getElement);\n            }\n        };\n        _this.handleError = function (error) {\n            var onError = _this.props.onError;\n            var status = error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n            /* istanbul ignore else */\n            if (_this.isActive) {\n                _this.setState({ status: status }, function () {\n                    /* istanbul ignore else */\n                    if (typeof onError === 'function') {\n                        onError(error);\n                    }\n                });\n            }\n        };\n        _this.request = function () {\n            var _a = _this.props, cacheRequests = _a.cacheRequests, fetchOptions = _a.fetchOptions, src = _a.src;\n            try {\n                if (cacheRequests) {\n                    cacheStore[src] = { content: '', status: STATUS.LOADING, queue: [] };\n                }\n                return fetch(src, fetchOptions)\n                    .then(function (response) {\n                    var contentType = response.headers.get('content-type');\n                    var _a = __read((contentType || '').split(/ ?; ?/), 1), fileType = _a[0];\n                    if (response.status > 299) {\n                        throw new Error('Not found');\n                    }\n                    if (!['image/svg+xml', 'text/plain'].some(function (d) { return fileType.indexOf(d) >= 0; })) {\n                        throw new Error(\"Content type isn't valid: \" + fileType);\n                    }\n                    return response.text();\n                })\n                    .then(function (content) {\n                    var currentSrc = _this.props.src;\n                    // the current src don't match the previous one, skipping...\n                    if (src !== currentSrc) {\n                        return;\n                    }\n                    _this.handleLoad(content);\n                    /* istanbul ignore else */\n                    if (cacheRequests) {\n                        var cache = cacheStore[src];\n                        /* istanbul ignore else */\n                        if (cache) {\n                            cache.content = content;\n                            cache.status = STATUS.LOADED;\n                            cache.queue = cache.queue.filter(function (cb) {\n                                cb(content);\n                                return false;\n                            });\n                        }\n                    }\n                })\n                    .catch(function (error) {\n                    _this.handleError(error);\n                    /* istanbul ignore else */\n                    if (cacheRequests) {\n                        var cache = cacheStore[src];\n                        /* istanbul ignore else */\n                        if (cache) {\n                            cache.queue.forEach(function (cb) {\n                                cb(error);\n                            });\n                            delete cacheStore[src];\n                        }\n                    }\n                });\n            }\n            catch (error) {\n                return _this.handleError(new Error(error.message));\n            }\n        };\n        _this.state = {\n            content: '',\n            element: null,\n            hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n            status: STATUS.PENDING,\n        };\n        _this.hash = props.uniqueHash || randomString(8);\n        return _this;\n    }\n    InlineSVG.prototype.componentDidMount = function () {\n        this.isActive = true;\n        if (!canUseDOM()) {\n            return;\n        }\n        var status = this.state.status;\n        var src = this.props.src;\n        try {\n            /* istanbul ignore else */\n            if (status === STATUS.PENDING) {\n                /* istanbul ignore else */\n                if (!isSupportedEnvironment()) {\n                    throw new Error('Browser does not support SVG');\n                }\n                /* istanbul ignore else */\n                if (!src) {\n                    throw new Error('Missing src');\n                }\n                this.load();\n            }\n        }\n        catch (error) {\n            this.handleError(error);\n        }\n    };\n    InlineSVG.prototype.componentDidUpdate = function (prevProps, prevState) {\n        if (!canUseDOM()) {\n            return;\n        }\n        var _a = this.state, hasCache = _a.hasCache, status = _a.status;\n        var _b = this.props, onLoad = _b.onLoad, src = _b.src;\n        if (prevState.status !== STATUS.READY && status === STATUS.READY) {\n            /* istanbul ignore else */\n            if (onLoad) {\n                onLoad(src, hasCache);\n            }\n        }\n        if (prevProps.src !== src) {\n            if (!src) {\n                this.handleError(new Error('Missing src'));\n                return;\n            }\n            this.load();\n        }\n    };\n    InlineSVG.prototype.componentWillUnmount = function () {\n        this.isActive = false;\n    };\n    InlineSVG.prototype.processSVG = function () {\n        var content = this.state.content;\n        var preProcessor = this.props.preProcessor;\n        if (preProcessor) {\n            return preProcessor(content);\n        }\n        return content;\n    };\n    InlineSVG.prototype.updateSVGAttributes = function (node) {\n        var _this = this;\n        var _a = this.props, _b = _a.baseURL, baseURL = _b === void 0 ? '' : _b, uniquifyIDs = _a.uniquifyIDs;\n        var replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n        var linkAttributes = ['href', 'xlink:href'];\n        var isDataValue = function (name, value) {\n            return linkAttributes.indexOf(name) >= 0 && (value ? value.indexOf('#') < 0 : false);\n        };\n        if (!uniquifyIDs) {\n            return node;\n        }\n        __spreadArray([], __read(node.children)).map(function (d) {\n            if (d.attributes && d.attributes.length) {\n                var attributes_1 = Object.values(d.attributes).map(function (a) {\n                    var attr = a;\n                    var match = a.value.match(/url\\((.*?)\\)/);\n                    if (match && match[1]) {\n                        attr.value = a.value.replace(match[0], \"url(\" + baseURL + match[1] + \"__\" + _this.hash + \")\");\n                    }\n                    return attr;\n                });\n                replaceableAttributes.forEach(function (r) {\n                    var attribute = attributes_1.find(function (a) { return a.name === r; });\n                    if (attribute && !isDataValue(r, attribute.value)) {\n                        attribute.value = attribute.value + \"__\" + _this.hash;\n                    }\n                });\n            }\n            if (d.children.length) {\n                return _this.updateSVGAttributes(d);\n            }\n            return d;\n        });\n        return node;\n    };\n    InlineSVG.prototype.getNode = function () {\n        var _a = this.props, description = _a.description, title = _a.title;\n        try {\n            var svgText = this.processSVG();\n            var node = convert(svgText, { nodeOnly: true });\n            if (!node || !(node instanceof SVGSVGElement)) {\n                throw new Error('Could not convert the src to a DOM Node');\n            }\n            var svg = this.updateSVGAttributes(node);\n            if (description) {\n                var originalDesc = svg.querySelector('desc');\n                if (originalDesc && originalDesc.parentNode) {\n                    originalDesc.parentNode.removeChild(originalDesc);\n                }\n                var descElement = document.createElement('desc');\n                descElement.innerHTML = description;\n                svg.prepend(descElement);\n            }\n            if (title) {\n                var originalTitle = svg.querySelector('title');\n                if (originalTitle && originalTitle.parentNode) {\n                    originalTitle.parentNode.removeChild(originalTitle);\n                }\n                var titleElement = document.createElement('title');\n                titleElement.innerHTML = title;\n                svg.prepend(titleElement);\n            }\n            return svg;\n        }\n        catch (error) {\n            return this.handleError(error);\n        }\n    };\n    InlineSVG.prototype.getElement = function () {\n        try {\n            var node = this.getNode();\n            var element = convert(node);\n            if (!element || !React.isValidElement(element)) {\n                throw new Error('Could not convert the src to a React element');\n            }\n            this.setState({\n                element: element,\n                status: STATUS.READY,\n            });\n        }\n        catch (error) {\n            this.handleError(new Error(error.message));\n        }\n    };\n    InlineSVG.prototype.load = function () {\n        var _this = this;\n        /* istanbul ignore else */\n        if (this.isActive) {\n            this.setState({\n                content: '',\n                element: null,\n                status: STATUS.LOADING,\n            }, function () {\n                var _a = _this.props, cacheRequests = _a.cacheRequests, src = _a.src;\n                var cache = cacheRequests && cacheStore[src];\n                if (cache) {\n                    /* istanbul ignore else */\n                    if (cache.status === STATUS.LOADING) {\n                        cache.queue.push(_this.handleCacheQueue);\n                    }\n                    else if (cache.status === STATUS.LOADED) {\n                        _this.handleLoad(cache.content);\n                    }\n                    return;\n                }\n                var dataURI = src.match(/data:image\\/svg[^,]*?(;base64)?,(.*)/);\n                var inlineSrc;\n                if (dataURI) {\n                    inlineSrc = dataURI[1] ? atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n                }\n                else if (src.indexOf('<svg') >= 0) {\n                    inlineSrc = src;\n                }\n                if (inlineSrc) {\n                    _this.handleLoad(inlineSrc);\n                    return;\n                }\n                _this.request();\n            });\n        }\n    };\n    InlineSVG.prototype.render = function () {\n        var _a = this.state, element = _a.element, status = _a.status;\n        var _b = this.props, _c = _b.children, children = _c === void 0 ? null : _c, innerRef = _b.innerRef, _d = _b.loader, loader = _d === void 0 ? null : _d;\n        var elementProps = removeProperties(this.props, 'baseURL', 'cacheRequests', 'children', 'description', 'fetchOptions', 'innerRef', 'loader', 'onError', 'onLoad', 'preProcessor', 'src', 'title', 'uniqueHash', 'uniquifyIDs');\n        if (!canUseDOM()) {\n            return loader;\n        }\n        if (element) {\n            return React.cloneElement(element, __assign({ ref: innerRef }, elementProps));\n        }\n        if ([STATUS.UNSUPPORTED, STATUS.FAILED].indexOf(status) > -1) {\n            return children;\n        }\n        return loader;\n    };\n    InlineSVG.defaultProps = {\n        cacheRequests: true,\n        uniquifyIDs: false,\n    };\n    return InlineSVG;\n}(React.PureComponent));\nexport default InlineSVG;\nexport * from './types';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}