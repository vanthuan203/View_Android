[{"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\index.tsx":"1","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\redux\\Store.ts":"2","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\App.tsx":"3","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\Metronici18n.tsx":"4","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\index.ts":"5","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\redux\\RootReducer.ts":"6","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\i18nProvider.tsx":"7","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\routing\\Routes.tsx":"8","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthInit.tsx":"9","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\axios\\SetupAxios.ts":"10","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\index.ts":"11","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthRedux.ts":"12","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts":"13","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterLayout.tsx":"14","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterInit.tsx":"15","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\routing\\PrivateRoutes.tsx":"16","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\ErrorsPage.tsx":"17","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\index.ts":"18","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\index.ts":"19","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\index.ts":"20","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutModels.ts":"21","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts":"22","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutSetup.ts":"23","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx":"24","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\PageData.tsx":"25","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutProvider.tsx":"26","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\utils\\AxiosConfig.ts":"27","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrdersPage.tsx":"28","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Content.tsx":"29","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx":"30","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Footer.tsx":"31","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\ScrollTop.tsx":"32","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx":"33","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx":"34","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error500.tsx":"35","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error404.tsx":"36","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx":"37","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts":"38","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountRedux.ts":"39","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\Logout.tsx":"40","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\AuthPage.tsx":"41","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\utils\\ApiHelper.ts":"42","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\index.ts":"43","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\index.ts":"44","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\index.ts":"45","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\ComputerList.tsx":"46","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrderList.tsx":"47","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx":"48","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\Topbar.tsx":"49","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx":"50","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx":"51","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts":"52","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountCRUD.ts":"53","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx":"54","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Registration.tsx":"55","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Login.tsx":"56","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts":"57","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts":"58","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\AssetHelpers.ts":"59","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts":"60","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\InboxCompose.tsx":"61","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\SearchModal.tsx":"62","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\MenuModal.tsx":"63","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx":"64","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\search\\Search.tsx":"65","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx":"66","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx":"67","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx":"68","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx":"69","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx":"70","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx":"71","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx":"72","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx":"73","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\chat\\ChatInner.tsx":"74","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\dataExamples.ts":"75","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\portal\\Portal.tsx":"76","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx":"77","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx":"78","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx":"79","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx":"80","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx":"81","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\RouterHelpers.ts":"82","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx":"83","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\components\\KTSVG.tsx":"84","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx":"85","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\StaticList.tsx":"86","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\index.ts":"87","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item6.tsx":"88","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item8.tsx":"89","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item7.tsx":"90","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item5.tsx":"91","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item4.tsx":"92","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item3.tsx":"93","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item2.tsx":"94","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item1.tsx":"95","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx":"96","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx":"97","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx":"98","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx":"99","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx":"100","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx":"101","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx":"102","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx":"103","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx":"104","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts":"105","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts":"106","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts":"107","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts":"108","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts":"109","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts":"110","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts":"111","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts":"112","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ChannelStaticItem\\index.tsx":"113","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts":"114","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts":"115","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts":"116","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts":"117","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts":"118","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts":"119","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts":"120","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts":"121","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts":"122","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts":"123","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts":"124","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts":"125","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\AccountPage.tsx":"126","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\index.ts":"127","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts":"128","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\UserList.tsx":"129","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts":"130","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx":"131","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx":"132","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx":"133","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx":"134","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\index.tsx":"135","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\redux\\Store.ts":"136","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\App.tsx":"137","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\Metronici18n.tsx":"138","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\index.ts":"139","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\redux\\RootReducer.ts":"140","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\i18nProvider.tsx":"141","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\routing\\Routes.tsx":"142","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthInit.tsx":"143","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\axios\\SetupAxios.ts":"144","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\index.ts":"145","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts":"146","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthRedux.ts":"147","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\routing\\PrivateRoutes.tsx":"148","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterLayout.tsx":"149","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterInit.tsx":"150","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\ErrorsPage.tsx":"151","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\index.ts":"152","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\index.ts":"153","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\index.ts":"154","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\index.ts":"155","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutModels.ts":"156","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts":"157","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutSetup.ts":"158","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\PageData.tsx":"159","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutProvider.tsx":"160","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx":"161","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\utils\\AxiosConfig.ts":"162","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\AccountPage.tsx":"163","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\ComputerList.tsx":"164","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrdersPage.tsx":"165","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Footer.tsx":"166","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\ScrollTop.tsx":"167","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx":"168","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Content.tsx":"169","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx":"170","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx":"171","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx":"172","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error404.tsx":"173","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error500.tsx":"174","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\Logout.tsx":"175","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\AuthPage.tsx":"176","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts":"177","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts":"178","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountRedux.ts":"179","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\utils\\ApiHelper.ts":"180","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\index.ts":"181","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\index.ts":"182","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\index.ts":"183","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\UserList.tsx":"184","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrderList.tsx":"185","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx":"186","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx":"187","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\Topbar.tsx":"188","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx":"189","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts":"190","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts":"191","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountCRUD.ts":"192","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Registration.tsx":"193","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Login.tsx":"194","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx":"195","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\dataExamples.ts":"196","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts":"197","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts":"198","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\SearchModal.tsx":"199","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\InboxCompose.tsx":"200","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\MenuModal.tsx":"201","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts":"202","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx":"203","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx":"204","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx":"205","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx":"206","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\search\\Search.tsx":"207","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx":"208","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx":"209","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx":"210","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\chat\\ChatInner.tsx":"211","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx":"212","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx":"213","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\portal\\Portal.tsx":"214","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx":"215","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx":"216","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx":"217","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx":"218","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts":"219","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts":"220","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx":"221","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\StaticList.tsx":"222","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\index.ts":"223","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx":"224","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx":"225","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx":"226","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item7.tsx":"227","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item6.tsx":"228","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item8.tsx":"229","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item5.tsx":"230","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item3.tsx":"231","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item2.tsx":"232","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item4.tsx":"233","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item1.tsx":"234","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx":"235","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx":"236","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx":"237","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx":"238","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx":"239","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx":"240","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx":"241","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx":"242","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts":"243","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts":"244","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts":"245","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts":"246","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts":"247","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts":"248","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts":"249","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts":"250","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts":"251","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts":"252","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts":"253","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts":"254","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts":"255","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts":"256","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts":"257","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts":"258","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\RouterHelpers.ts":"259","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\AssetHelpers.ts":"260","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts":"261","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts":"262","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ChannelStaticItem\\index.tsx":"263","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx":"264","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\components\\KTSVG.tsx":"265","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx":"266","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx":"267","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\index.ts":"268","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersRedux.ts":"269","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrdersPage.tsx":"270","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersCRUD.ts":"271","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrderList.tsx":"272","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddModal\\index.tsx":"273","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\components\\OrderItem\\index.tsx":"274","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditModal\\index.tsx":"275","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddManualModal\\index.tsx":"276","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditMulti\\index.tsx":"277","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar2.tsx":"278","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar4.tsx":"279","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrdersPage.tsx":"280","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersRedux.ts":"281","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrderList.tsx":"282","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersCRUD.ts":"283","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditModal\\index.tsx":"284","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditMulti\\index.tsx":"285","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddManualModal\\index.tsx":"286","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddModal\\index.tsx":"287","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\components\\OrderItem\\index.tsx":"288","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\index.ts":"289","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx":"290","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\AccountPage.tsx":"291","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountRedux.ts":"292","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\UserList.tsx":"293","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountCRUD.ts":"294","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\modals\\EditModal\\index.tsx":"295","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\components\\UserItem\\index.tsx":"296","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\index.ts":"297","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\AccountPage.tsx":"298","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountRedux.ts":"299","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\UserList.tsx":"300","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountCRUD.ts":"301","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\modals\\EditModal\\index.tsx":"302","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\components\\UserItem\\index.tsx":"303","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\index.ts":"304","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrdersPage.tsx":"305","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersRedux.ts":"306","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrderList.tsx":"307","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersCRUD.ts":"308","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\components\\OrderItem\\index.tsx":"309","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\index.ts":"310","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\BhManualModal\\index.tsx":"311","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\index.tsx":"312","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\redux\\Store.ts":"313","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\App.tsx":"314","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\Metronici18n.tsx":"315","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\index.ts":"316","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\redux\\RootReducer.ts":"317","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\i18nProvider.tsx":"318","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\routing\\Routes.tsx":"319","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthInit.tsx":"320","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\axios\\SetupAxios.ts":"321","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\index.ts":"322","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts":"323","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthRedux.ts":"324","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterInit.tsx":"325","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterLayout.tsx":"326","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\routing\\PrivateRoutes.tsx":"327","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\ErrorsPage.tsx":"328","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\index.ts":"329","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\index.ts":"330","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\index.ts":"331","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\index.ts":"332","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\index.ts":"333","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\index.ts":"334","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\index.ts":"335","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\index.ts":"336","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\index.ts":"337","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutModels.ts":"338","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts":"339","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutSetup.ts":"340","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutProvider.tsx":"341","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\PageData.tsx":"342","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx":"343","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\utils\\AxiosConfig.ts":"344","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\AccountPage.tsx":"345","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\AccountPage.tsx":"346","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\AccountPage.tsx":"347","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrdersPage.tsx":"348","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrdersPage.tsx":"349","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrdersPage.tsx":"350","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\ComputerList.tsx":"351","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\ScrollTop.tsx":"352","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Footer.tsx":"353","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx":"354","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Content.tsx":"355","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx":"356","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error500.tsx":"357","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx":"358","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error404.tsx":"359","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\Logout.tsx":"360","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\AuthPage.tsx":"361","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersRedux.ts":"362","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts":"363","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersRedux.ts":"364","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountRedux.ts":"365","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountRedux.ts":"366","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountRedux.ts":"367","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts":"368","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersRedux.ts":"369","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrdersPage.tsx":"370","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\utils\\ApiHelper.ts":"371","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\index.ts":"372","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\index.ts":"373","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\index.ts":"374","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\UserList.tsx":"375","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\UserList.tsx":"376","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrderList.tsx":"377","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\UserList.tsx":"378","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrderList.tsx":"379","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrderList.tsx":"380","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx":"381","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\Topbar.tsx":"382","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx":"383","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts":"384","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersCRUD.ts":"385","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersCRUD.ts":"386","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountCRUD.ts":"387","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountCRUD.ts":"388","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountCRUD.ts":"389","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersCRUD.ts":"390","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts":"391","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Login.tsx":"392","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Registration.tsx":"393","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx":"394","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrderList.tsx":"395","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts":"396","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts":"397","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts":"398","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts":"399","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts":"400","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\dataExamples.ts":"401","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\chat\\ChatInner.tsx":"402","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\components\\KTSVG.tsx":"403","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx":"404","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\modals\\EditModal\\index.tsx":"405","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditModal\\index.tsx":"406","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\modals\\EditModal\\index.tsx":"407","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditModal\\index.tsx":"408","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx":"409","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx":"410","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\StaticList.tsx":"411","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx":"412","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts":"413","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\index.ts":"414","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\AssetHelpers.ts":"415","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\BhManualModal\\index.tsx":"416","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\components\\UserItem\\index.tsx":"417","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\components\\UserItem\\index.tsx":"418","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx":"419","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditMulti\\index.tsx":"420","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddModal\\index.tsx":"421","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddManualModal\\index.tsx":"422","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\components\\OrderItem\\index.tsx":"423","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\components\\OrderItem\\index.tsx":"424","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx":"425","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx":"426","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts":"427","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts":"428","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts":"429","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx":"430","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts":"431","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts":"432","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts":"433","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts":"434","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts":"435","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts":"436","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\RouterHelpers.ts":"437","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts":"438","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts":"439","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts":"440","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts":"441","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts":"442","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts":"443","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts":"444","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts":"445","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx":"446","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx":"447","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx":"448","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx":"449","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\portal\\Portal.tsx":"450","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx":"451","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\InboxCompose.tsx":"452","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\MenuModal.tsx":"453","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx":"454","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx":"455","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx":"456","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx":"457","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx":"458","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx":"459","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx":"460","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx":"461","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx":"462","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx":"463","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditMulti\\index.tsx":"464","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddManualModal\\index.tsx":"465","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx":"466","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddModal\\index.tsx":"467","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx":"468","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\components\\OrderItem\\index.tsx":"469","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx":"470","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\SearchModal.tsx":"471","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\search\\Search.tsx":"472","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx":"473","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx":"474","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item8.tsx":"475","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item7.tsx":"476","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item1.tsx":"477","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item5.tsx":"478","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item2.tsx":"479","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item3.tsx":"480","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item4.tsx":"481","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item6.tsx":"482","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx":"483"},{"size":1749,"mtime":1652020961000,"results":"484","hashOfConfig":"485"},{"size":908,"mtime":1652020961000,"results":"486","hashOfConfig":"485"},{"size":734,"mtime":1652020961000,"results":"487","hashOfConfig":"485"},{"size":979,"mtime":1652020961000,"results":"488","hashOfConfig":"485"},{"size":93,"mtime":1652020961000,"results":"489","hashOfConfig":"485"},{"size":607,"mtime":1657957470354,"results":"490","hashOfConfig":"485"},{"size":1145,"mtime":1652020961000,"results":"491","hashOfConfig":"485"},{"size":1514,"mtime":1652020961000,"results":"492","hashOfConfig":"485"},{"size":1720,"mtime":1652020961000,"results":"493","hashOfConfig":"485"},{"size":221,"mtime":1652020961000,"results":"494","hashOfConfig":"485"},{"size":198,"mtime":1652020961000,"results":"495","hashOfConfig":"485"},{"size":2739,"mtime":1652020961000,"results":"496","hashOfConfig":"485"},{"size":1118,"mtime":1652020961000,"results":"497","hashOfConfig":"485"},{"size":1634,"mtime":1652020961000,"results":"498","hashOfConfig":"485"},{"size":851,"mtime":1652020961000,"results":"499","hashOfConfig":"485"},{"size":993,"mtime":1658205485643,"results":"500","hashOfConfig":"485"},{"size":2746,"mtime":1652020961000,"results":"501","hashOfConfig":"485"},{"size":155,"mtime":1652020961000,"results":"502","hashOfConfig":"485"},{"size":64,"mtime":1652020961000,"results":"503","hashOfConfig":"485"},{"size":67,"mtime":1657770769548,"results":"504","hashOfConfig":"485"},{"size":3468,"mtime":1652020961000,"results":"505","hashOfConfig":"485"},{"size":2082,"mtime":1652020961000,"results":"506","hashOfConfig":"485"},{"size":8370,"mtime":1652020961000,"results":"507","hashOfConfig":"485"},{"size":1594,"mtime":1652020961000,"results":"508","hashOfConfig":"485"},{"size":2381,"mtime":1652020961000,"results":"509","hashOfConfig":"485"},{"size":2374,"mtime":1652020961000,"results":"510","hashOfConfig":"485"},{"size":543,"mtime":1652020961000,"results":"511","hashOfConfig":"485"},{"size":1602,"mtime":1658474928119,"results":"512","hashOfConfig":"485"},{"size":527,"mtime":1652020961000,"results":"513","hashOfConfig":"485"},{"size":3200,"mtime":1659180404915,"results":"514","hashOfConfig":"485"},{"size":1425,"mtime":1659178909202,"results":"515","hashOfConfig":"485"},{"size":1380,"mtime":1652020961000,"results":"516","hashOfConfig":"485"},{"size":2677,"mtime":1652020961000,"results":"517","hashOfConfig":"485"},{"size":317,"mtime":1652020961000,"results":"518","hashOfConfig":"485"},{"size":314,"mtime":1652020961000,"results":"519","hashOfConfig":"485"},{"size":341,"mtime":1652020961000,"results":"520","hashOfConfig":"485"},{"size":820,"mtime":1652020961000,"results":"521","hashOfConfig":"485"},{"size":15348,"mtime":1658992718961,"results":"522","hashOfConfig":"485"},{"size":3734,"mtime":1657688822423,"results":"523","hashOfConfig":"485"},{"size":417,"mtime":1652020961000,"results":"524","hashOfConfig":"485"},{"size":2243,"mtime":1652020961000,"results":"525","hashOfConfig":"485"},{"size":2328,"mtime":1652020961000,"results":"526","hashOfConfig":"485"},{"size":1034,"mtime":1652020961000,"results":"527","hashOfConfig":"485"},{"size":508,"mtime":1652020961000,"results":"528","hashOfConfig":"485"},{"size":129,"mtime":1652020961000,"results":"529","hashOfConfig":"485"},{"size":2609,"mtime":1658293755518,"results":"530","hashOfConfig":"485"},{"size":10661,"mtime":1658396698299,"results":"531","hashOfConfig":"485"},{"size":1572,"mtime":1659180366255,"results":"532","hashOfConfig":"485"},{"size":4475,"mtime":1652020961000,"results":"533","hashOfConfig":"485"},{"size":1732,"mtime":1652020961000,"results":"534","hashOfConfig":"485"},{"size":2394,"mtime":1652020961000,"results":"535","hashOfConfig":"485"},{"size":1870,"mtime":1658313578467,"results":"536","hashOfConfig":"485"},{"size":558,"mtime":1657690327069,"results":"537","hashOfConfig":"485"},{"size":4285,"mtime":1652020961000,"results":"538","hashOfConfig":"485"},{"size":9402,"mtime":1652020961000,"results":"539","hashOfConfig":"485"},{"size":5472,"mtime":1652020961000,"results":"540","hashOfConfig":"485"},{"size":10395,"mtime":1652020961000,"results":"541","hashOfConfig":"485"},{"size":1734,"mtime":1652020961000,"results":"542","hashOfConfig":"485"},{"size":85,"mtime":1652020961000,"results":"543","hashOfConfig":"485"},{"size":1436,"mtime":1652020961000,"results":"544","hashOfConfig":"485"},{"size":8313,"mtime":1652020961000,"results":"545","hashOfConfig":"485"},{"size":6435,"mtime":1652020961000,"results":"546","hashOfConfig":"485"},{"size":6987,"mtime":1652020961000,"results":"547","hashOfConfig":"485"},{"size":5322,"mtime":1652020961000,"results":"548","hashOfConfig":"485"},{"size":31309,"mtime":1652020961000,"results":"549","hashOfConfig":"485"},{"size":2862,"mtime":1652020961000,"results":"550","hashOfConfig":"485"},{"size":2189,"mtime":1652020961000,"results":"551","hashOfConfig":"485"},{"size":6101,"mtime":1652020961000,"results":"552","hashOfConfig":"485"},{"size":11232,"mtime":1652020961000,"results":"553","hashOfConfig":"485"},{"size":50043,"mtime":1652020961000,"results":"554","hashOfConfig":"485"},{"size":2582,"mtime":1652020961000,"results":"555","hashOfConfig":"485"},{"size":100,"mtime":1652020961000,"results":"556","hashOfConfig":"485"},{"size":98,"mtime":1652020961000,"results":"557","hashOfConfig":"485"},{"size":6469,"mtime":1652020961000,"results":"558","hashOfConfig":"485"},{"size":6945,"mtime":1652020961000,"results":"559","hashOfConfig":"485"},{"size":725,"mtime":1652020961000,"results":"560","hashOfConfig":"485"},{"size":2717,"mtime":1652020961000,"results":"561","hashOfConfig":"485"},{"size":2214,"mtime":1652020961000,"results":"562","hashOfConfig":"485"},{"size":2124,"mtime":1652020961000,"results":"563","hashOfConfig":"485"},{"size":260,"mtime":1652020961000,"results":"564","hashOfConfig":"485"},{"size":37297,"mtime":1652020961000,"results":"565","hashOfConfig":"485"},{"size":360,"mtime":1652020961000,"results":"566","hashOfConfig":"485"},{"size":11352,"mtime":1658484774448,"results":"567","hashOfConfig":"485"},{"size":428,"mtime":1652020961000,"results":"568","hashOfConfig":"485"},{"size":1375,"mtime":1659179701173,"results":"569","hashOfConfig":"485"},{"size":2429,"mtime":1657957483333,"results":"570","hashOfConfig":"485"},{"size":341,"mtime":1652020961000,"results":"571","hashOfConfig":"485"},{"size":1288,"mtime":1652020961000,"results":"572","hashOfConfig":"485"},{"size":1196,"mtime":1652020961000,"results":"573","hashOfConfig":"485"},{"size":2219,"mtime":1652020961000,"results":"574","hashOfConfig":"485"},{"size":3061,"mtime":1652020961000,"results":"575","hashOfConfig":"485"},{"size":1572,"mtime":1652020961000,"results":"576","hashOfConfig":"485"},{"size":2875,"mtime":1652020961000,"results":"577","hashOfConfig":"485"},{"size":1300,"mtime":1652020961000,"results":"578","hashOfConfig":"485"},{"size":3938,"mtime":1652020961000,"results":"579","hashOfConfig":"485"},{"size":2180,"mtime":1652020961000,"results":"580","hashOfConfig":"485"},{"size":487,"mtime":1652020961000,"results":"581","hashOfConfig":"485"},{"size":2068,"mtime":1652020961000,"results":"582","hashOfConfig":"485"},{"size":1839,"mtime":1658294793953,"results":"583","hashOfConfig":"485"},{"size":4063,"mtime":1658485009959,"results":"584","hashOfConfig":"485"},{"size":12148,"mtime":1658382899792,"results":"585","hashOfConfig":"485"},{"size":10232,"mtime":1657856627390,"results":"586","hashOfConfig":"485"},{"size":13620,"mtime":1658484733523,"results":"587","hashOfConfig":"485"},{"size":1307,"mtime":1659179897869,"results":"588","hashOfConfig":"485"},{"size":62,"mtime":1652020961000,"results":"589","hashOfConfig":"485"},{"size":3366,"mtime":1652020961000,"results":"590","hashOfConfig":"485"},{"size":3149,"mtime":1652020961000,"results":"591","hashOfConfig":"485"},{"size":1767,"mtime":1652020961000,"results":"592","hashOfConfig":"485"},{"size":535,"mtime":1652020961000,"results":"593","hashOfConfig":"485"},{"size":1311,"mtime":1652020961000,"results":"594","hashOfConfig":"485"},{"size":1302,"mtime":1652020961000,"results":"595","hashOfConfig":"485"},{"size":13169,"mtime":1652020961000,"results":"596","hashOfConfig":"485"},{"size":1290,"mtime":1657875436581,"results":"597","hashOfConfig":"485"},{"size":68,"mtime":1652020961000,"results":"598","hashOfConfig":"485"},{"size":28518,"mtime":1652020961000,"results":"599","hashOfConfig":"485"},{"size":12311,"mtime":1652020961000,"results":"600","hashOfConfig":"485"},{"size":5561,"mtime":1652020961000,"results":"601","hashOfConfig":"485"},{"size":7253,"mtime":1652020961000,"results":"602","hashOfConfig":"485"},{"size":4974,"mtime":1652020961000,"results":"603","hashOfConfig":"485"},{"size":8196,"mtime":1652020961000,"results":"604","hashOfConfig":"485"},{"size":8671,"mtime":1652020961000,"results":"605","hashOfConfig":"485"},{"size":3762,"mtime":1652020961000,"results":"606","hashOfConfig":"485"},{"size":8607,"mtime":1652020961000,"results":"607","hashOfConfig":"485"},{"size":6925,"mtime":1652020961000,"results":"608","hashOfConfig":"485"},{"size":3664,"mtime":1652020961000,"results":"609","hashOfConfig":"485"},{"size":1265,"mtime":1666085849438,"results":"610","hashOfConfig":"485"},{"size":66,"mtime":1657957470386,"results":"611","hashOfConfig":"485"},{"size":8704,"mtime":1662976274436,"results":"612","hashOfConfig":"485"},{"size":7692,"mtime":1663043082022,"results":"613","hashOfConfig":"485"},{"size":807,"mtime":1662976256621,"results":"614","hashOfConfig":"485"},{"size":4508,"mtime":1659164377726,"results":"615","hashOfConfig":"485"},{"size":6173,"mtime":1662973785791,"results":"616","hashOfConfig":"485"},{"size":5493,"mtime":1659174319460,"results":"617","hashOfConfig":"485"},{"size":3833,"mtime":1663043874363,"results":"618","hashOfConfig":"485"},{"size":1749,"mtime":1652020961000,"results":"619","hashOfConfig":"620"},{"size":908,"mtime":1652020961000,"results":"621","hashOfConfig":"620"},{"size":734,"mtime":1652020961000,"results":"622","hashOfConfig":"620"},{"size":979,"mtime":1652020961000,"results":"623","hashOfConfig":"620"},{"size":93,"mtime":1652020961000,"results":"624","hashOfConfig":"620"},{"size":1108,"mtime":1673515797865,"results":"625","hashOfConfig":"620"},{"size":1145,"mtime":1652020961000,"results":"626","hashOfConfig":"620"},{"size":1514,"mtime":1652020961000,"results":"627","hashOfConfig":"620"},{"size":1720,"mtime":1652020961000,"results":"628","hashOfConfig":"620"},{"size":221,"mtime":1652020961000,"results":"629","hashOfConfig":"620"},{"size":198,"mtime":1652020961000,"results":"630","hashOfConfig":"620"},{"size":1132,"mtime":1671546857211,"results":"631","hashOfConfig":"620"},{"size":2739,"mtime":1652020961000,"results":"632","hashOfConfig":"620"},{"size":1668,"mtime":1673515613646,"results":"633","hashOfConfig":"620"},{"size":1609,"mtime":1671175489103,"results":"634","hashOfConfig":"620"},{"size":851,"mtime":1652020961000,"results":"635","hashOfConfig":"620"},{"size":2746,"mtime":1652020961000,"results":"636","hashOfConfig":"620"},{"size":155,"mtime":1652020961000,"results":"637","hashOfConfig":"620"},{"size":66,"mtime":1657957470386,"results":"638","hashOfConfig":"620"},{"size":64,"mtime":1673498723684,"results":"639","hashOfConfig":"620"},{"size":67,"mtime":1657770769548,"results":"640","hashOfConfig":"620"},{"size":3468,"mtime":1652020961000,"results":"641","hashOfConfig":"620"},{"size":2082,"mtime":1652020961000,"results":"642","hashOfConfig":"620"},{"size":8370,"mtime":1652020961000,"results":"643","hashOfConfig":"620"},{"size":2381,"mtime":1652020961000,"results":"644","hashOfConfig":"620"},{"size":2374,"mtime":1652020961000,"results":"645","hashOfConfig":"620"},{"size":1594,"mtime":1652020961000,"results":"646","hashOfConfig":"620"},{"size":543,"mtime":1652020961000,"results":"647","hashOfConfig":"620"},{"size":1286,"mtime":1673343295169,"results":"648","hashOfConfig":"620"},{"size":8949,"mtime":1672895444042,"results":"649","hashOfConfig":"620"},{"size":1425,"mtime":1673499312430,"results":"650","hashOfConfig":"620"},{"size":887,"mtime":1671270995712,"results":"651","hashOfConfig":"620"},{"size":1380,"mtime":1652020961000,"results":"652","hashOfConfig":"620"},{"size":3028,"mtime":1673338780889,"results":"653","hashOfConfig":"620"},{"size":527,"mtime":1652020961000,"results":"654","hashOfConfig":"620"},{"size":2447,"mtime":1673596988658,"results":"655","hashOfConfig":"620"},{"size":317,"mtime":1671170688685,"results":"656","hashOfConfig":"620"},{"size":820,"mtime":1673355912751,"results":"657","hashOfConfig":"620"},{"size":341,"mtime":1652020961000,"results":"658","hashOfConfig":"620"},{"size":314,"mtime":1652020961000,"results":"659","hashOfConfig":"620"},{"size":417,"mtime":1652020961000,"results":"660","hashOfConfig":"620"},{"size":2243,"mtime":1652020961000,"results":"661","hashOfConfig":"620"},{"size":12583,"mtime":1673498896140,"results":"662","hashOfConfig":"620"},{"size":8704,"mtime":1662976274436,"results":"663","hashOfConfig":"620"},{"size":5640,"mtime":1672749982078,"results":"664","hashOfConfig":"620"},{"size":2328,"mtime":1652020961000,"results":"665","hashOfConfig":"620"},{"size":1034,"mtime":1652020961000,"results":"666","hashOfConfig":"620"},{"size":129,"mtime":1652020961000,"results":"667","hashOfConfig":"620"},{"size":508,"mtime":1652020961000,"results":"668","hashOfConfig":"620"},{"size":16750,"mtime":1675229861380,"results":"669","hashOfConfig":"620"},{"size":10713,"mtime":1673498723686,"results":"670","hashOfConfig":"620"},{"size":1574,"mtime":1671270096655,"results":"671","hashOfConfig":"620"},{"size":607,"mtime":1671170841657,"results":"672","hashOfConfig":"620"},{"size":2468,"mtime":1673949401034,"results":"673","hashOfConfig":"620"},{"size":2394,"mtime":1652020961000,"results":"674","hashOfConfig":"620"},{"size":807,"mtime":1673346613512,"results":"675","hashOfConfig":"620"},{"size":2057,"mtime":1673498880770,"results":"676","hashOfConfig":"620"},{"size":839,"mtime":1672749303311,"results":"677","hashOfConfig":"620"},{"size":9402,"mtime":1652020961000,"results":"678","hashOfConfig":"620"},{"size":5472,"mtime":1673597937805,"results":"679","hashOfConfig":"620"},{"size":4285,"mtime":1652020961000,"results":"680","hashOfConfig":"620"},{"size":6945,"mtime":1652020961000,"results":"681","hashOfConfig":"620"},{"size":12311,"mtime":1652020961000,"results":"682","hashOfConfig":"620"},{"size":28518,"mtime":1652020961000,"results":"683","hashOfConfig":"620"},{"size":6435,"mtime":1652020961000,"results":"684","hashOfConfig":"620"},{"size":8313,"mtime":1652020961000,"results":"685","hashOfConfig":"620"},{"size":6987,"mtime":1652020961000,"results":"686","hashOfConfig":"620"},{"size":1436,"mtime":1652020961000,"results":"687","hashOfConfig":"620"},{"size":2356,"mtime":1673948785552,"results":"688","hashOfConfig":"620"},{"size":5322,"mtime":1652020961000,"results":"689","hashOfConfig":"620"},{"size":2862,"mtime":1652020961000,"results":"690","hashOfConfig":"620"},{"size":11232,"mtime":1652020961000,"results":"691","hashOfConfig":"620"},{"size":31309,"mtime":1652020961000,"results":"692","hashOfConfig":"620"},{"size":50043,"mtime":1652020961000,"results":"693","hashOfConfig":"620"},{"size":2582,"mtime":1652020961000,"results":"694","hashOfConfig":"620"},{"size":6101,"mtime":1652020961000,"results":"695","hashOfConfig":"620"},{"size":6469,"mtime":1652020961000,"results":"696","hashOfConfig":"620"},{"size":37297,"mtime":1652020961000,"results":"697","hashOfConfig":"620"},{"size":2214,"mtime":1652020961000,"results":"698","hashOfConfig":"620"},{"size":725,"mtime":1652020961000,"results":"699","hashOfConfig":"620"},{"size":260,"mtime":1652020961000,"results":"700","hashOfConfig":"620"},{"size":7999,"mtime":1675224051230,"results":"701","hashOfConfig":"620"},{"size":2406,"mtime":1673344060744,"results":"702","hashOfConfig":"620"},{"size":12521,"mtime":1674879526338,"results":"703","hashOfConfig":"620"},{"size":5561,"mtime":1652020961000,"results":"704","hashOfConfig":"620"},{"size":7253,"mtime":1652020961000,"results":"705","hashOfConfig":"620"},{"size":2346,"mtime":1673951496264,"results":"706","hashOfConfig":"620"},{"size":5527,"mtime":1673599203331,"results":"707","hashOfConfig":"620"},{"size":341,"mtime":1652020961000,"results":"708","hashOfConfig":"620"},{"size":2180,"mtime":1652020961000,"results":"709","hashOfConfig":"620"},{"size":487,"mtime":1652020961000,"results":"710","hashOfConfig":"620"},{"size":8475,"mtime":1675227186172,"results":"711","hashOfConfig":"620"},{"size":2219,"mtime":1652020961000,"results":"712","hashOfConfig":"620"},{"size":1288,"mtime":1652020961000,"results":"713","hashOfConfig":"620"},{"size":1196,"mtime":1652020961000,"results":"714","hashOfConfig":"620"},{"size":3061,"mtime":1652020961000,"results":"715","hashOfConfig":"620"},{"size":2875,"mtime":1652020961000,"results":"716","hashOfConfig":"620"},{"size":1300,"mtime":1652020961000,"results":"717","hashOfConfig":"620"},{"size":1572,"mtime":1652020961000,"results":"718","hashOfConfig":"620"},{"size":3938,"mtime":1652020961000,"results":"719","hashOfConfig":"620"},{"size":2717,"mtime":1652020961000,"results":"720","hashOfConfig":"620"},{"size":10237,"mtime":1673498723694,"results":"721","hashOfConfig":"620"},{"size":13469,"mtime":1674879526314,"results":"722","hashOfConfig":"620"},{"size":5433,"mtime":1673498723710,"results":"723","hashOfConfig":"620"},{"size":18308,"mtime":1674879526322,"results":"724","hashOfConfig":"620"},{"size":1307,"mtime":1671268725710,"results":"725","hashOfConfig":"620"},{"size":9101,"mtime":1675224051224,"results":"726","hashOfConfig":"620"},{"size":6569,"mtime":1675229357735,"results":"727","hashOfConfig":"620"},{"size":3366,"mtime":1652020961000,"results":"728","hashOfConfig":"620"},{"size":3149,"mtime":1652020961000,"results":"729","hashOfConfig":"620"},{"size":535,"mtime":1652020961000,"results":"730","hashOfConfig":"620"},{"size":1311,"mtime":1652020961000,"results":"731","hashOfConfig":"620"},{"size":1767,"mtime":1652020961000,"results":"732","hashOfConfig":"620"},{"size":1302,"mtime":1652020961000,"results":"733","hashOfConfig":"620"},{"size":13169,"mtime":1652020961000,"results":"734","hashOfConfig":"620"},{"size":68,"mtime":1652020961000,"results":"735","hashOfConfig":"620"},{"size":62,"mtime":1652020961000,"results":"736","hashOfConfig":"620"},{"size":4974,"mtime":1652020961000,"results":"737","hashOfConfig":"620"},{"size":8196,"mtime":1652020961000,"results":"738","hashOfConfig":"620"},{"size":8671,"mtime":1652020961000,"results":"739","hashOfConfig":"620"},{"size":3762,"mtime":1652020961000,"results":"740","hashOfConfig":"620"},{"size":6925,"mtime":1652020961000,"results":"741","hashOfConfig":"620"},{"size":8607,"mtime":1652020961000,"results":"742","hashOfConfig":"620"},{"size":3664,"mtime":1652020961000,"results":"743","hashOfConfig":"620"},{"size":360,"mtime":1652020961000,"results":"744","hashOfConfig":"620"},{"size":85,"mtime":1652020961000,"results":"745","hashOfConfig":"620"},{"size":10395,"mtime":1652020961000,"results":"746","hashOfConfig":"620"},{"size":1734,"mtime":1652020961000,"results":"747","hashOfConfig":"620"},{"size":1052,"mtime":1671255392901,"results":"748","hashOfConfig":"620"},{"size":2124,"mtime":1652020961000,"results":"749","hashOfConfig":"620"},{"size":428,"mtime":1652020961000,"results":"750","hashOfConfig":"620"},{"size":98,"mtime":1652020961000,"results":"751","hashOfConfig":"620"},{"size":100,"mtime":1652020961000,"results":"752","hashOfConfig":"620"},{"size":64,"mtime":1652020961000,"results":"753","hashOfConfig":"620"},{"size":15546,"mtime":1676012014629,"results":"754","hashOfConfig":"620"},{"size":1482,"mtime":1673498657607,"results":"755","hashOfConfig":"620"},{"size":2970,"mtime":1676010042567,"results":"756","hashOfConfig":"620"},{"size":28375,"mtime":1676009250668,"results":"757","hashOfConfig":"620"},{"size":10238,"mtime":1671540890976,"results":"758","hashOfConfig":"620"},{"size":10307,"mtime":1674883655341,"results":"759","hashOfConfig":"620"},{"size":19865,"mtime":1675076143488,"results":"760","hashOfConfig":"620"},{"size":23808,"mtime":1675076143496,"results":"761","hashOfConfig":"620"},{"size":19392,"mtime":1676012208498,"results":"762","hashOfConfig":"620"},{"size":107,"mtime":1652020961000,"results":"763","hashOfConfig":"620"},{"size":107,"mtime":1652020961000,"results":"764","hashOfConfig":"620"},{"size":1497,"mtime":1673499370585,"results":"765","hashOfConfig":"620"},{"size":13790,"mtime":1673499325038,"results":"766","hashOfConfig":"620"},{"size":27910,"mtime":1673860386585,"results":"767","hashOfConfig":"620"},{"size":1744,"mtime":1673499312400,"results":"768","hashOfConfig":"620"},{"size":14658,"mtime":1671542393062,"results":"769","hashOfConfig":"620"},{"size":15149,"mtime":1671542393051,"results":"770","hashOfConfig":"620"},{"size":16206,"mtime":1671542393045,"results":"771","hashOfConfig":"620"},{"size":10250,"mtime":1671542393067,"results":"772","hashOfConfig":"620"},{"size":7305,"mtime":1673842243908,"results":"773","hashOfConfig":"620"},{"size":64,"mtime":1652020961000,"results":"774","hashOfConfig":"620"},{"size":1633,"mtime":1671272608570,"results":"775","hashOfConfig":"620"},{"size":1183,"mtime":1673349949831,"results":"776","hashOfConfig":"620"},{"size":8695,"mtime":1673353199938,"results":"777","hashOfConfig":"620"},{"size":3578,"mtime":1673594437166,"results":"778","hashOfConfig":"620"},{"size":819,"mtime":1673344624118,"results":"779","hashOfConfig":"620"},{"size":5512,"mtime":1673594627900,"results":"780","hashOfConfig":"620"},{"size":3646,"mtime":1673594452079,"results":"781","hashOfConfig":"620"},{"size":66,"mtime":1657957470385,"results":"782","hashOfConfig":"620"},{"size":1187,"mtime":1673500084146,"results":"783","hashOfConfig":"620"},{"size":8670,"mtime":1673498382899,"results":"784","hashOfConfig":"620"},{"size":3234,"mtime":1673500141662,"results":"785","hashOfConfig":"620"},{"size":829,"mtime":1673501527602,"results":"786","hashOfConfig":"620"},{"size":4163,"mtime":1673502297358,"results":"787","hashOfConfig":"620"},{"size":2100,"mtime":1673502297350,"results":"788","hashOfConfig":"620"},{"size":66,"mtime":1657957470385,"results":"789","hashOfConfig":"620"},{"size":1193,"mtime":1673517025175,"results":"790","hashOfConfig":"620"},{"size":13604,"mtime":1673519088694,"results":"791","hashOfConfig":"620"},{"size":17762,"mtime":1673860975495,"results":"792","hashOfConfig":"620"},{"size":1725,"mtime":1673518245477,"results":"793","hashOfConfig":"620"},{"size":2949,"mtime":1673523909646,"results":"794","hashOfConfig":"620"},{"size":64,"mtime":1652020961000,"results":"795","hashOfConfig":"620"},{"size":10751,"mtime":1673938819713,"results":"796","hashOfConfig":"620"},{"size":1749,"mtime":1652020961000,"results":"797","hashOfConfig":"798"},{"size":908,"mtime":1652020961000,"results":"799","hashOfConfig":"798"},{"size":734,"mtime":1652020961000,"results":"800","hashOfConfig":"798"},{"size":979,"mtime":1652020961000,"results":"801","hashOfConfig":"798"},{"size":93,"mtime":1652020961000,"results":"802","hashOfConfig":"798"},{"size":1108,"mtime":1673515797865,"results":"803","hashOfConfig":"798"},{"size":1145,"mtime":1652020961000,"results":"804","hashOfConfig":"798"},{"size":1514,"mtime":1652020961000,"results":"805","hashOfConfig":"798"},{"size":1720,"mtime":1652020961000,"results":"806","hashOfConfig":"798"},{"size":221,"mtime":1652020961000,"results":"807","hashOfConfig":"798"},{"size":198,"mtime":1652020961000,"results":"808","hashOfConfig":"798"},{"size":1132,"mtime":1671546857211,"results":"809","hashOfConfig":"798"},{"size":2739,"mtime":1652020961000,"results":"810","hashOfConfig":"798"},{"size":851,"mtime":1652020961000,"results":"811","hashOfConfig":"798"},{"size":1609,"mtime":1671175489103,"results":"812","hashOfConfig":"798"},{"size":1668,"mtime":1673515613646,"results":"813","hashOfConfig":"798"},{"size":2746,"mtime":1652020961000,"results":"814","hashOfConfig":"798"},{"size":155,"mtime":1652020961000,"results":"815","hashOfConfig":"798"},{"size":64,"mtime":1652020961000,"results":"816","hashOfConfig":"798"},{"size":66,"mtime":1657957470386,"results":"817","hashOfConfig":"798"},{"size":64,"mtime":1652020961000,"results":"818","hashOfConfig":"798"},{"size":64,"mtime":1673498723684,"results":"819","hashOfConfig":"798"},{"size":66,"mtime":1657957470385,"results":"820","hashOfConfig":"798"},{"size":66,"mtime":1657957470385,"results":"821","hashOfConfig":"798"},{"size":64,"mtime":1652020961000,"results":"822","hashOfConfig":"798"},{"size":67,"mtime":1657770769548,"results":"823","hashOfConfig":"798"},{"size":3468,"mtime":1652020961000,"results":"824","hashOfConfig":"798"},{"size":2082,"mtime":1652020961000,"results":"825","hashOfConfig":"798"},{"size":8370,"mtime":1652020961000,"results":"826","hashOfConfig":"798"},{"size":2374,"mtime":1652020961000,"results":"827","hashOfConfig":"798"},{"size":2381,"mtime":1652020961000,"results":"828","hashOfConfig":"798"},{"size":1594,"mtime":1652020961000,"results":"829","hashOfConfig":"798"},{"size":543,"mtime":1652020961000,"results":"830","hashOfConfig":"798"},{"size":1286,"mtime":1673343295169,"results":"831","hashOfConfig":"798"},{"size":1183,"mtime":1673349949831,"results":"832","hashOfConfig":"798"},{"size":1187,"mtime":1673500084146,"results":"833","hashOfConfig":"798"},{"size":1497,"mtime":1673499370585,"results":"834","hashOfConfig":"798"},{"size":1482,"mtime":1673498657607,"results":"835","hashOfConfig":"798"},{"size":1193,"mtime":1673517025175,"results":"836","hashOfConfig":"798"},{"size":8949,"mtime":1672895444042,"results":"837","hashOfConfig":"798"},{"size":1380,"mtime":1652020961000,"results":"838","hashOfConfig":"798"},{"size":887,"mtime":1671270995712,"results":"839","hashOfConfig":"798"},{"size":3028,"mtime":1673338780889,"results":"840","hashOfConfig":"798"},{"size":527,"mtime":1652020961000,"results":"841","hashOfConfig":"798"},{"size":2447,"mtime":1673596988658,"results":"842","hashOfConfig":"798"},{"size":314,"mtime":1652020961000,"results":"843","hashOfConfig":"798"},{"size":820,"mtime":1673355912751,"results":"844","hashOfConfig":"798"},{"size":341,"mtime":1652020961000,"results":"845","hashOfConfig":"798"},{"size":417,"mtime":1652020961000,"results":"846","hashOfConfig":"798"},{"size":2243,"mtime":1652020961000,"results":"847","hashOfConfig":"798"},{"size":13790,"mtime":1673499325038,"results":"848","hashOfConfig":"798"},{"size":8704,"mtime":1662976274436,"results":"849","hashOfConfig":"798"},{"size":15545,"mtime":1676364345973,"results":"850","hashOfConfig":"798"},{"size":8695,"mtime":1673353199938,"results":"851","hashOfConfig":"798"},{"size":8670,"mtime":1673498382899,"results":"852","hashOfConfig":"798"},{"size":5640,"mtime":1672749982078,"results":"853","hashOfConfig":"798"},{"size":12583,"mtime":1673498896140,"results":"854","hashOfConfig":"798"},{"size":13604,"mtime":1673519088694,"results":"855","hashOfConfig":"798"},{"size":1425,"mtime":1673499312430,"results":"856","hashOfConfig":"798"},{"size":2328,"mtime":1652020961000,"results":"857","hashOfConfig":"798"},{"size":1034,"mtime":1652020961000,"results":"858","hashOfConfig":"798"},{"size":508,"mtime":1652020961000,"results":"859","hashOfConfig":"798"},{"size":129,"mtime":1652020961000,"results":"860","hashOfConfig":"798"},{"size":16750,"mtime":1675229861380,"results":"861","hashOfConfig":"798"},{"size":3578,"mtime":1673594437166,"results":"862","hashOfConfig":"798"},{"size":27895,"mtime":1676365962035,"results":"863","hashOfConfig":"798"},{"size":3234,"mtime":1673500141662,"results":"864","hashOfConfig":"798"},{"size":28350,"mtime":1676366330084,"results":"865","hashOfConfig":"798"},{"size":17762,"mtime":1673860975495,"results":"866","hashOfConfig":"798"},{"size":1574,"mtime":1671270096655,"results":"867","hashOfConfig":"798"},{"size":2468,"mtime":1673949401034,"results":"868","hashOfConfig":"798"},{"size":2394,"mtime":1652020961000,"results":"869","hashOfConfig":"798"},{"size":807,"mtime":1673346613512,"results":"870","hashOfConfig":"798"},{"size":2251,"mtime":1676370521275,"results":"871","hashOfConfig":"798"},{"size":1744,"mtime":1673499312400,"results":"872","hashOfConfig":"798"},{"size":819,"mtime":1673344624118,"results":"873","hashOfConfig":"798"},{"size":829,"mtime":1673501527602,"results":"874","hashOfConfig":"798"},{"size":839,"mtime":1672749303311,"results":"875","hashOfConfig":"798"},{"size":1725,"mtime":1673518245477,"results":"876","hashOfConfig":"798"},{"size":2057,"mtime":1673498880770,"results":"877","hashOfConfig":"798"},{"size":5472,"mtime":1673597937805,"results":"878","hashOfConfig":"798"},{"size":9402,"mtime":1652020961000,"results":"879","hashOfConfig":"798"},{"size":4285,"mtime":1652020961000,"results":"880","hashOfConfig":"798"},{"size":10713,"mtime":1673498723686,"results":"881","hashOfConfig":"798"},{"size":12311,"mtime":1652020961000,"results":"882","hashOfConfig":"798"},{"size":28518,"mtime":1652020961000,"results":"883","hashOfConfig":"798"},{"size":5561,"mtime":1652020961000,"results":"884","hashOfConfig":"798"},{"size":4974,"mtime":1652020961000,"results":"885","hashOfConfig":"798"},{"size":7253,"mtime":1652020961000,"results":"886","hashOfConfig":"798"},{"size":6945,"mtime":1652020961000,"results":"887","hashOfConfig":"798"},{"size":6469,"mtime":1652020961000,"results":"888","hashOfConfig":"798"},{"size":428,"mtime":1652020961000,"results":"889","hashOfConfig":"798"},{"size":7999,"mtime":1675224051230,"results":"890","hashOfConfig":"798"},{"size":4163,"mtime":1673502297358,"results":"891","hashOfConfig":"798"},{"size":14658,"mtime":1671542393062,"results":"892","hashOfConfig":"798"},{"size":5512,"mtime":1673594627900,"results":"893","hashOfConfig":"798"},{"size":6915,"mtime":1676365613285,"results":"894","hashOfConfig":"798"},{"size":2406,"mtime":1673344060744,"results":"895","hashOfConfig":"798"},{"size":2346,"mtime":1673951496264,"results":"896","hashOfConfig":"798"},{"size":5527,"mtime":1673599203331,"results":"897","hashOfConfig":"798"},{"size":12521,"mtime":1674879526338,"results":"898","hashOfConfig":"798"},{"size":1734,"mtime":1652020961000,"results":"899","hashOfConfig":"798"},{"size":341,"mtime":1652020961000,"results":"900","hashOfConfig":"798"},{"size":85,"mtime":1652020961000,"results":"901","hashOfConfig":"798"},{"size":10751,"mtime":1673938819713,"results":"902","hashOfConfig":"798"},{"size":3646,"mtime":1673594452079,"results":"903","hashOfConfig":"798"},{"size":2100,"mtime":1673502297350,"results":"904","hashOfConfig":"798"},{"size":1307,"mtime":1671268725710,"results":"905","hashOfConfig":"798"},{"size":7402,"mtime":1676365896791,"results":"906","hashOfConfig":"798"},{"size":9519,"mtime":1676365896798,"results":"907","hashOfConfig":"798"},{"size":13203,"mtime":1676370831059,"results":"908","hashOfConfig":"798"},{"size":2949,"mtime":1673523909646,"results":"909","hashOfConfig":"798"},{"size":6351,"mtime":1676371125671,"results":"910","hashOfConfig":"798"},{"size":5433,"mtime":1673498723710,"results":"911","hashOfConfig":"798"},{"size":13469,"mtime":1674879526314,"results":"912","hashOfConfig":"798"},{"size":3366,"mtime":1652020961000,"results":"913","hashOfConfig":"798"},{"size":3149,"mtime":1652020961000,"results":"914","hashOfConfig":"798"},{"size":535,"mtime":1652020961000,"results":"915","hashOfConfig":"798"},{"size":10237,"mtime":1673498723694,"results":"916","hashOfConfig":"798"},{"size":1311,"mtime":1652020961000,"results":"917","hashOfConfig":"798"},{"size":1767,"mtime":1652020961000,"results":"918","hashOfConfig":"798"},{"size":1302,"mtime":1652020961000,"results":"919","hashOfConfig":"798"},{"size":13169,"mtime":1652020961000,"results":"920","hashOfConfig":"798"},{"size":68,"mtime":1652020961000,"results":"921","hashOfConfig":"798"},{"size":62,"mtime":1652020961000,"results":"922","hashOfConfig":"798"},{"size":360,"mtime":1652020961000,"results":"923","hashOfConfig":"798"},{"size":8196,"mtime":1652020961000,"results":"924","hashOfConfig":"798"},{"size":8671,"mtime":1652020961000,"results":"925","hashOfConfig":"798"},{"size":3762,"mtime":1652020961000,"results":"926","hashOfConfig":"798"},{"size":8607,"mtime":1652020961000,"results":"927","hashOfConfig":"798"},{"size":6925,"mtime":1652020961000,"results":"928","hashOfConfig":"798"},{"size":3664,"mtime":1652020961000,"results":"929","hashOfConfig":"798"},{"size":10395,"mtime":1652020961000,"results":"930","hashOfConfig":"798"},{"size":1436,"mtime":1652020961000,"results":"931","hashOfConfig":"798"},{"size":1633,"mtime":1671272608570,"results":"932","hashOfConfig":"798"},{"size":260,"mtime":1652020961000,"results":"933","hashOfConfig":"798"},{"size":2124,"mtime":1652020961000,"results":"934","hashOfConfig":"798"},{"size":2214,"mtime":1652020961000,"results":"935","hashOfConfig":"798"},{"size":725,"mtime":1652020961000,"results":"936","hashOfConfig":"798"},{"size":2717,"mtime":1652020961000,"results":"937","hashOfConfig":"798"},{"size":8313,"mtime":1652020961000,"results":"938","hashOfConfig":"798"},{"size":6987,"mtime":1652020961000,"results":"939","hashOfConfig":"798"},{"size":98,"mtime":1652020961000,"results":"940","hashOfConfig":"798"},{"size":100,"mtime":1652020961000,"results":"941","hashOfConfig":"798"},{"size":11232,"mtime":1652020961000,"results":"942","hashOfConfig":"798"},{"size":2582,"mtime":1652020961000,"results":"943","hashOfConfig":"798"},{"size":50043,"mtime":1652020961000,"results":"944","hashOfConfig":"798"},{"size":6101,"mtime":1652020961000,"results":"945","hashOfConfig":"798"},{"size":2356,"mtime":1673948785552,"results":"946","hashOfConfig":"798"},{"size":5322,"mtime":1652020961000,"results":"947","hashOfConfig":"798"},{"size":37297,"mtime":1652020961000,"results":"948","hashOfConfig":"798"},{"size":18308,"mtime":1674879526322,"results":"949","hashOfConfig":"798"},{"size":15149,"mtime":1671542393051,"results":"950","hashOfConfig":"798"},{"size":16206,"mtime":1671542393045,"results":"951","hashOfConfig":"798"},{"size":8475,"mtime":1675227186172,"results":"952","hashOfConfig":"798"},{"size":10250,"mtime":1671542393067,"results":"953","hashOfConfig":"798"},{"size":9101,"mtime":1675224051224,"results":"954","hashOfConfig":"798"},{"size":7305,"mtime":1673842243908,"results":"955","hashOfConfig":"798"},{"size":6569,"mtime":1675229357735,"results":"956","hashOfConfig":"798"},{"size":6435,"mtime":1652020961000,"results":"957","hashOfConfig":"798"},{"size":31309,"mtime":1652020961000,"results":"958","hashOfConfig":"798"},{"size":2180,"mtime":1652020961000,"results":"959","hashOfConfig":"798"},{"size":487,"mtime":1652020961000,"results":"960","hashOfConfig":"798"},{"size":1196,"mtime":1652020961000,"results":"961","hashOfConfig":"798"},{"size":2219,"mtime":1652020961000,"results":"962","hashOfConfig":"798"},{"size":3938,"mtime":1652020961000,"results":"963","hashOfConfig":"798"},{"size":3061,"mtime":1652020961000,"results":"964","hashOfConfig":"798"},{"size":1300,"mtime":1652020961000,"results":"965","hashOfConfig":"798"},{"size":2875,"mtime":1652020961000,"results":"966","hashOfConfig":"798"},{"size":1572,"mtime":1652020961000,"results":"967","hashOfConfig":"798"},{"size":1288,"mtime":1652020961000,"results":"968","hashOfConfig":"798"},{"size":2862,"mtime":1652020961000,"results":"969","hashOfConfig":"798"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"973"},"96tys3",{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"978","messages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"980","messages":"981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"984","messages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"986","messages":"987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"988","messages":"989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"990","messages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"996","messages":"997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"998","messages":"999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1000","messages":"1001","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1004","messages":"1005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1006","messages":"1007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1008","messages":"1009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1012","messages":"1013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1014","messages":"1015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1016","messages":"1017","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1018","messages":"1019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1020","messages":"1021","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1022","messages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1024","messages":"1025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1026","messages":"1027","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1028","usedDeprecatedRules":"973"},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"973"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1046","messages":"1047","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"973"},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1051","usedDeprecatedRules":"973"},{"filePath":"1052","messages":"1053","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1054","messages":"1055","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1056","messages":"1057","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1062","messages":"1063","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1064","messages":"1065","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1066","messages":"1067","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1068","usedDeprecatedRules":"973"},{"filePath":"1069","messages":"1070","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1071","usedDeprecatedRules":"973"},{"filePath":"1072","messages":"1073","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1076","messages":"1077","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1078","messages":"1079","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1082","usedDeprecatedRules":"973"},{"filePath":"1083","messages":"1084","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1085","usedDeprecatedRules":"973"},{"filePath":"1086","messages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"973"},{"filePath":"1091","messages":"1092","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093","usedDeprecatedRules":"973"},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1098","messages":"1099","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1100","messages":"1101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1102","messages":"1103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1104","messages":"1105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1106","messages":"1107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1108","messages":"1109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1110","messages":"1111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1112","messages":"1113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1114","messages":"1115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1116","usedDeprecatedRules":"973"},{"filePath":"1117","messages":"1118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1119","messages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1125","messages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1135","messages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1137","messages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1145","messages":"1146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1149","usedDeprecatedRules":"973"},{"filePath":"1150","messages":"1151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1152","messages":"1153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1154","usedDeprecatedRules":"973"},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1157","usedDeprecatedRules":"973"},{"filePath":"1158","messages":"1159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1160","messages":"1161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1162","messages":"1163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1164","messages":"1165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1166","messages":"1167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1168","messages":"1169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1170","messages":"1171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1172","messages":"1173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1174","messages":"1175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1176","messages":"1177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1178","messages":"1179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1180","messages":"1181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1182","usedDeprecatedRules":"1183"},{"filePath":"1184","messages":"1185","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1186","usedDeprecatedRules":"973"},{"filePath":"1187","messages":"1188","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1189","usedDeprecatedRules":"973"},{"filePath":"1190","messages":"1191","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1192","usedDeprecatedRules":"973"},{"filePath":"1193","messages":"1194","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1195","usedDeprecatedRules":"973"},{"filePath":"1196","messages":"1197","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"973"},{"filePath":"1199","messages":"1200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1201","messages":"1202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1203","messages":"1204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1205","messages":"1206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1207","messages":"1208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1209","messages":"1210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1211","messages":"1212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1213","messages":"1214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1215","messages":"1216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1217","messages":"1218","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1219","usedDeprecatedRules":"973"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1222","messages":"1223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1224","messages":"1225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1226","messages":"1227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1230","messages":"1231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1232","messages":"1233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1234","messages":"1235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1236","messages":"1237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1238","messages":"1239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1240","messages":"1241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1242","messages":"1243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1244","messages":"1245","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1246"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"973"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1251","usedDeprecatedRules":"973"},{"filePath":"1252","messages":"1253","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1254","usedDeprecatedRules":"973"},{"filePath":"1255","messages":"1256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"973"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1260","usedDeprecatedRules":"973"},{"filePath":"1261","messages":"1262","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1263","usedDeprecatedRules":"973"},{"filePath":"1264","messages":"1265","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1266","usedDeprecatedRules":"973"},{"filePath":"1267","messages":"1268","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1269","usedDeprecatedRules":"973"},{"filePath":"1270","messages":"1271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"1272"},"1z0wgqw",{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1279","messages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1281","messages":"1282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1283","messages":"1284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1285","messages":"1286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1287","messages":"1288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1293","messages":"1294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1295","messages":"1296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1299","messages":"1300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1301","messages":"1302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1305","messages":"1306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1307","messages":"1308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1309","messages":"1310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1311","messages":"1312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1313","messages":"1314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1315","messages":"1316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1317","messages":"1318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1319","messages":"1320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1321","messages":"1322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1323","messages":"1324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1325","messages":"1326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1327","messages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1329","usedDeprecatedRules":"1272"},{"filePath":"1330","messages":"1331","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"1272"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"1272"},{"filePath":"1336","messages":"1337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1338","messages":"1339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1340","messages":"1341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1342","messages":"1343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1344","messages":"1345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1346","usedDeprecatedRules":"1272"},{"filePath":"1347","messages":"1348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1349","messages":"1350","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"1272"},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1357","messages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1359","messages":"1360","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361","usedDeprecatedRules":"1272"},{"filePath":"1362","messages":"1363","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1251","usedDeprecatedRules":"1272"},{"filePath":"1364","messages":"1365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"1272"},{"filePath":"1367","messages":"1368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1369","messages":"1370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1371","messages":"1372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1373","messages":"1374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1375","messages":"1376","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"1272"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"1272"},{"filePath":"1381","messages":"1382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1383","messages":"1384","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1385","messages":"1386","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"1272"},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"1272"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394","usedDeprecatedRules":"1272"},{"filePath":"1395","messages":"1396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397","usedDeprecatedRules":"1272"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"1272"},{"filePath":"1400","messages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093","usedDeprecatedRules":"1272"},{"filePath":"1402","messages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1408","messages":"1409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1412","messages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1414","messages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1416","messages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1418","messages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"1272"},{"filePath":"1421","messages":"1422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1423","messages":"1424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1425","messages":"1426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1427","messages":"1428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1429","messages":"1430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1431","messages":"1432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1433","messages":"1434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1435","messages":"1436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1437","messages":"1438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1439","messages":"1440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1441","messages":"1442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1443","messages":"1444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1445","messages":"1446","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1447","usedDeprecatedRules":"1272"},{"filePath":"1448","messages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1450","usedDeprecatedRules":"1272"},{"filePath":"1451","messages":"1452","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1453","usedDeprecatedRules":"1272"},{"filePath":"1454","messages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1456","messages":"1457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460","usedDeprecatedRules":"1272"},{"filePath":"1461","messages":"1462","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1463","usedDeprecatedRules":"1272"},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1468","messages":"1469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1470","messages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"1272"},{"filePath":"1473","messages":"1474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1475","messages":"1476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1477","messages":"1478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1479","messages":"1480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1481","messages":"1482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1483","messages":"1484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1485","messages":"1486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1487","messages":"1488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1489","messages":"1490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1491","messages":"1492","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1493","usedDeprecatedRules":"1272"},{"filePath":"1494","messages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1496","usedDeprecatedRules":"1272"},{"filePath":"1497","messages":"1498","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1499","usedDeprecatedRules":"1272"},{"filePath":"1500","messages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1502","usedDeprecatedRules":"1272"},{"filePath":"1503","messages":"1504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1505","messages":"1506","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1507","usedDeprecatedRules":"1272"},{"filePath":"1508","messages":"1509","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510","usedDeprecatedRules":"1272"},{"filePath":"1511","messages":"1512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1513","messages":"1514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1515","messages":"1516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1517","messages":"1518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1519","messages":"1520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1521","messages":"1522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1523","messages":"1524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1525","messages":"1526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1527","messages":"1528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1529","messages":"1530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1533","messages":"1534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1535","messages":"1536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1537","messages":"1538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1539","messages":"1540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1541","messages":"1542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1543","messages":"1544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1545","messages":"1546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1547","messages":"1548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1549","messages":"1550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1551","messages":"1552","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1553","messages":"1554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1555","messages":"1556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1557","messages":"1558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1559","messages":"1560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1561","messages":"1562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1563","messages":"1564","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1565"},{"filePath":"1566","messages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1568","usedDeprecatedRules":"1272"},{"filePath":"1569","messages":"1570","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1571"},{"filePath":"1572","messages":"1573","errorCount":0,"fatalErrorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1574"},{"filePath":"1575","messages":"1576","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1577","usedDeprecatedRules":"1272"},{"filePath":"1578","messages":"1579","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1580","usedDeprecatedRules":"1272"},{"filePath":"1581","messages":"1582","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1583","usedDeprecatedRules":"1272"},{"filePath":"1584","messages":"1585","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"1272"},{"filePath":"1587","messages":"1588","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1589"},{"filePath":"1590","messages":"1591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1592","messages":"1593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1594","messages":"1595","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1596","usedDeprecatedRules":"1272"},{"filePath":"1597","messages":"1598","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1599","usedDeprecatedRules":"1272"},{"filePath":"1600","messages":"1601","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1602","usedDeprecatedRules":"1272"},{"filePath":"1603","messages":"1604","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1605","usedDeprecatedRules":"1272"},{"filePath":"1606","messages":"1607","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1608","usedDeprecatedRules":"1272"},{"filePath":"1609","messages":"1610","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"1272"},{"filePath":"1612","messages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"1272"},{"filePath":"1615","messages":"1616","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1617","usedDeprecatedRules":"1272"},{"filePath":"1618","messages":"1619","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1620","usedDeprecatedRules":"1272"},{"filePath":"1621","messages":"1622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1623","messages":"1624","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"1272"},{"filePath":"1626","messages":"1627","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1628","usedDeprecatedRules":"1272"},{"filePath":"1629","messages":"1630","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631","usedDeprecatedRules":"1272"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1634","usedDeprecatedRules":"1272"},{"filePath":"1635","messages":"1636","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"1272"},{"filePath":"1638","messages":"1639","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"1272"},{"filePath":"1641","messages":"1642","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1643","usedDeprecatedRules":"1272"},{"filePath":"1644","messages":"1645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1646","messages":"1647","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1648","usedDeprecatedRules":"1272"},{"filePath":"1649","messages":"1650","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1651","usedDeprecatedRules":"1272"},{"filePath":"1652","messages":"1653","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1654","usedDeprecatedRules":"1272"},{"filePath":"1655","messages":"1656","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1657","usedDeprecatedRules":"1272"},{"filePath":"1658","messages":"1659","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1660","usedDeprecatedRules":"1272"},{"filePath":"1661","messages":"1662","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1663","usedDeprecatedRules":"1272"},{"filePath":"1664","messages":"1665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1666","messages":"1667","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"1272"},{"filePath":"1669","messages":"1670","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671","usedDeprecatedRules":"1272"},{"filePath":"1672","messages":"1673","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1674","usedDeprecatedRules":"1272"},{"filePath":"1675","messages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1677","usedDeprecatedRules":"1272"},{"filePath":"1678","messages":"1679","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1680","usedDeprecatedRules":"1272"},{"filePath":"1681","messages":"1682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1272"},{"filePath":"1683","messages":"1684","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1685","usedDeprecatedRules":"1272"},{"filePath":"1686","messages":"1687","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"972","usedDeprecatedRules":"1688"},"1d9ew57",{"filePath":"1689","messages":"1690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1691","messages":"1692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1693","messages":"1694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1695","messages":"1696","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1697","messages":"1698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1699","messages":"1700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1701","messages":"1702","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1703","messages":"1704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1705","messages":"1706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1707","messages":"1708","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1709","messages":"1710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1711","messages":"1712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1713","messages":"1714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1715","messages":"1716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1717","messages":"1718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1719","messages":"1720","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1721","messages":"1722","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1723","messages":"1724","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1725","messages":"1726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1727","messages":"1728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1729","messages":"1730","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1731","messages":"1732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1733","messages":"1734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1735","messages":"1736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1737","messages":"1738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1739","messages":"1740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1741","messages":"1742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1743","messages":"1744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1745","messages":"1746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1747","messages":"1748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1749","messages":"1750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1751","messages":"1752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1753","messages":"1754","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1329","usedDeprecatedRules":"1688"},{"filePath":"1755","messages":"1756","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1628","usedDeprecatedRules":"1688"},{"filePath":"1757","messages":"1758","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1648","usedDeprecatedRules":"1688"},{"filePath":"1759","messages":"1760","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1596","usedDeprecatedRules":"1688"},{"filePath":"1761","messages":"1762","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1568","usedDeprecatedRules":"1688"},{"filePath":"1763","messages":"1764","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"1688"},{"filePath":"1765","messages":"1766","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1332","usedDeprecatedRules":"1688"},{"filePath":"1767","messages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1769","messages":"1770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1771","messages":"1772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1773","messages":"1774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1346","usedDeprecatedRules":"1688"},{"filePath":"1777","messages":"1778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1779","messages":"1780","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1048","usedDeprecatedRules":"1688"},{"filePath":"1781","messages":"1782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1783","messages":"1784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1785","messages":"1786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1787","messages":"1788","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1599","usedDeprecatedRules":"1688"},{"filePath":"1789","messages":"1790","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1251","usedDeprecatedRules":"1688"},{"filePath":"1791","messages":"1792","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1793","usedDeprecatedRules":"1688"},{"filePath":"1794","messages":"1795","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1631","usedDeprecatedRules":"1688"},{"filePath":"1796","messages":"1797","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1651","usedDeprecatedRules":"1688"},{"filePath":"1798","messages":"1799","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1366","usedDeprecatedRules":"1688"},{"filePath":"1800","messages":"1801","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1361","usedDeprecatedRules":"1688"},{"filePath":"1802","messages":"1803","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1671","usedDeprecatedRules":"1688"},{"filePath":"1804","messages":"1805","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1335","usedDeprecatedRules":"1688"},{"filePath":"1806","messages":"1807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1808","messages":"1809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1810","messages":"1811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1812","messages":"1813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1814","messages":"1815","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1377","usedDeprecatedRules":"1688"},{"filePath":"1816","messages":"1817","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1634","usedDeprecatedRules":"1688"},{"filePath":"1818","messages":"1819","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1820","messages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1654","usedDeprecatedRules":"1688"},{"filePath":"1822","messages":"1823","errorCount":0,"fatalErrorCount":0,"warningCount":55,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1824","messages":"1825","errorCount":0,"fatalErrorCount":0,"warningCount":61,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1674","usedDeprecatedRules":"1688"},{"filePath":"1826","messages":"1827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1828","messages":"1829","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1387","usedDeprecatedRules":"1688"},{"filePath":"1830","messages":"1831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1832","messages":"1833","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1257","usedDeprecatedRules":"1688"},{"filePath":"1834","messages":"1835","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1836","messages":"1837","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1605","usedDeprecatedRules":"1688"},{"filePath":"1838","messages":"1839","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1637","usedDeprecatedRules":"1688"},{"filePath":"1840","messages":"1841","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1657","usedDeprecatedRules":"1688"},{"filePath":"1842","messages":"1843","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1397","usedDeprecatedRules":"1688"},{"filePath":"1844","messages":"1845","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1677","usedDeprecatedRules":"1688"},{"filePath":"1846","messages":"1847","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1394","usedDeprecatedRules":"1688"},{"filePath":"1848","messages":"1849","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1093","usedDeprecatedRules":"1688"},{"filePath":"1850","messages":"1851","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1090","usedDeprecatedRules":"1688"},{"filePath":"1852","messages":"1853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1854","messages":"1855","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1380","usedDeprecatedRules":"1688"},{"filePath":"1856","messages":"1857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1858","messages":"1859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1860","messages":"1861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1862","messages":"1863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1864","messages":"1865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1866","messages":"1867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1868","messages":"1869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1870","messages":"1871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1872","messages":"1873","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1447","usedDeprecatedRules":"1688"},{"filePath":"1874","messages":"1875","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1660","usedDeprecatedRules":"1688"},{"filePath":"1876","messages":"1877","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1608","usedDeprecatedRules":"1688"},{"filePath":"1878","messages":"1879","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1640","usedDeprecatedRules":"1688"},{"filePath":"1880","messages":"1881","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1882","messages":"1883","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1450","usedDeprecatedRules":"1688"},{"filePath":"1884","messages":"1885","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1460","usedDeprecatedRules":"1688"},{"filePath":"1886","messages":"1887","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1463","usedDeprecatedRules":"1688"},{"filePath":"1888","messages":"1889","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1453","usedDeprecatedRules":"1688"},{"filePath":"1890","messages":"1891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1892","messages":"1893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1894","messages":"1895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1896","messages":"1897","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1685","usedDeprecatedRules":"1688"},{"filePath":"1898","messages":"1899","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1643","usedDeprecatedRules":"1688"},{"filePath":"1900","messages":"1901","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1663","usedDeprecatedRules":"1688"},{"filePath":"1902","messages":"1903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1904","messages":"1905","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1906","messages":"1907","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1908","messages":"1909","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1910","messages":"1911","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1680","usedDeprecatedRules":"1688"},{"filePath":"1912","messages":"1913","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"1914","messages":"1915","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1499","usedDeprecatedRules":"1688"},{"filePath":"1916","messages":"1917","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1496","usedDeprecatedRules":"1688"},{"filePath":"1918","messages":"1919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1920","messages":"1921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1922","messages":"1923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1924","messages":"1925","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1493","usedDeprecatedRules":"1688"},{"filePath":"1926","messages":"1927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1928","messages":"1929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1930","messages":"1931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1932","messages":"1933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1934","messages":"1935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1936","messages":"1937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1938","messages":"1939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1940","messages":"1941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1942","messages":"1943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1944","messages":"1945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1946","messages":"1947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1948","messages":"1949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1950","messages":"1951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1952","messages":"1953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1954","messages":"1955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1956","messages":"1957","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1625","usedDeprecatedRules":"1688"},{"filePath":"1958","messages":"1959","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1960","messages":"1961","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1962","messages":"1963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1964","messages":"1965","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1966","messages":"1967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1968","messages":"1969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1970","messages":"1971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1972","messages":"1973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1974","messages":"1975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1976","messages":"1977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1978","messages":"1979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1980","messages":"1981","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1982","messages":"1983","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1984","messages":"1985","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1420","usedDeprecatedRules":"1688"},{"filePath":"1986","messages":"1987","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1988","messages":"1989","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"1990","messages":"1991","errorCount":0,"fatalErrorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1502","usedDeprecatedRules":"1688"},{"filePath":"1992","messages":"1993","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1611","usedDeprecatedRules":"1688"},{"filePath":"1994","messages":"1995","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1614","usedDeprecatedRules":"1688"},{"filePath":"1996","messages":"1997","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1472","usedDeprecatedRules":"1688"},{"filePath":"1998","messages":"1999","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1617","usedDeprecatedRules":"1688"},{"filePath":"2000","messages":"2001","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1507","usedDeprecatedRules":"1688"},{"filePath":"2002","messages":"2003","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"1620","usedDeprecatedRules":"1688"},{"filePath":"2004","messages":"2005","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1510","usedDeprecatedRules":"1688"},{"filePath":"2006","messages":"2007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2008","messages":"2009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2010","messages":"2011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2012","messages":"2013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2014","messages":"2015","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2016","messages":"2017","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2018","messages":"2019","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2020","messages":"2021","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2022","messages":"2023","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2024","messages":"2025","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2026","messages":"2027","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2028","messages":"2029","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},{"filePath":"2030","messages":"2031","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1688"},"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\index.tsx",["2032"],"/**\n * TIP: Replace this style import with dark styles to enable dark mode\n *\n * import './_metronic/assets/sass/style.dark.scss'\n *\n * TIP: Replace this style import with rtl styles to enable rtl mode\n *\n * import './_metronic/assets/css/style.rtl.css'\n **/\nimport './_metronic/assets/sass/style.scss'\nimport './_metronic/assets/sass/style.react.scss'\nimport 'antd/dist/antd.css';\n\nimport * as _redux from './setup'\n\nimport {Chart, registerables} from 'chart.js'\nimport store, {persistor} from './setup/redux/Store'\n\n// Apps\nimport {App} from './app/App'\nimport {MetronicI18nProvider} from './_metronic/i18n/Metronici18n'\n// Redux\n// https://github.com/rt2zz/redux-persist\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {Provider} from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n// Axios\nimport axios from 'axios'\n\n/**\n * Base URL of the website.\n *\n * @see https://facebook.github.io/create-react-app/docs/using-the-public-folder\n */\nconst {PUBLIC_URL} = process.env\n/**\n * Creates `axios-mock-adapter` instance for provided `axios` instance, add\n * basic Metronic mocks and returns it.\n *\n * @see https://github.com/ctimmerm/axios-mock-adapter\n */\n\n/**\n * Inject Metronic interceptors for axios.\n *\n * @see https://github.com/axios/axios#interceptors\n */\n_redux.setupAxios(store)\n\nChart.register(...registerables)\n\nReactDOM.render(\n  <MetronicI18nProvider>\n    <Provider store={store}>\n      {/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */}\n      <PersistGate persistor={persistor} loading={<div>Đang tải...</div>}>\n        <App basename={PUBLIC_URL} />\n      </PersistGate>\n    </Provider>\n  </MetronicI18nProvider>,\n  document.getElementById('root')\n)\n",["2033","2034"],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\redux\\Store.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\App.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\Metronici18n.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\redux\\RootReducer.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\i18nProvider.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\routing\\Routes.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthInit.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\setup\\axios\\SetupAxios.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthRedux.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterLayout.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterInit.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\routing\\PrivateRoutes.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\ErrorsPage.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutModels.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutSetup.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\PageData.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutProvider.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\utils\\AxiosConfig.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrdersPage.tsx",["2035","2036","2037"],"import React, { useEffect, useState } from 'react'\nimport { OrderList } from './OrderList'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { OrderModel } from './models/Order'\nimport { RootState } from 'setup'\nimport { actions } from './redux/OrdersRedux'\nimport EditModal from './modals/EditModal'\n\nconst WidgetsPage: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n  const channel_prior: number = useSelector<RootState>(({ orders }) => orders.channel_prior, shallowEqual) as number || 0\n  const [channelPrior,setChannelPrior] =useState(channel_prior)\n  const currentOrder: OrderModel = useSelector<RootState>(({ orders }) => orders.currentOrder, shallowEqual) as OrderModel || undefined\n  useEffect(() => {\n    //dispatch(actions.requestSetting())\n    //dispatch(actions.requestGroups())\n    dispatch(actions.requestOrders())\n  }, [])\n\n  useEffect(() => {\n    setChannelPrior(channel_prior)\n  }, [channel_prior])\n\n  const updateSetting = () => {\n    dispatch(actions.requestUpdateSetting(channelPrior))\n  }\n\n  const requestRemoveError=()=>{\n    dispatch(actions.requestRemoveError())\n  \n  }\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n        <div className='col-xl-12'>\n          <OrderList orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n      </div>\n      {\n        currentOrder && <EditModal key={currentOrder?.channel_id} item={currentOrder}  />\n      }\n    </>\n  )\n}\n\nexport default WidgetsPage\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Content.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Footer.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\ScrollTop.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx",["2038"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport clsx from 'clsx'\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\nimport {useLayout} from '../../core'\nimport {Header} from './Header'\nimport {DefaultTitle} from './page-title/DefaultTitle'\nimport {Topbar} from './Topbar'\n\nexport function HeaderWrapper() {\n  const {config, classes, attributes} = useLayout()\n  const {header, aside} = config\n\n  return (\n    <div\n      id='kt_header'\n      className={clsx('header', classes.header.join(' '), 'align-items-stretch')}\n      {...attributes.headerMenu}\n    >\n      <div\n        className={clsx(\n          classes.headerContainer.join(' '),\n          'd-flex align-items-stretch justify-content-between'\n        )}\n      >\n        {/* begin::Aside mobile toggle */}\n        {aside.display && (\n          <div className='d-flex align-items-center d-lg-none ms-n3 me-1' title='Show aside menu'>\n            <div\n              className='btn btn-icon btn-active-light-primary w-30px h-30px w-md-40px h-md-40px'\n              id='kt_aside_mobile_toggle'\n            >\n              <KTSVG path='/media/icons/duotune/abstract/abs015.svg' className='svg-icon-2x mt-1' />\n            </div>\n          </div>\n        )}\n        {/* end::Aside mobile toggle */}\n        {/* begin::Logo */}\n        {!aside.display && (\n          <div className='d-flex align-items-center flex-grow-1 flex-lg-grow-0'>\n            <Link to='/dashboard' className='d-lg-none'>\n              <img alt='Logo' src={toAbsoluteUrl('/media/logos/logo-2.svg')} className='h-30px' />\n            </Link>\n          </div>\n        )}\n        {/* end::Logo */}\n\n        {aside.display && (\n          <div className='d-flex align-items-center flex-grow-1 flex-lg-grow-0'>\n            <Link to='/' className='d-lg-none'>\n              <img alt='Logo' src={toAbsoluteUrl('/media/logos/logo-2.svg')} className='h-30px' />\n            </Link>\n          </div>\n        )}\n\n        {/* begin::Wrapper */}\n        <div className='d-flex align-items-stretch justify-content-between flex-lg-grow-1'>\n          {/* begin::Navbar */}\n          {header.left === 'menu' && (\n            <div className='d-flex align-items-stretch' id='kt_header_nav'>\n         \n            </div>\n          )}\n\n          {header.left === 'page-title' && (\n            <div className='d-flex align-items-center' id='kt_header_nav'>\n              <DefaultTitle />\n            </div>\n          )}\n\n          <div className='d-flex align-items-stretch flex-shrink-0'>\n            <Topbar />\n          </div>\n        </div>\n        {/* end::Wrapper */}\n      </div>\n    </div>\n  )\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error500.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error404.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx",["2039"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport { StaticList } from 'app/modules/history/StaticList'\nimport React, { FC } from 'react'\nimport { useIntl } from 'react-intl'\nimport { PageTitle } from '../../../_metronic/layout/core'\n\nconst DashboardPage: FC = () => (\n  <>\n    {/* begin::Row */}\n    <div className='row gy-5 gx-xl-12'>\n      <div className='col-xl-12'>\n\n      </div>\n    </div>\n    {/* end::Row */}\n    <div className='row gy-5 gx-xl-12'>\n      <div className='col-xl-12'>\n        <StaticList className='card-xxl-stretch mb-5 mb-xl-12' />\n      </div>\n    </div>\n\n  </>\n)\n\nconst DashboardWrapper: FC = () => {\n  const intl = useIntl()\n  return (\n    <>\n      <PageTitle breadcrumbs={[]}>{'Thống kê'}</PageTitle>\n      {\n        <DashboardPage />\n      }\n    </>\n  )\n}\n\nexport { DashboardWrapper }\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts",["2040","2041","2042","2043","2044","2045"],"import { Action } from '@reduxjs/toolkit'\nimport { App } from 'app/App'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\nimport { getListOrder, updateOrder, addOrder, getListGroups, addGroup,addOrderManual, deleteHistoryError, deleteGroup, updateSetting, deleteChannel, addOrderMulti, getSetting } from './OrdersCRUD'\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  RequestOrders: '[Orders] Requested',\n  RequestSetting: '[Setting] Requested',\n  RequestRemoveError: '[Setting] Request Remove Error',\n  RequestUpdateSetting: '[Setting] Request Update Setting',\n  UpdateSettingSuccess: '[Setting] Update Setting Success',\n  RequestSettingSuccess: '[Setting] Request Setting Success',\n  OrdersLoadedSuccess: '[Orders] Loaded succcess',\n  OrdersLoadedFail: '[Orders] load fail',\n  AddOrderRequest: '[Orders] Add Order Request',\n  AddOrderManualRequest: '[Orders] Add Order Manual Request',\n  AddOrderSuccess: '[Orders] Add Order Success',\n  AddOrdersSuccess: '[Orders] Add Orders Success',\n  AddOrderFail: '[Orders] Add Order Fail',\n  ShowcurrentOrder: '[orders] Show Account',\n  RequestUpdate: '[orders] Requested Update',\n  UpdateMultiOrderRequest: '[orders] Update Multi Order Request',\n  UpdateSuccess: '[orders] Update Success',\n  UpdateMultiSuccess: '[orders] Update Multi Success',\n  UpdateFail: '[orders] Update Fail',\n  ClearSelected: '[orders] Clear selected account',\n  GroupLoadedRequest: '[orders] Group Loaded Request',\n  GroupLoadedSuccess: '[orders] Group Loaded Success',\n  GroupLoadedFail: '[orders] Group Loaded Fail',\n  GroupAddRequest: '[orders] GroupAddRequest',\n  GroupAddSuccess: '[orders] Group Add Success',\n  GroupAddFail: '[orders] Group Add Fail',\n  GroupDeleteRequest: '[orders] Group Delete Request',\n  GroupDeleteSuccess: '[orders] Group Delete Success',\n  SelectGroup: '[orders] Select Group',\n  DeleteOrderRequest: '[orders] Delete Order Request',\n  DeleteOrderSuccess: '[orders] Delete Order Success',\n  CheckedChange: '[orders] Checked Change',\n  CheckedAllChange: '[orders] Checked All Change',\n}\n\nconst initialorderstate: Iorderstate = {\n  orders: [],\n  loading: false,\n  adding: false,\n  groups: [],\n  currentOrder: undefined,\n  currentGroup: undefined,\n  channel_prior: 0,\n  \n}\n\nexport interface Iorderstate {\n  orders: OrderModel[]\n  loading: boolean\n  adding: boolean\n  currentOrder?: OrderModel\n  groups: Group[]\n  currentGroup?: Group\n  channel_prior: number\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-orders', whitelist: [] },\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestOrders: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.OrdersLoadedSuccess: {\n        return {\n          ...state,\n          orders: action.payload?.orders || [],\n          loading: false\n        }\n      }\n      case actionTypes.GroupLoadedSuccess: {\n        return {\n          ...state,\n          groups: action.payload?.groups\n        }\n      }\n      case actionTypes.SelectGroup: {\n        return {\n          ...state,\n          currentGroup: action.payload?.group\n        }\n      }\n      case actionTypes.GroupDeleteSuccess: {\n        return {\n          ...state,\n          currentGroup: undefined,\n          groups: state.groups.filter((item: Group) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.DeleteOrderSuccess: {\n        return {\n          ...state,\n          orders: state.orders.filter((item: OrderModel) => {\n            if (item.channel_id === action.payload?.channel_id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.OrdersLoadedFail: {\n        return {\n          ...state,\n          orders: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n        const remaporders = state.orders.map((item: OrderUpdateForm) => {\n          if (item.channel_id === action.payload?.order?.channel_id) {\n            return action.payload?.order\n          } else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          const findItem = action.payload?.channels.find((_item:OrderModel)=>{\n            if(_item.channel_id===item.channel_id){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          adding: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.AddOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.AddOrderManualRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.GroupAddSuccess: {\n        return {\n          ...state,\n          groups: state.groups.concat(action.payload?.group)\n        }\n      }\n      case actionTypes.AddOrderSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.order)\n        }\n      }\n      case actionTypes.AddOrdersSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.orders)\n        }\n      }\n      case actionTypes.RequestSettingSuccess: {\n        return {\n          ...state,\n          channel_prior: action.payload.channel_prior\n        }\n      }\n      case actionTypes.AddOrderFail: {\n        return {\n          ...state,\n          adding: false,\n          message: action.payload?.message\n        }\n      }\n      case actionTypes.ShowcurrentOrder: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            if(item.channel_id===action.payload?.data?.channel_id){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      \n      \n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestOrders: () => ({ type: actionTypes.RequestOrders }),\n  requestSetting: () => ({ type: actionTypes.RequestSetting }),\n  requestRemoveError: () => ({ type: actionTypes.RequestRemoveError }),\n  requestUpdateSetting: (channel_prior: number) => ({ type: actionTypes.RequestUpdateSetting, payload: { channel_prior } }),\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\n  fillSetting: (channel_prior: number) => ({ type: actionTypes.RequestSettingSuccess, payload: { channel_prior } }),\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\n  requestUpdate: (order: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { order } }),\n  updateSuccess: (order: OrderUpdateForm) => ({ type: actionTypes.UpdateSuccess, payload: { order } }),\n  updateMultiSuccess: (channels: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { channels } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\n  deleteOrderRequest: (channel_id: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { channel_id } }),\n  deleteOrderSuccess: (channel_id: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { channel_id } }),\n  checkedChange: (data:{channel_id:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\n    const { data: orders } = yield getListOrder()\n    yield put(actions.fulfillorders(orders.channels))\n  })\n\n  yield takeLatest(actionTypes.RequestSetting, function* userRequested(param: any) {\n    const { data: result } = yield getSetting()\n    yield put(actions.fillSetting(result.channel_prior))\n  })\n\n  http://localhost:8080/Fitnees/\n\n  yield takeLatest(actionTypes.RequestUpdateSetting, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateSetting(param.payload.channel_prior)\n    if (result && result.status === \"success\") {\n      alert(\"Đã cập nhật số kênh ưu tiên thành công\")\n    }\n  })\n\n\n  yield takeLatest(actionTypes.RequestRemoveError, function* updateUserRequested() {\n    const { data: result } = yield deleteHistoryError()\n    if (result && result.status === \"success\") {\n      alert(\"Đã xóa luồng lỗi thành công\")\n    }\n  })\n\n\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateOrder(param.payload.order)\n    if (result && result.channel) {\n      yield put(actions.updateSuccess(result.channel))\n    } else {\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n  \n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrderManual(payload)\n        if (result && (result.channel)) {\n            yield put(actions.addOrderSuccess(result.channel))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrder(payload)\n        if (result && (result.channel||result.channels)) {\n          if(payload.channel_id.includes(\"\\n\")){\n            console.log(\"------channels------\",result.channels)\n            yield put(actions.addOrdersSuccess(result.channels))\n          }else{\n            yield put(actions.addOrderSuccess(result.channel))\n          }\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield updateOrder(payload)\n        if (result && result.channels) {\n          yield put(actions.updateMultiSuccess(result.channels))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        } \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.GroupLoadedRequest, function* addOrderRequest(param: any) {\n    try {\n      const { data: result } = yield getListGroups()\n      if (result && result.groups) {\n        yield put(actions.fulfillGroups(result.groups))\n      } else {\n\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\n    try {\n      const payload = param.payload.groupName\n      const { data: result } = yield addGroup(payload)\n      if (result && result.group) {\n        yield put(actions.addGroupSuccess(result.group))\n      } else {\n\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.GroupDeleteRequest, function* addOrderRequest(param: any) {\n    try {\n      const payload = param.payload.id\n      const { data: result } = yield deleteGroup(payload)\n      if (result && result.data!==null) {\n        yield put(actions.deleteGroupSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\n    try {\n      const payload = param.payload.channel_id\n      const { data: result } = yield deleteChannel(payload)\n      if (result&&result.channel!==null) {\n        yield put(actions.deleteOrderSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n\n\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountRedux.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\Logout.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\AuthPage.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\utils\\ApiHelper.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\ComputerList.tsx",["2046"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React,{useEffect} from 'react'\nimport {ComputerModel} from 'app/modules/history/models/Account'\nimport ComputerItem from './components/ComputerItem'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { actions } from './redux/AccountRedux'\nimport { RootState } from 'setup'\ntype Props = {\n  className: string,\n}\n\nconst ComputerList: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(actions.requestComputers())\n  }, [])\n\n  const computers:ComputerModel[] = useSelector<RootState>(({ histories }) => histories.computers, shallowEqual) as ComputerModel[] || []\n  let sum_total=0;\n  let sum_vps=0;\n  for (var i = 0; i < computers.length; i++) {\n    if(parseInt(computers[i].time)<60){\n      sum_vps=sum_vps+1;\n      sum_total=sum_total+computers[i].total;\n    }\n\n  }\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className='card-header border-0 pt-5'>\n        <h3 className='card-title align-items-start flex-column'>\n          <span className='card-label fw-bolder fs-3 mb-1'>Danh sách máy đang chạy</span>\n          <span className='text-muted mt-1 fw-bold fs-7'>Có {sum_vps} - Tổng {sum_total} luồng</span>\n        </h3>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr>\n                <th className='min-w-30px'>#</th>\n                <th className='min-w-140px'>VPS IP</th>\n                <th className='min-w-140px'>Số luồng đang chạy</th>\n                <th className='min-w-140px'>Lần cuối</th>\n                <th className='min-w-120px'>Hành động</th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {\n                computers&&computers?.map((item: ComputerModel,index:number) => {\n                  return <ComputerItem key={\"computer-\"+index} item={item} index={index}/>\n                })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n    </div>\n  )\n}\n\nexport default ComputerList\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrderList.tsx",["2047","2048","2049","2050","2051","2052"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\nimport {Group, OrderModel} from './models/Order'\nimport {Popover, Transition} from '@headlessui/react'\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\n\nimport AddManualModal from './modals/AddManualModal'\nimport AddModal from './modals/AddModal'\nimport EditMulti from './modals/EditMulti'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport OrderItem from './components/OrderItem'\nimport {RootState} from 'setup'\nimport {actions} from './redux/OrdersRedux'\n\ntype Props = {\n  className: string\n  orders: OrderModel[]\n}\nconst OrderList: React.FC<Props> = ({className, orders}) => {\n  const dispatch = useDispatch()\n  const [showAdd, setShowAdd] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n\n  const [groupName, setGroupName] = useState('')\n  const role: string =\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const groups: Group[] =\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\n  const currentGroup: Group =\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\n\n  const selectGroup = (item: Group) => {\n    dispatch(actions.selectGroup(item))\n  }\n\n  const addGroup = () => {\n    if (groupName.length === 0) {\n      alert('vui lòng điền tên nhóm')\n      return\n    }\n    dispatch(actions.addGroupRequest(groupName))\n    setGroupName('')\n  }\n\n  const isShowFixMulti = orders.find((item) => {\n    if (item.checked) {\n      return true\n    }\n    return false\n  })\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className='card-header border-0 pt-5'>\n        <h3 className='card-title align-items-start flex-column'>\n          <span className='card-label fw-bolder fs-3 mb-1'>Danh sách đơn của bạn</span>\n          <span className='text-muted mt-1 fw-bold fs-7'>{orders.length} Đơn</span>\n        </h3>\n        <div className='card-toolbar'>\n          <div className='card-toolbar w-100'>\n            {/* begin::Menu */}\n            {isShowFixMulti && (\n              <button style={{fontWeight:'bold',margin:5}}\n                onClick={() => {\n                  setShowEditMulti(true)\n                }}\n                className='btn btn-sm btn-primary'\n              >\n                Sửa nhiều\n              </button>\n            )}\n            <button style={{fontWeight:'bold'}}\n              onClick={() => {\n                setShowAddManual(true)\n              }}\n              className='btn btn-sm btn-primary mx-0'\n            >\n              Tạo đơn\n            </button>\n\n            <Popover className='z-0 relative'>\n              {({open}) => (\n                <>\n                  <Transition\n                    as={Fragment}\n                    enter='transition ease-out duration-200'\n                    enterFrom='opacity-0 -translate-y-1'\n                    enterTo='opacity-100 translate-y-0'\n                    leave='transition ease-in duration-150'\n                    leaveFrom='opacity-100 translate-y-0'\n                    leaveTo='opacity-0 -translate-y-1'\n                  >\n                    <Popover.Panel className='absolute z-10 inset-x-0 transform shadow-lg'>\n                      <div className='absolute inset-0 flex' aria-hidden='true'>\n                        <div className='bg-white w-full' />\n                      </div>\n                      <div className='relative max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-2'>\n                        <nav\n                          className='grid gap-y-10 px-4 py-8 bg-white'\n                          aria-labelledby='solutions-heading'\n                        >\n                          <div>\n                            <ul role='list' className='space-y-2 flex flex-col'>\n                              {groups.map((item: Group) => {\n                                return (\n                                  <li\n                                    key={item.id}\n                                    onClick={() => {\n                                      selectGroup(item)\n                                    }}\n                                    className='flex-1 w-96 cursor-pointer hover:text-blue focus:bg-blue'\n                                  >\n                                    {item.name}{' '}\n                                    <button\n                                      className='w-12 rounded-sm bg-danger text-white p-1 ml-5 cursor-pointer '\n                                      onClick={() => {\n                                        if (\n                                          window.confirm('bạn có chắc chắn muốn xóa nhóm này') ==\n                                          true\n                                        ) {\n                                          dispatch(actions.deleteGroupRequest(item.id))\n                                        }\n                                      }}\n                                    >\n                                      Xóa\n                                    </button>\n                                  </li>\n                                )\n                              })}\n                            </ul>\n                            <div>\n                              <div className='mt-1 flex rounded-md shadow-sm w-80'>\n                                <div className='relative flex items-stretch flex-grow focus-within:z-10'>\n                                  <input\n                                    value={groupName}\n                                    onChange={(e) => setGroupName(e.target.value)}\n                                    type='email'\n                                    name='email'\n                                    id='email'\n                                    className='focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300'\n                                    placeholder='Nhập tên nhóm '\n                                  />\n                                </div>\n                                <button\n                                  type='button'\n                                  onClick={addGroup}\n                                  className='-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500'\n                                >\n                                  <SortAscendingIcon\n                                    className='h-5 w-5 text-gray-400'\n                                    aria-hidden='true'\n                                  />\n                                  <span>Thêm</span>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </nav>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </div>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='w-25px'>\n                  <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                      onChange={(evt) => {\n                        dispatch(actions.checkedAllChange(evt.target.checked))\n                      }}\n                      className='form-check-input'\n                      type='checkbox'\n                      value='1'\n                      data-kt-check='true'\n                      data-kt-check-target='.widget-13-check'\n                    />\n                  </div>\n                </th>\n                <th className='min-w-30px text-sm'>\n                  <span className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-30px text-sm'>\n                  <span className='text-sm'># Tênh kênh</span>\n                </th>\n                <th className='min-w-130px text-sm'>\n                  <span className='text-sm'>Đang chạy</span>\n                </th>\n                <th className='min-w-150px text-sm'>\n                  <span className='text-sm'>Status</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {orders &&\n                orders.map((order: OrderModel, index: number) => {\n                  if (currentGroup === undefined) {\n                    return (\n                      <OrderItem\n                        index={index}\n                        showEdit={role === 'ROLE_ADMIN'}\n                        key={order.channel_id}\n                        item={order}\n                      />\n                    )\n                  }\n                  if (order.group_id === currentGroup.id) {\n                    return (\n                      <OrderItem\n                        index={index}\n                        showEdit={role === 'ROLE_ADMIN'}\n                        key={order.channel_id}\n                        item={order}\n                      />\n                    )\n                  }\n                  return null\n                })}\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n      {showAdd && (\n        <AddModal\n          show={true}\n          close={() => {\n            setShowAdd(false)\n          }}\n        />\n      )}\n\n      <EditMulti\n        show={showEditMulti}\n        close={() => {\n          setShowEditMulti(false)\n        }}\n      />\n      <AddManualModal\n        show={showAddManual}\n        close={() => {\n          setShowAddManual(false)\n        }}\n      />\n    </div>\n  )\n}\n\nexport {OrderList}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\Topbar.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts",["2053"],"import axios from 'axios'\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\n\n\n\nexport async function getListOrder() {\n  const res:any = await getFunciton(\"channel/getorder\")\n  return res\n}\n\nexport async function deleteHistoryError() {\n  const res:any = await getFunciton(\"api/deleteHistoryError\")\n  return res\n}\n\n\n\nexport async function getSetting() {\n  const res:any = await getFunciton(\"api/setting\")\n  return res\n}\nexport async function getListGroups() {\n  const res:any = await getFunciton(\"/group/list\")\n  return res\n}\n\n\nexport async function updateSetting(channel_prior:number) {\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\n  return res\n}\n\nexport async function updateOrder(order:OrderModel) {\n  const res:any = await postWithoutTokenFunciton(\"channel/updatesingle\",order)\n  return res\n}\n\n\nexport async function addOrder(order:OrderForm) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\nexport async function addOrderManual(order:OrderFormManual) {\n  const res:any = await postWithoutTokenFunciton(\"channel/ordermanual\",order)\n  return res\n}\n\nexport async function addOrderMulti(order:OrderPost) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\n\n\n\n\nexport async function addGroup(groupName:string) {\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\n    name: groupName\n  })\n  return res\n}\n\nexport async function deleteGroup(id:number) {\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\n  return res\n}\n\nexport async function deleteChannel(channel_id:string) {\n  const res:any = await deleteFunciton(\"/channel/delete?channelid=\"+channel_id)\n  return res\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountCRUD.ts",["2054"],"import axios from 'axios'\nimport {getFunciton} from 'utils/ApiHelper'\n\nexport async function getList() {\n  const res:any = await getFunciton(\"history/list\")\n  return res\n}\n\nexport async function getComputer() {\n  const res:any = await getFunciton(\"history/vpsrunning\")\n  return res\n}\n\nexport async function resetComputer(computer_name:string) {\n  const res:any = await getFunciton(\"history/reset_com?computer_name=\"+computer_name)\n  return res\n}\n\nexport async function getStatics() {\n  const res:any = await getFunciton(\"channel/orderrunning\")\n  return res\n}","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Registration.tsx",["2055"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\nimport * as auth from '../redux/AuthRedux'\nimport { register } from '../redux/AuthCRUD'\nimport { Link } from 'react-router-dom'\nimport { toAbsoluteUrl } from '../../../../_metronic/helpers'\nimport { PasswordMeterComponent } from \"../../../../_metronic/assets/ts/components\";\n\nconst initialValues = {\n  email: '',\n  password: '',\n  changepassword: '',\n  acceptTerms: false,\n}\n\nconst registrationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Wrong email format')\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Password is required'),\n  changepassword: Yup.string()\n    .required('Password confirmation is required')\n    .when('password', {\n      is: (val: string) => (val && val.length > 0 ? true : false),\n      then: Yup.string().oneOf([Yup.ref('password')], \"Password and Confirm Password didn't match\"),\n    }),\n  acceptTerms: Yup.bool().required('You must accept the terms and conditions'),\n})\n\nexport function Registration() {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch()\n  const formik = useFormik({\n    initialValues,\n    validationSchema: registrationSchema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      setLoading(true)\n      setTimeout(() => {\n        register(values.email,values.password)\n          .then((data:any) => {\n            setLoading(false)\n            if(data.data.status===\"fail\"){\n              setSubmitting(false)\n              setStatus(data.data.message)\n            }else{\n              dispatch(auth.actions.login(data.data.token))\n            }\n          })\n          .catch(() => {\n            setLoading(false)\n            setSubmitting(false)\n            setStatus('Registration process has broken')\n          })\n      }, 1000)\n    },\n  })\n\n  useEffect(() => {\n    PasswordMeterComponent.bootstrap();\n  }, []);\n\n  return (\n    <form\n      className='form w-100 fv-plugins-bootstrap5 fv-plugins-framework'\n      noValidate\n      id='kt_login_signup_form'\n      onSubmit={formik.handleSubmit}\n    >\n      {/* begin::Heading */}\n      <div className='mb-10 text-center'>\n        {/* begin::Title */}\n        <h1 className='text-dark mb-3'>Tạo tài khoản</h1>\n        {/* end::Title */}\n\n        {/* begin::Link */}\n        {\n          /*\n          <div className='text-gray-400 fw-bold fs-4'>\n            Already have an account?\n            <Link to='/auth/login' className='link-primary fw-bolder' style={{ marginLeft: '5px' }}>\n              Forgot Password ?\n            </Link>\n          </div>\n          */\n        }\n\n        {/* end::Link */}\n      </div>\n      {/* end::Heading */}\n      <div className='d-flex align-items-center mb-10'>\n        <div className='border-bottom border-gray-300 mw-50 w-100'></div>\n        <span className='fw-bold text-gray-400 fs-7 mx-2'>OR</span>\n        <div className='border-bottom border-gray-300 mw-50 w-100'></div>\n      </div>\n\n      {formik.status && (\n        <div className='mb-lg-15 alert alert-danger'>\n          <div className='alert-text font-weight-bold'>{formik.status}</div>\n        </div>\n      )}\n      {/* begin::Form group Email */}\n      <div className='fv-row mb-7'>\n        <label className='form-label fw-bolder text-dark fs-6'>Email</label>\n        <input\n          placeholder='Email'\n          type='email'\n          autoComplete='off'\n          {...formik.getFieldProps('email')}\n          className={clsx(\n            'form-control form-control-lg form-control-solid',\n            { 'is-invalid': formik.touched.email && formik.errors.email },\n            {\n              'is-valid': formik.touched.email && !formik.errors.email,\n            }\n          )}\n        />\n        {formik.touched.email && formik.errors.email && (\n          <div className='fv-plugins-message-container'>\n            <div className='fv-help-block'>\n              <span role='alert'>{formik.errors.email}</span>\n            </div>\n          </div>\n        )}\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Form group Password */}\n      <div className='mb-10 fv-row' data-kt-password-meter='true'>\n        <div className='mb-1'>\n          <label className='form-label fw-bolder text-dark fs-6'>Password</label>\n          <div className='position-relative mb-3'>\n            <input\n              type='password'\n              placeholder='Password'\n              autoComplete='off'\n              {...formik.getFieldProps('password')}\n              className={clsx(\n                'form-control form-control-lg form-control-solid',\n                {\n                  'is-invalid': formik.touched.password && formik.errors.password,\n                },\n                {\n                  'is-valid': formik.touched.password && !formik.errors.password,\n                }\n              )}\n            />\n            {formik.touched.password && formik.errors.password && (\n              <div className='fv-plugins-message-container'>\n                <div className='fv-help-block'>\n                  <span role='alert'>{formik.errors.password}</span>\n                </div>\n              </div>\n            )}\n          </div>\n          {/* begin::Meter */}\n          <div\n            className=\"d-flex align-items-center mb-3\"\n            data-kt-password-meter-control=\"highlight\"\n          >\n            <div\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2\"\n            ></div>\n            <div\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2\"\n            ></div>\n            <div\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2\"\n            ></div>\n            <div\n              className=\"flex-grow-1 bg-secondary bg-active-success rounded h-5px\"\n            ></div>\n          </div>\n          {/* end::Meter */}\n        </div>\n        <div className=\"text-muted\">\n          Use 8 or more characters with a mix of letters, numbers & symbols.\n        </div>\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Form group Confirm password */}\n      <div className='fv-row mb-5'>\n        <label className='form-label fw-bolder text-dark fs-6'>Confirm Password</label>\n        <input\n          type='password'\n          placeholder='Password confirmation'\n          autoComplete='off'\n          {...formik.getFieldProps('changepassword')}\n          className={clsx(\n            'form-control form-control-lg form-control-solid',\n            {\n              'is-invalid': formik.touched.changepassword && formik.errors.changepassword,\n            },\n            {\n              'is-valid': formik.touched.changepassword && !formik.errors.changepassword,\n            }\n          )}\n        />\n        {formik.touched.changepassword && formik.errors.changepassword && (\n          <div className='fv-plugins-message-container'>\n            <div className='fv-help-block'>\n              <span role='alert'>{formik.errors.changepassword}</span>\n            </div>\n          </div>\n        )}\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Form group */}\n      <div className='fv-row mb-10'>\n        <div className='form-check form-check-custom form-check-solid'>\n          <input\n            className='form-check-input'\n            type='checkbox'\n            id='kt_login_toc_agree'\n            {...formik.getFieldProps('acceptTerms')}\n          />\n          <label\n            className='form-check-label fw-bold text-gray-700 fs-6'\n            htmlFor='kt_login_toc_agree'\n          >\n            I Agree the{' '}\n            <Link to='/auth/terms' className='ms-1 link-primary'>\n              terms and conditions\n            </Link>\n            .\n          </label>\n          {formik.touched.acceptTerms && formik.errors.acceptTerms && (\n            <div className='fv-plugins-message-container'>\n              <div className='fv-help-block'>\n                <span role='alert'>{formik.errors.acceptTerms}</span>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Form group */}\n      <div className='text-center'>\n        <button\n          type='submit'\n          id='kt_sign_up_submit'\n          className='btn btn-lg btn-primary w-100 mb-5'\n          disabled={formik.isSubmitting || !formik.isValid || !formik.values.acceptTerms}\n        >\n          {!loading && <span className='indicator-label'>Tạo tài khoản</span>}\n          {loading && (\n            <span className='indicator-progress' style={{ display: 'block' }}>\n              Please wait...{' '}\n              <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n            </span>\n          )}\n        </button>\n        <Link to='/auth/login'>\n          <button\n            type='button'\n            id='kt_login_signup_form_cancel_button'\n            className='btn btn-lg btn-light-primary w-100 mb-5'\n          >\n            Cancel\n          </button>\n        </Link>\n      </div>\n      {/* end::Form group */}\n    </form>\n  )\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Login.tsx",["2056"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as Yup from 'yup'\nimport clsx from 'clsx'\nimport { Link } from 'react-router-dom'\nimport { useFormik } from 'formik'\nimport * as auth from '../redux/AuthRedux'\nimport { login } from '../redux/AuthCRUD'\nimport { toAbsoluteUrl } from '../../../../_metronic/helpers'\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Wrong email format')\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(3, 'Minimum 3 symbols')\n    .max(50, 'Maximum 50 symbols')\n    .required('Password is required'),\n})\n\nconst initialValues = {\n  email: '',\n  password: '',\n}\n\n/*\n  Formik+YUP+Typescript:\n  https://jaredpalmer.com/formik/docs/tutorial#getfieldprops\n  https://medium.com/@maurice.de.beijer/yup-validation-and-typescript-and-formik-6c342578a20e\n*/\n\n\n\nexport function Login() {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch()\n  const formik = useFormik({\n    initialValues,\n    validationSchema: loginSchema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      setLoading(true)\n      setTimeout(() => {\n        login(values.email, values.password)\n          .then((data:any) => {\n            setLoading(false)\n            if (data.error) {\n              setSubmitting(false)\n              setStatus(data.error)\n            } else {\n              \n              dispatch(auth.actions.login(data.data.token))\n            }\n          })\n          .catch(() => {\n            setLoading(false)\n            setSubmitting(false)\n            setStatus('The login detail is incorrect')\n          })\n      }, 1000)\n    },\n  })\n\n  return (\n    <form\n      className='form w-100'\n      onSubmit={formik.handleSubmit}\n      noValidate\n      id='kt_login_signin_form'\n    >\n      {/* begin::Heading */}\n      <div className='text-center mb-10'>\n        <h1 className='text-dark mb-3'>Đăng nhập vào Metronic</h1>\n        <div className='text-gray-400 fw-bold fs-4'>\n          Tạo mới ?{' '}\n          <Link to='/auth/registration' className='link-primary fw-bolder'>\n            Tạo mới tài khoản\n          </Link>\n        </div>\n      </div>\n      {/* begin::Heading */}\n\n      {formik.status &&\n        <div className='mb-lg-15 alert alert-danger'>\n          <div className='alert-text font-weight-bold'>{formik.status}</div>\n        </div>\n      }\n\n      {/* begin::Form group */}\n      <div className='fv-row mb-10'>\n        <label className='form-label fs-6 fw-bolder text-dark'>Email</label>\n        <input\n          placeholder='Email'\n          {...formik.getFieldProps('email')}\n          className={clsx(\n            'form-control form-control-lg form-control-solid',\n            { 'is-invalid': formik.touched.email && formik.errors.email },\n            {\n              'is-valid': formik.touched.email && !formik.errors.email,\n            }\n          )}\n          type='email'\n          name='email'\n          autoComplete='off'\n        />\n        {formik.touched.email && formik.errors.email && (\n          <div className='fv-plugins-message-container'>\n            <span role='alert'>{formik.errors.email}</span>\n          </div>\n        )}\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Form group */}\n      <div className='fv-row mb-10'>\n        <div className='d-flex justify-content-between mt-n5'>\n          <div className='d-flex flex-stack mb-2'>\n            {/* begin::Label */}\n            <label className='form-label fw-bolder text-dark fs-6 mb-0'>Password</label>\n            {/* end::Label */}\n            {/* begin::Link */}\n            <Link\n              to='/auth/forgot-password'\n              className='link-primary fs-6 fw-bolder'\n              style={{ marginLeft: '5px' }}\n            >\n              Forgot Password ?\n            </Link>\n            {/* end::Link */}\n          </div>\n        </div>\n        <input\n          type='password'\n          autoComplete='off'\n          {...formik.getFieldProps('password')}\n          className={clsx(\n            'form-control form-control-lg form-control-solid',\n            {\n              'is-invalid': formik.touched.password && formik.errors.password,\n            },\n            {\n              'is-valid': formik.touched.password && !formik.errors.password,\n            }\n          )}\n        />\n        {formik.touched.password && formik.errors.password && (\n          <div className='fv-plugins-message-container'>\n            <div className='fv-help-block'>\n              <span role='alert'>{formik.errors.password}</span>\n            </div>\n          </div>\n        )}\n      </div>\n      {/* end::Form group */}\n\n      {/* begin::Action */}\n      <div className='text-center'>\n        <button\n          type='submit'\n          id='kt_sign_in_submit'\n          className='btn btn-lg btn-primary w-100 mb-5'\n          disabled={formik.isSubmitting || !formik.isValid}\n        >\n          {!loading && <span className='indicator-label'>Tiếp tục</span>}\n          {loading && (\n            <span className='indicator-progress' style={{ display: 'block' }}>\n              Vui lòng chờ...\n              <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\n            </span>\n          )}\n        </button>\n      </div>\n      {/* end::Action */}\n    </form>\n  )\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\AssetHelpers.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\InboxCompose.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\SearchModal.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\MenuModal.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\search\\Search.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx",["2057"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {FC} from 'react'\nimport {shallowEqual, useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {UserModel} from '../../../../app/modules/auth/models/UserModel'\nimport {RootState} from '../../../../setup'\nimport {Languages} from './Languages'\nimport * as auth from '../../../../app/modules/auth/redux/AuthRedux'\nimport {useDispatch} from 'react-redux'\nimport {toAbsoluteUrl} from '../../../helpers'\n\nconst HeaderUserMenu: FC = () => {\n  const user: UserModel = useSelector<RootState>(({auth}) => auth.user, shallowEqual) as UserModel\n  const dispatch = useDispatch()\n  const logout = () => {\n    dispatch(auth.actions.logout())\n  }\n  return (\n    <div\n      className='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg menu-state-primary fw-bold py-4 fs-6 w-275px'\n      data-kt-menu='true'\n    >\n      <div className='menu-item px-3'>\n        <div className='menu-content d-flex align-items-center px-3'>\n          <div className='symbol symbol-50px me-5'>\n            <img alt='Logo' src={toAbsoluteUrl('/media/avatars/150-26.jpg')} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='fw-bolder d-flex align-items-center fs-5'>\n              <span className='badge badge-light-success fw-bolder fs-8 px-2 py-1 ms-2'> {user.role}</span>\n            </div>\n            <a href='#' className='fw-bold text-muted text-hover-primary fs-7'>\n              {user.username}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className='separator my-2'></div>\n      <div className='menu-item px-5'>\n        <a href='#' className='menu-link px-5'>\n         Nạp tiền {user.balance}\n        </a>\n      </div>\n      <div className='separator my-2'></div>\n      <div className='menu-item px-5 my-1'>\n        <Link to='/crafted/account/settings' className='menu-link px-5'>\n          Cài đặt tài khoản\n        </Link>\n      </div>\n      <div className='menu-item px-5'>\n        <a onClick={logout} className='menu-link px-5'>\n          Đăng xuất\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport {HeaderUserMenu}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\chat\\ChatInner.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\dataExamples.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\portal\\Portal.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\RouterHelpers.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx",["2058","2059","2060","2061","2062","2063","2064","2065","2066","2067"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orders/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\n\n\ntype Props = {\n    item: OrderModel\n\n}\n\nconst EditModal: React.FC<Props> = ({ item}) => {\n\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n\n\n    const dispatch = useDispatch()\n    const [max_thread, setMax_thread] = useState(item.max_threads)\n    const [view_percent,setView_percent]=useState(item.view_percent)\n    const [home_rate,setHome_rate]=useState(0)\n    const [search_rate,setSearch_rate]=useState(80)\n    const [suggest_rate,setSuggest_rate]=useState(0)\n    const [direct_rate,setDirect_rate]=useState(20)\n    const [enabled,setEnabled]=useState(item.enabled)\n    const [like_rate,setLike_rate]=useState(25)\n    const [comment_rate,setComment_rate]=useState(25)\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n\n    const submit = () => {\n\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(like_rate>100||like_rate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>100||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n\n        dispatch(actions.requestUpdate({\n            ...item,\n            home_rate,\n            direct_rate,\n            search_rate,\n            enabled,\n            max_thread,\n            view_percent,\n            suggest_rate\n        }))\n     \n    }\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ cho {item.channel_title}</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt danh sách đơn</p>\n                    <Form>\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={home_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={search_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggest_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={direct_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={like_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={comment_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng max\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={max_thread}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   View Time(%)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={view_percent}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Buff Video\"}\n                                </option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Lưu</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default EditModal","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\components\\KTSVG.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx",["2068","2069"],"/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react'\nimport { useIntl } from 'react-intl'\nimport { KTSVG } from '../../../helpers'\nimport { AsideMenuItemWithSub } from './AsideMenuItemWithSub'\nimport { AsideMenuItem } from './AsideMenuItem'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nexport function AsideMenuMain() {\n  const intl = useIntl()\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n  return (\n    <>\n      <AsideMenuItem\n        to='/dashboard'\n        icon='/media/icons/duotune/art/art002.svg'\n        title={intl.formatMessage({ id: 'MENU.DASHBOARD' })}\n        fontIcon='bi-app-indicator'\n      />\n      {\n        role === \"ROLE_ADMIN\" && <AsideMenuItem\n          to='/crafted/account'\n          title='Danh sách VPS'\n          icon='/media/icons/duotune/communication/com006.svg'\n          fontIcon='bi-person'\n        />\n      }\n\n        <AsideMenuItem\n            to='/crafted/orders'\n            title='Danh sách kênh'\n            icon='/media/icons/duotune/general/gen019.svg'\n            fontIcon='bi-app-indicator'\n        />\n\n       <AsideMenuItem\n        to='/crafted/history'\n        title='VPS đang chạy'\n        icon='/media/icons/duotune/general/gen012.svg'\n        fontIcon='bi-app-indicator'\n      />\n    </>\n  )\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\StaticList.tsx",["2070"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React,{useEffect} from 'react'\nimport { ChannelStaticModel } from 'app/modules/history/models/Account'\nimport ChannelStaticItem from './components/ChannelStaticItem'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { actions } from './redux/AccountRedux'\nimport { RootState } from 'setup'\ntype Props = {\n  className: string,\n}\n\nconst StaticList: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    dispatch(actions.requestStatics())\n  }, [])\n\n  const statics:ChannelStaticModel[] = useSelector<RootState>(({ histories }) => histories.statics, shallowEqual) as ChannelStaticModel[] || []\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className='card-header border-0 pt-5'>\n        <h3 className='card-title align-items-start flex-column'>\n          <span className='card-label fw-bolder fs-3 mb-1'>Danh sách kênh đang chạy</span>\n          <span className='text-muted mt-1 fw-bold fs-7'>Có {statics?statics.length:0} kênh</span>\n        </h3>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr>\n                <th className='min-w-30px'>#</th>\n                <th className='min-w-140px'>ID kênh</th>\n                <th className='min-w-140px'>Tên kênh </th>\n                <th className='min-w-140px'>Số luồng đang chạy</th>\n                <th className='min-w-140px'>Số luồng max</th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {\n                statics&&statics?.map((item: ChannelStaticModel,index:number) => {\n                  return <ChannelStaticItem key={\"channel-static-\"+index} item={item} index={index}/>\n                })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n    </div>\n  )\n}\n\nexport { StaticList }\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item6.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item8.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item7.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item5.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item4.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item3.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item2.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item1.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx",["2071","2072","2073","2074"],"import React from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { HistoryModel } from 'app/modules/history/models/Account'\nimport moment from 'moment'\ntype Props = {\n    item: HistoryModel,\n    index: number\n}\n\nconst HistoryItem: React.FC<Props> = ({ item, index }) => {\n    return (\n        <tr>\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\n                </div>\n            </td>\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span className='text-muted me-2 fs-7 fw-bold'>{moment.unix(item.date_time/1000).format(\"DD/MM YYYY hh:mm a\")}</span>\n                </div>\n            </td>\n            <td>\n                <a href='#' className='text-sm text-dark fw-bolder text-hover-primary d-block mb-1 '>\n                    {\"Máy : \" + item.computer_name}\n                </a>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{item.username}</span>\n\n            </td>\n            <td>\n\n                <a href='#' className='text-sm text-dark fw-bolder text-hover-primary d-block mb-1 '>\n                    {item.is_premium === 1 ? \"Premium\" : \"Thường\"}\n                </a>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{item.flatform}</span>\n\n            </td>\n            <td>\n                <a href={'https://www.youtube.com/watch?v=' + item.video_id} className='text-sm text-dark fw-bolder text-hover-primary d-block mb-1 '>\n                    {item.video_id}\n                </a>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>Proxy : {item.proxy}</span>\n            </td>\n            <td>\n                {\n                    item.state === 0 ? <span className='badge badge-light-warning me-3'>Khởi tạo</span>:<span className='badge badge-light-success'>Đang chạy</span>\n                }\n            </td>\n        </tr>\n    )\n}\n\nexport default HistoryItem",["2075","2076"],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx",["2077","2078","2079","2080","2081","2082","2083"],"import React from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { ComputerModel } from 'app/modules/history/models/Account'\nimport {resetComputer} from 'app/modules/history/redux/AccountCRUD'\nimport moment from 'moment'\ntype Props = {\n    item: ComputerModel,\n    index: number\n}\n\nconst ComputerItem: React.FC<Props> = ({ item, index }) => {\n\n    const clickDeleteHandler= async()=>{\n        if (window.confirm(\"bạn có chắc chắn muốn reset luồng trên VPS này\") == true) {\n            const res:any = await resetComputer(item.vps)\n            //dispatch(actions.deleteOrderRequest(item.channel_id))\n        }\n    }\n\n    return (\n        <tr >\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\n                </div>\n            </td>\n            <td>\n                <a href='#' style={{textDecorationLine:'none',fontSize:13}} className='text-sm text-dark fw-bolder text-hover-primary d-block mb-1 '>\n                    {item.vps}\n                </a>\n            </td>\n            <td>\n                <span style={{fontSize:11,color:'black'}} className='badge badge-warning'>{item.total}</span>\n            </td>\n            <td>\n\n                <span className={parseInt(item.time)<60?'badge badge-success':'badge badge-danger'}>{item.time=='0'?\"Vừa xong\":item.time+ \" phút trước\"}</span>\n            </td>\n            <td>\n\n                    <a href='#' onClick={clickDeleteHandler} className='btn btn-icon  btn-active-color-primary btn-sm'>\n                    <KTSVG path='/media/icons/duotune/general/gen027.svg' className={Number(item.time)>60?'svg-icon-danger':'svg-icon-3'} />\n                    </a>\n\n            </td>\n        </tr>\n    )\n}\n\nexport default ComputerItem","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx",["2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { OrderModel } from '../../models/Order'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport { getFunciton } from 'utils/ApiHelper'\ntype Props = {\n    item: OrderModel,\n    showEdit: boolean,\n    index: number,\n    //increase: number\n}\n\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\n    const [running, setRunning] = useState(0)\n    const [success, setSuccess] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n\n\n\n    const dispatch = useDispatch()\n    const clickUpdateHandler = () => {\n        dispatch(actions.showcurrentOrder(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn của kênh: \"+item.channel_title!) == true) {\n            dispatch(actions.deleteOrderRequest(item.channel_id))\n        }\n    }\n\n\n\n\n\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\n    //const increase = item.current_view - item.start_view\n    return (\n        <tr>\n            <td className='w-25px'>\n                <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt)=>{\n                            dispatch(actions.checkedChange({\n                                channel_id:item.channel_id,\n                                checked:evt.target.checked\n                            }))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value={1}\n                        checked={item.checked}\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                    />\n                </div>\n            </td>\n            <td>\n                <span style={{fontWeight:'bold',fontSize:11}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n            <td>\n\n                    <a style={{textDecorationLine:'none',fontSize:11}} href={'https://www.youtube.com/channel/' + item.channel_id} className='badge badge-danger'>\n                        {item.channel_title}\n                    </a>\n                    <span style={{ color:'black',margin:5,fontSize:11}} className='badge badge-success'>{'View time : '+item.view_percent+\"%\"}</span>\n\n            </td>\n\n\n            <td className='text-dark fw-bolder text-hover-primary text-sm'>\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\n                    {\"Đang lấy dữ liệu\"}\n                </span> :\n                    <span style={{color:'white',fontSize:11}} className='badge badge-dark'>{item.total==1?0:item.total}/{item.max_threads} running</span>\n                }\n            </td>\n            <td>\n                {\n                    item.enabled === 1 ? <span style={{color:'white',fontSize:11}} className='badge badge-success'>Đang chạy</span> :item.enabled === 2 ?\n                        <span style={{color:'white',fontSize:11}} className='badge badge-warning'>Buff Video</span>:\n                        <span style={{color:'white',fontSize:11}} className='badge badge-danger'>Ngừng</span>\n                }\n            </td>\n            {\n                 <td >\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </a>\n                    <a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\n                    </a>\n                </td>\n            }\n\n        </tr>\n    )\n}\n\nexport default OrderItem","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx",["2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orders/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\n\n\ntype Props = {\n    show: boolean\n    close: () => void\n}\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n\n    const dispatch = useDispatch()\n    const [max_thread, setMax_thread] = useState(1000)\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(100)\n    //\n    const [home_rate,setHome_rate]=useState(0)\n    const [search_rate,setSearch_rate]=useState(80)\n    const [suggest_rate,setSuggest_rate]=useState(0)\n    const [direct_rate,setDirect_rate]=useState(20)\n    //\n    const [like_rate,setLike_rate]=useState(25)\n    const [comment_rate,setComment_rate]=useState(25)\n    const [mobile_rate,setMobile_rate]=useState(0)\n    //\n    const [note, setNote] = useState(\"\")\n    const [keyword, setKeyword] = useState(\"\")\n    const [comment_list, setComment_list] = useState(\"\")\n    const [group_id, setGroup] = useState(0)\n    //\n    const [enabled,setEnabled]=useState(1)\n\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    \n    const submit = () => {\n        const arr:string[]=[]\n        orders.forEach(item=>{\n            if(item.checked==true)\n            arr.push(item.channel_id)\n        })\n        const channel_id=arr.join('\\n')\n        if (view_need % 100 !== 0 || view_need ==0) {\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\n            return\n        }\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(like_rate>100||like_rate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>100||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        if(comment_rate>100||comment_rate<0){\n            alert(\"Tỉ lệ comment không đúng\")\n            return\n        }\n\n        dispatch(actions.editMultiOrderRequest({\n            channel_id,\n            home_rate,\n            direct_rate,\n            search_rate,\n            enabled,\n            max_thread,\n            view_percent,\n            suggest_rate\n        }))\n     \n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt danh sách đơn</p>\n                    <Form>\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={home_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={search_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggest_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={direct_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ Like \n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={like_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={comment_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng max\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={max_thread}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   View Time(%)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={view_percent}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default EditMulti","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx",["2120","2121","2122","2123","2124","2125","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Modal,\n  Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\ntype Props = {\n  show: boolean\n  close: () => void\n}\n\nconst AddModal: React.FC<Props> = ({ show, close }) => {\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n  const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n  const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n\n\n  const dispatch = useDispatch()\n  const [max_thread, setMax_thread] = useState(1000)\n  const [channel_id, setChannel_id] = useState(\"\")\n  //const [list_video, setList_video] = useState(\"\")\n  //\n  const [view_need, setView_need] = useState(1000)\n  const [premium_rate,setPremium_rate]=useState(5)\n  const [view_percent,setView_percent]=useState(100)\n  //\n  const [home_rate,setHome_rate]=useState(0)\n  const [search_rate,setSearch_rate]=useState(80)\n  const [suggest_rate,setSuggest_rate]=useState(0)\n  const [direct_rate,setDirect_rate]=useState(20)\n  //\n  const [like_rate,setLike_rate]=useState(25)\n  const [comment_rate,setComment_rate]=useState(25)\n  const [mobile_rate,setMobile_rate]=useState(0)\n  //\n  const [note, setNote] = useState(\"\")\n  const [keyword, setKeyword] = useState(\"\")\n  const [comment_list, setComment_list] = useState(\"\")\n  const [group_id, setGroup] = useState(0)\n  //\n  const [enabled,setEnabled]=useState(1)\n\n\n  const dismissModal = () => {\n    dispatch(actions.clearcurrentOrder())\n  }\n\n  const submit = () => {\n\n    if (channel_id.trim() === \"\") {\n      alert(\"Điền list kênh cần chạy\")\n      return\n    }\n    if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n      alert(\"Tổng nguồn view không đúng\")\n      return\n    }\n\n    if(view_percent>100||view_percent<0){\n      alert(\"phần trăm xem video không đúng\")\n      return\n    }\n    dispatch(actions.addOrderRequest({\n      channel_id,\n      home_rate,\n      //note: string,\n      direct_rate,\n      //view_need: number,\n      //comment_rate: number,\n      //mobile_rate: number,\n      search_rate,\n      enabled,\n      max_thread,\n      view_percent,\n      //group_id: number,\n      //like_rate: number,\n      //comment_list: string,\n      suggest_rate,\n      //premium_rate: number,\n    }))\n\n  }\n\n  useEffect(() => {\n    if (!adding) {\n      close()\n    }\n  }, [adding])\n\n  return (\n      <Modal isOpen={show}\n             modalTransition={{ timeout: 500 }}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n              <span className=\"svg-icon svg-icon-2x\"></span>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <p>Cài đặt đơn</p>\n            <Form>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Danh sách id kênh cần chạy sub\n                </Label>\n                <Input\n                    id=\"list_id\"\n                    name=\"list_id\"\n                    className=\"form-control form-control-solid\"\n                    placeholder={\"Id kênh\"}\n                    value={channel_id}\n                    type={\"textarea\"}\n                    onChange={(e) => setChannel_id(e.target.value)}\n                />\n              </FormGroup>\n              <p>Nguồn view tổng = 100%</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Home\n                  </Label>\n                  <Input\n                      id=\"home_rate\"\n                      name=\"home_rate\"\n                      value={home_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Search\n                  </Label>\n                  <Input\n                      id=\"search_rate\"\n                      name=\"search_rate\"\n                      value={search_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Suggest\n                  </Label>\n                  <Input\n                      id=\"suggest_rate\"\n                      name=\"suggest_rate\"\n                      value={suggest_rate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Direct\n                  </Label>\n                  <Input\n                      id=\"direct_rate\"\n                      name=\"direct_rate\"\n                      value={direct_rate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <p>Cài đặt tương tác</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ Like\n                  </Label>\n                  <Input\n                      id=\"like_rate\"\n                      name=\"like_rate\"\n                      value={like_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ comment\n                  </Label>\n                  <Input\n                      id=\"comment_rate\"\n                      name=\"comment_rate\"\n                      value={comment_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Luồng max\n                  </Label>\n                  <Input\n                      id=\"max_thread\"\n                      name=\"max_thread\"\n                      value={max_thread}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    View Time(%)\n                  </Label>\n                  <Input\n                      id=\"mobile_rate\"\n                      name=\"mobile_rate\"\n                      value={view_percent}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 100\"\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Trạng thái\n                </Label>\n                <Input\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\n                    className=\"form-control form-control-solid\"\n                    type=\"select\"\n                    value={enabled}\n                >\n                  <option key={1} value={1}>\n                    {\"Chạy\"}\n                  </option>\n                  <option key={0} value={0}>\n                    {\"Ngừng\"}\n                  </option>\n                </Input>\n              </FormGroup>\n            </Form>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n          </div>\n        </div>\n      </Modal>\n  )\n}\n\nexport default AddModal","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx",["2141","2142","2143","2144","2145","2146","2147","2148","2149","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160","2161"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Modal,\n    Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\ntype Props = {\n    show: boolean\n    close: () => void\n}\n\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n\n\n    const dispatch = useDispatch()\n    const [max_thread, setMax_thread] = useState(1000)\n    const [channel_id, setChannel_id] = useState(\"\")\n    const [list_video, setList_video] = useState(\"\")\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(100)\n    //\n    const [home_rate,setHome_rate]=useState(0)\n    const [search_rate,setSearch_rate]=useState(80)\n    const [suggest_rate,setSuggest_rate]=useState(0)\n    const [direct_rate,setDirect_rate]=useState(20)\n    //\n    const [like_rate,setLike_rate]=useState(25)\n    const [comment_rate,setComment_rate]=useState(25)\n    const [mobile_rate,setMobile_rate]=useState(0)\n    //\n    const [note, setNote] = useState(\"\")\n    const [keyword, setKeyword] = useState(\"\")\n    const [comment_list, setComment_list] = useState(\"\")\n    const [group_id, setGroup] = useState(0)\n    //\n    const [enabled,setEnabled]=useState(1)\n\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    \n    const submit = () => {\n\n        if (channel_id.trim() === \"\") {\n            alert(\"Điền id kênh cần chạy\")\n            return\n        }\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n\n        if(view_percent>100||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        dispatch(actions.addOrderManualRequest({\n            channel_id,\n            list_video,\n            home_rate,\n            //note,\n            direct_rate,\n            //view_need,\n            //comment_rate,\n            //mobile_rate,\n            search_rate,\n            enabled,\n            max_thread,\n            //group_id,\n            //like_rate,\n            //comment_list,\n            suggest_rate,\n            //premium_rate,\n            //keyword,\n            view_percent\n        }))\n     \n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách id channel</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt đơn</p>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Danh sách id kênh cần chạy sub\n                            </Label>\n                            <Input\n                                id=\"list_id\"\n                                name=\"list_id\"\n                                className=\"form-control form-control-solid\"\n                                placeholder={\"Id kênh\"}\n                                value={channel_id}\n                                type={\"textarea\"}\n                                onChange={(e) => setChannel_id(e.target.value)}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Danh sách video của kênh( Để trống video sẽ được thêm tự động )\n                            </Label>\n                            <Input\n                                id=\"list_id\"\n                                name=\"list_id\"\n                                className=\"form-control form-control-solid\"\n                                placeholder={\"video id cách nhau dấu ,\"}\n                                value={list_video}\n                                type={\"textarea\"}\n                                onChange={(e) => setList_video(e.target.value)}\n                            />\n                        </FormGroup>\n\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={home_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={search_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggest_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={direct_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ Like \n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={like_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={comment_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng max\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={max_thread}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   View Time(%)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={view_percent}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Buff Video\"}\n                                </option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddManualModal","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ChannelStaticItem\\index.tsx",["2162","2163","2164","2165","2166"],"import React from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { ChannelStaticModel } from 'app/modules/history/models/Account'\nimport {resetComputer} from 'app/modules/history/redux/AccountCRUD'\nimport moment from 'moment'\ntype Props = {\n    item: ChannelStaticModel,\n    index: number\n}\n\nconst ChannelStaticItem: React.FC<Props> = ({ item, index }) => {\n\n    return (\n        <tr>\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\n                </div>\n            </td>\n            <td>\n                <a href='#' className='text-sm text-dark fw-bolder text-hover-primary d-block mb-1 '>\n                    {item.channel_id}\n                </a>\n            </td>\n            <td>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{item.channel_title}</span>\n            </td>\n\n            <td>\n                <span className='text-muted fw-bold text-muted text-sm'>{item.total>1?item.total:0}</span>\n\n            </td>\n            <td>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{item.max_threads}</span>\n            </td>\n        </tr>\n    )\n}\n\nexport default ChannelStaticItem","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\AccountPage.tsx",["2167","2168","2169","2170","2171"],"import React,{useEffect,useState} from 'react'\nimport {UserList} from './UserList'\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\nimport {actions} from './redux/AccountRedux'\nimport {AccountModel} from 'app/modules/accounts/models/Account'\nimport {RootState} from 'setup'\nimport EditModal  from './modals/EditModal'\nimport {Input} from \"reactstrap\";\nconst AccountPage: React.FC = () => {\n  const dispatch = useDispatch()\n  const [vpstype, setvpstype] = useState('')\n  const accounts: AccountModel[] = useSelector<RootState>(({accounts}) => accounts.accounts, shallowEqual) as AccountModel[] || []\n  const currentAccount: AccountModel = useSelector<RootState>(({accounts}) => accounts.currentAccount, shallowEqual) as AccountModel || undefined\n\n  useEffect(() => {\n    dispatch(actions.requestAccounts())\n  },[]);\n\n\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n\n        <div className='col-xl-12'>\n          <UserList accounts={vpstype.length==0?accounts:(accounts.filter(vps=>vps.vps.search(vpstype)!=-1))} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n        {\n          currentAccount&&<EditModal key={currentAccount?.vps} item={currentAccount} />\n        }\n      </div>\n    </>\n  )\n}\nexport default AccountPage\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\index.ts",[],"C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts",["2172","2173","2174","2175"],"import { Action } from '@reduxjs/toolkit'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { AccountModel,AccountForm } from '../models/Account'\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  RequestAccounts: '[Accounts] Requested',\n  AccountsLoadedSuccess: '[Accounts] Loaded succcess',\n  AccountsLoadedFail: '[Accounts] load fail',\n  ShowCurrentAccount: '[Accounts] Show Account',\n  RequestUpdate: '[accounts] Requested Update',\n  UpdateSuccess: '[accounts] Update Success',\n  UpdateFail: '[Accounts] Update Fail',\n  ClearSelected:'[Accounts] Clear selected account',\n  DeleteVpsRequest: '[Accounts] Delete Account Request',\n  DeleteVpsSuccess: '[Accounts] Delete Account Success',\n  DeleteMultiVpsRequest: '[Accounts] Delete Account Request',\n  DeleteMultiVpsSuccess: '[Accounts] Delete Account Success',\n  CheckedChange: '[accounts] Checked Change',\n  CheckedAllChange: '[accounts] Checked All Change',\n  UpdateMultiOrderRequest: '[accounts] Update Multi Account Request',\n  UpdateRestartMultiOrderRequest: '[accounts] Update Restart Multi Account Request',\n  UpdateMultiSuccess: '[accounts] Update Multi Success',\n}\n\nconst initialAccountState: IAccountState = {\n  accounts: [],\n  loading: false,\n  adding:false,\n  currentAccount:undefined\n}\n\nexport interface IAccountState {\n  accounts: AccountModel[]\n  loading: boolean\n  adding:boolean\n  currentAccount?:AccountModel\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-accounts', whitelist: [] },\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestAccounts: {\n        return {\n          ...state,\n          accounts: [],\n          loading: true\n        }\n      }\n      case actionTypes.AccountsLoadedSuccess: {\n        return {\n          ...state,\n          accounts: action.payload?.accounts || [],\n          loading: false\n        }\n      }\n      case actionTypes.AccountsLoadedFail: {\n        return {\n          ...state,\n          accounts: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\n          if(item.vps===action.payload?.account?.vps){\n            return action.payload?.account\n          }else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          accounts: remapAccounts,\n          loading: false,\n          currentAccount: undefined\n        }\n      }\n      case actionTypes.DeleteVpsSuccess: {\n        return {\n          ...state,\n          accounts: state.accounts.filter((item: AccountModel) => {\n            if (action.payload?.vps.indexOf(item.vps)>=0)  {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.ShowCurrentAccount: {\n        return {\n          ...state,\n          currentAccount: action.payload?.currentAccount\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentAccount: action.payload?.currentAccount\n        }\n      }\n\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          accounts:  state.accounts.map(item=>{\n            if(item.vps===action.payload?.data?.vps){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          accounts:  state.accounts.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateRestartMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.accounts.map((item: AccountForm) => {\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\n            if(_item.vps===item.vps){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          accounts: remaporders,\n          loading: false,\n          adding: false,\n          currentAccount: undefined\n        }\n      }\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\n  checkedChange: (data:{vps:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\n    const {data: accounts} = yield getListAccount()\n    yield put(actions.fulfillAccounts(accounts.accounts))\n  })\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    //console.log(\"------update account param-----\",param.payload.account)\n    const {data: account} = yield updateAccount(param.payload.account)\n    //console.log(\"------update account res-----\",account.account)\n    yield put(actions.updateSuccess(account.account))\n  })\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\n    try {\n      const payload = param.payload.vps\n      const { data: result } = yield deleteVps(payload)\n      if (result&&result.vps!==null) {\n        yield put(actions.deleteVpsSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateAccount(payload)\n      if (result && result.accounts) {\n        yield put(actions.updateMultiSuccess(result.accounts))\n      } else {\n        yield put(actions.updateFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.updateFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateResetVPS(payload)\n      if (result && result.accounts) {\n        yield put(actions.updateMultiSuccess(result.accounts))\n      } else {\n        yield put(actions.updateFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.updateFail(\"\"))\n    }\n  })\n\n}\n","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\UserList.tsx",["2176","2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\n\nimport UserItem from './components/UserItem'\nimport {actions} from \"./redux/AccountRedux\";\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport {ComputerModel} from \"../history/models/Account\";\nimport {RootState} from \"../../../setup\";\nimport EditMulti from \"./modals/EditMulti\";\nimport RestartMulti from \"./modals/RestartMulti\";\ntype Props = {\n  className: string,\n  accounts: AccountModel[]\n}\n\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\n\n  const dispatch = useDispatch()\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [total_user, settotal_user] = useState(0)\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\n  const [vpstpye, setvpstpye] = useState('')\n  useEffect(() => {\n    dispatch(actions.requestAccounts())\n  } ,[])\n\n\n\n  const isShowFixMulti = accounts.find((item) => {\n    if (item.checked) {\n\n      return true\n    }\n    return false\n  })\n  let total_waring=0;\n  let total_thread=0;\n  let total_view24h=0;\n  let total_thread_set=0;\n  let total_tool_warning=0;\n  for(let i=0;i<accounts.length;i++){\n    if(parseInt(accounts[i].timegettask)>30){\n      total_tool_warning=total_tool_warning+1;\n    }\n    if((Date.now()-accounts[i].timecheck)/1000/60>6){\n      total_waring=total_waring+1;\n    }else{\n      total_thread_set=total_thread_set+(accounts[i].threads-1);\n      total_thread=total_thread+accounts[i].total;\n    }\n    total_view24h=total_view24h+accounts[i].view24h;\n  }\n\n  useEffect(() => {\n    async function getcounts(){\n      const requestUrl = 'http://accpremiumpostget-env.ap-southeast-1.elasticbeanstalk.com/gmails/countgmails';\n      const response= await fetch(requestUrl,{\n        method: 'get',\n        headers: new Headers({\n          'Authorization': '1',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n      });\n      const responseJson= await  response.json();\n      const {counts}=responseJson;\n      console.log(counts);\n      settotal_user(counts);\n    }\n    async function getcountsbyendtrial(){\n      const requestUrl = 'http://accpremiumpostget-env.ap-southeast-1.elasticbeanstalk.com/gmails/countgmailsbyendtrial';\n      const response= await fetch(requestUrl,{\n        method: 'get',\n        headers: new Headers({\n          'Authorization': '1',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        })\n      });\n      const responseJson= await  response.json();\n      const {counts}=responseJson;\n      console.log(counts);\n      settotal_user_endtrial(counts);\n    }\n    getcountsbyendtrial();\n    getcounts();\n  },[vpstpye]);\n\n  const clickDeleteHandler = () => {\n    const arr:string[]=[]\n    accounts.forEach(item=>{\n      if(item.checked==true)\n        arr.push(item.vps)\n    })\n    const vps=arr.join(',')\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" VPS!\") == true) {\n      dispatch(actions.deleteVpsRequest(vps))\n    }\n  }\n\n  return (\n\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n\n      <div  className='card-header border-0 pt-5'>\n        <h3 className='card-title align-items-start flex-column'>\n          <span style={{fontFamily:'monospace'}} className='card-label fw-bolder fs-3 mb-1'>Danh sách VPS </span>\n          <span style={{color:'black',fontSize:20}} className='badge badge-success'>{accounts?accounts.length:0} vps running\n\n            <span className='badge badge-warning' style={{ color:'black',margin:4}}>{total_waring} vps warning</span>\n            <span className='badge badge-danger' style={{ color:'black',margin:4}}>{total_tool_warning} tool warning</span>\n            <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_thread} thread</span>\n            <span className='badge badge-light-primary' style={{ color:'black',margin:4}}>{total_thread_set} thread set</span>\n            <span className='badge ant-badge-status-cyan' style={{ color:'black',margin:4}}>{total_user_endtrial} sum user</span>\n            <span className='badge badge-warning' style={{ color:'black',margin:4}}>{total_user} user</span>\n            <span className='badge badge-danger' style={{ color:'black',margin:4}}>{total_user_endtrial-total_user} user die</span>\n            </span>\n        </h3>\n        {isShowFixMulti && (\n            <div>\n                <button style={{fontWeight:'bold',margin:5}}\n                        onClick={() => {\n                          setShowEditMulti(true)\n                        }}\n                        className='btn btn-sm btn-primary'>\n                  Chỉnh sửa\n                </button>\n\n              <button style={{fontWeight:'bold',margin:5}}\n                      onClick={() => {\n                        setShowRestartMulti(true)\n                      }}\n                      className='btn btn-sm btn-warning'>\n                Restart\n              </button>\n\n                <button style={{fontWeight:'bold',margin:5}}\n                        onClick={()=>clickDeleteHandler()}\n                    className='btn btn-sm btn-danger'>\n                  Xóa VPS\n                </button>\n            </div>\n\n        )}\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Menu */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n\n                <th className='w-25px'>\n                  <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt) => {\n                          dispatch(actions.checkedAllChange(evt.target.checked))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value='1'\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                    />\n                  </div>\n                </th>\n                <th className='w-25px'>STT</th>\n                <th className='min-w-150px'>VPS IP</th>\n                <th className='min-w-140px'>VPS Option</th>\n                <th className='min-w-120px'>Trạng thái</th>\n                <th className='min-w-100px text-end'>Hành động</th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n\n            <tbody>\n              {\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\n                  return <UserItem key={item.id+index} item={item} index={index} />\n                })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n      <EditMulti\n          show={showEditMulti}\n          close={() => {\n            setShowEditMulti(false)\n          }}\n      />\n      <RestartMulti\n          show={showRestartMulti}\n          close={() => {\n            setShowRestartMulti(false)\n          }}\n      />\n    </div>\n  )\n}\nexport  { UserList }","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts",["2188"],"import axios from 'axios'\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\nimport { AccountModel } from '../models/Account'\n\n\n\nexport async function getListAccount() {\n  const res:any = await getFunciton(\"vps/list\")\n  return res\n}\n\n\nexport async function updateAccount(account:AccountModel) {\n  const res:any = await postWithoutTokenFunciton(\"vps/update\",account)\n  return res\n}\n\nexport async function updateResetVPS(account:AccountModel) {\n  const res:any = await postWithoutTokenFunciton(\"vps/updaterestart\",account)\n  return res\n}\n\nexport async function deleteVps(vps:string) {\n  const res:any = await deleteFunciton(\"/vps/delete?vps=\"+vps)\n  return res\n}\n\nexport async function allAccount() {\n  const res:any = await getFunciton(\"/gmails/countgmails\")\n  return res\n}","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx",["2189","2190","2191","2192","2193","2194","2195"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\n\n\n\ntype Props = {\n    item: AccountModel\n}\nconst EditModal: React.FC<Props> = ({ item }) => {\n    console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const [vpsoption, setvpsoption] = useState('Cheat')\n    const [vpsreset, setvpsreset] = useState(0)\n    const [threads, setthreads] = useState(item.threads)\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n    const updateUser = () => {\n        dispatch(actions.requestUpdate({\n            ...item,\n            vpsoption:vpsoption,\n            threads:threads,\n            vpsreset:vpsreset\n        }))\n    }\n    const handleChange = (e:any) => {\n        setthreads(parseInt(e.target.value))\n    }\n\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update cho VPS IP:  {item?.vps}</h3>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Nhập số luồng</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={threads} onChange={handleChange} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsoption(e.target.value)}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsoption}\n                        >\n                            <option key={1} value={'Cheat'}>\n                                {\"Cheat\"}\n                            </option>\n                            <option key={2} value={'Buffh'}>\n                                {\"Buffh\"}\n                            </option>\n                            <option key={0} value={'Pending'}>\n                                {\"Pending\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsreset}\n                        >\n                            <option key={1} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Restart\"}\n                            </option>\n                            <option key={1} value={2}>\n                                {\"Restart & DelAcc\"}\n                            </option>\n                        </Input>\n                    </div>\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" onClick={updateUser} className=\"btn btn-primary\">Lưu</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default EditModal","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx",["2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209"],"import React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\nimport {useDispatch} from 'react-redux'\nimport {actions} from '../../redux/AccountRedux'\nimport moment from 'moment'\nimport {date} from \"yup\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n    item: AccountModel,\n    index:number\n}\n\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const clickHandler =()=>{\n        dispatch(actions.showCurrentAccount(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.vps!) == true) {\n            dispatch(actions.deleteVpsRequest(item.vps))\n        }\n    }\n    return (\n\n        <tr>\n            <td className='w-25px'>\n                <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt)=>{\n                            dispatch(actions.checkedChange({\n                                vps:item.vps,\n                                checked:evt.target.checked\n                            }))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value={1}\n                        checked={item.checked}\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                         />\n                </div>\n            </td>\n            <td className='w-25px'>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n\n            <td>\n                <div className='d-flex align-items-center'>\n                    <div className='d-flex justify-content-start flex-column'>\n                        <a href='#' style={{textDecorationLine:'none'}} className='text-dark fw-bolder text-hover-primary fs-6'>\n                            <span style={{marginRight:2}} className='badge badge-dark'>\n                                <text style={{fontSize:12}}>\n                                {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length)}\n                                </text>\n                            </span>\n                            <span style={{marginRight:2}} className='badge badge-danger'>\n                                <text style={{fontSize:12,fontWeight:'bold'}}>\n                                {item.vps.substring(0,item.vps.lastIndexOf('-'))}\n                                </text>\n                            </span>\n                        </a>\n                        <div>\n                            {item.vpsoption!=\"Pending\"?<text style={{color:round((Date.now()-item.timecheck)/1000/60)>30?'red':round((Date.now()-item.timecheck)/1000/60)>5?'orange':'green',fontWeight:'bold'}}>\n                                    {round((Date.now()-item.timecheck)/1000/60)<=5?'Live ':round((Date.now()-item.timecheck)/1000/60)<=30?'Warning ':'Die '}</text>:\n                                <text style={{color:'orange',fontWeight:'bold'}}>Pending </text>\n                            }\n                            {round((Date.now()-item.timecheck)/1000/60)}{'m'}\n                        </div>\n\n                    </div>\n                </div>\n            </td>\n            <td>\n                <span style={{fontWeight:'bold',fontSize:12}} className={item.vpsoption=='Cheat'?'badge badge-success':item.vpsoption=='Buffh'?'badge badge-danger':'badge badge-warning'}>\n                    <text >\n                    {item.vpsoption==''?'Pending':item.vpsoption}\n                    </text>\n                </span>\n                <br/>\n                <span style={{fontWeight:'bold',fontSize:11,marginTop:2}} className='badge badge-dark'>\n\n                        <text >\n                             {item.threads==0?'':+item.threads}\n                        </text>\n\n                </span>\n            </td>\n            <td style={{width:'250px'}} className='text-end'>\n                <div  className='d-flex flex-column w-100 me-2'>\n                    <div  className='d-flex flex-stack mb-2'>\n                        <span className={parseInt(item.timegettask)>=30?'badge badge-danger':''} >{item.total} running | {item.timegettask} minutes before</span>\n                        {\n                            item.vpsreset!=0 && <span style={{fontWeight:'bold',fontSize:11,marginTop:2}} className='badge badge-danger'>\n\n                                <text >\n                                        Reset {item.vpsreset}\n                                </text>\n\n                </span>\n                        }\n                    </div>\n                    <div  className='progress h-6px w-100'>\n                        <div\n                            className='progress-bar bg-active-success'\n                            role='progressbar'\n                            style={{width:(item.total/(item.threads-1))*300}}\n                        ></div>\n                    </div>\n                </div>\n            </td>\n            <td>\n                <div className='d-flex justify-content-end flex-shrink-0'>\n                    <button\n                        onClick={()=>clickHandler()}\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                    >\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </button>\n                    <button\n                        onClick={()=>clickDeleteHandler()}\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'>\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen027.svg'\n                            className='svg-icon-3'\n                        />\n                    </button>\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default UserItem","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx",["2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\nimport {RootState} from \"../../../../../setup\";\nimport {Group, OrderModel} from \"../../../orders/models/Order\";\n\n\n\ntype Props = {\n    show: boolean\n    close: () => void\n}\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\n    //console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ accounts }) => accounts.adding, shallowEqual) as boolean || false\n    const accounts: AccountModel[] = useSelector<RootState>(({ accounts }) => accounts.accounts, shallowEqual) as AccountModel[] || []\n\n\n    const [vpsoption, setvpsoption] = useState('Pending')\n    const [threads, setthreads] = useState(0)\n    const [vpsreset, setvpsreset] = useState(0)\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n\n    const submit = () => {\n        const arr:string[]=[]\n        accounts.forEach(item=>{\n            if(item.checked==true)\n                arr.push(item.vps)\n        })\n        const vps=arr.join('\\n')\n\n        dispatch(actions.editMultiOrderRequest({\n            vps,\n            vpsoption,\n            vpsreset,\n            threads\n        }))\n\n    }\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Nhập số luồng</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}}\n                               onChange={(e) => setthreads(parseInt(e.target.value))}\n                               value={threads}  type=\"number\"\n                               className=\"form-control\"\n                               placeholder=\"Nhập số point cho user\"\n                               aria-label=\"Recipient's username\"\n                               aria-describedby=\"basic-addon2\" />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsoption(e.target.value)}\n                            className=\"form-control form-control-solid\"\n                            style={{fontWeight:'bold'}}\n                            type=\"select\"\n                            value={vpsoption}\n                        >\n                            <option key={1} value={'Cheat'}>\n                                {\"Cheat\"}\n                            </option>\n                            <option key={2} value={'Buffh'}>\n                                {\"Buffh\"}\n                            </option>\n                            <option key={0} value={'Pending'}>\n                                {\"Pending\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsreset}\n                        >\n                            <option key={1} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Restart\"}\n                            </option>\n                            <option key={1} value={2}>\n                                {\"Restart & DelAcc\"}\n                            </option>\n                        </Input>\n                    </div>\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" disabled={adding} onClick={submit} className=\"btn btn-primary\">Lưu thông tin mới</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default EditMulti","C:\\Users\\KT2\\Desktop\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx",["2223","2224","2225","2226","2227","2228","2229","2230","2231","2232","2233","2234","2235","2236","2237"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\nimport {RootState} from \"../../../../../setup\";\nimport {Group, OrderModel} from \"../../../orders/models/Order\";\n\n\n\ntype Props = {\n    show: boolean\n    close: () => void\n}\nconst RestartMulti: React.FC<Props> = ({ show,close }) => {\n    //console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ accounts }) => accounts.adding, shallowEqual) as boolean || false\n    const accounts: AccountModel[] = useSelector<RootState>(({ accounts }) => accounts.accounts, shallowEqual) as AccountModel[] || []\n\n\n    const [vpsoption, setvpsoption] = useState('Pending')\n    const [threads, setthreads] = useState(0)\n    const [vpsreset, setvpsreset] = useState(0)\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n\n    const submit = () => {\n        const arr:string[]=[]\n        accounts.forEach(item=>{\n            if(item.checked==true)\n                arr.push(item.vps)\n        })\n        const vps=arr.join('\\n')\n\n        dispatch(actions.editRestartMultiOrderRequest({\n            vps,\n            vpsoption,\n            vpsreset,\n            threads\n        }))\n\n    }\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsreset}\n                        >\n                            <option key={1} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Restart\"}\n                            </option>\n                            <option key={1} value={2}>\n                                {\"Restart & DelAcc\"}\n                            </option>\n                        </Input>\n                    </div>\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" disabled={adding} onClick={submit} className=\"btn btn-primary\">Lưu thông tin mới</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default RestartMulti","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\index.tsx",["2238"],["2239","2240"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\redux\\Store.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\App.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\Metronici18n.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\redux\\RootReducer.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\i18nProvider.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\routing\\Routes.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthInit.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\setup\\axios\\SetupAxios.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthRedux.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\routing\\PrivateRoutes.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterLayout.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterInit.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\ErrorsPage.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutModels.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutSetup.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\PageData.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutProvider.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\utils\\AxiosConfig.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\AccountPage.tsx",["2241","2242","2243","2244","2245"],"import React,{useEffect,useState} from 'react'\nimport {UserList} from './UserList'\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\nimport {actions} from './redux/AccountRedux'\nimport {AccountModel} from 'app/modules/accounts/models/Account'\nimport {RootState} from 'setup'\nimport EditModal  from './modals/EditModal'\nimport {Input} from \"reactstrap\";\nconst AccountPage: React.FC = () => {\n  const dispatch = useDispatch()\n  const [vpstype, setvpstype] = useState('')\n  const accounts: AccountModel[] = useSelector<RootState>(({accounts}) => accounts.accounts, shallowEqual) as AccountModel[] || []\n  const currentAccount: AccountModel = useSelector<RootState>(({accounts}) => accounts.currentAccount, shallowEqual) as AccountModel || undefined\n\n  useEffect(() => {\n    dispatch(actions.requestAccounts())\n  },[]);\n\n\n  return (\n      <>\n        <div className='row gy-5 gx-xl-12'>\n\n          <div className='col-xl-12'>\n            <UserList accounts={vpstype.length==0?accounts:(accounts.filter(vps=>vps.vps.search(vpstype)!=-1))} className='card-xxl-stretch mb-5 mb-xl-12' />\n          </div>\n          {\n              currentAccount&&<EditModal key={currentAccount?.vps} item={currentAccount} />\n          }\n        </div>\n      </>\n  )\n}\nexport default AccountPage","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\ComputerList.tsx",["2246","2247","2248","2249","2250","2251","2252","2253","2254","2255"],"/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React, {useEffect, useState} from 'react'\nimport {ProxyModel} from 'app/modules/history/models/Account'\nimport ComputerItem from './components/ComputerItem'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { actions } from './redux/AccountRedux'\nimport { RootState } from 'setup'\nimport {Input, Label} from \"reactstrap\";\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\ntype Props = {\n  className: string,\n}\n\nconst ComputerList: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch()\n\n\n  const API_URL = process.env.REACT_APP_API_URL\n  const [ipv4, setipv4] = useState(\"\")\n  const [keytrue, setKeyTrue] = useState(0)\n  const [addtrue, setAddTrue] = useState(0)\n  const [status, setStatus] = useState('')\n  const proxies:ProxyModel[] = useSelector<RootState>(({ histories }) => histories.proxies, shallowEqual) as ProxyModel[] || []\n  let sum_total=0;\n  let sum_die=0;\n\n  for (var i = 0; i < proxies.length; i++) {\n      if(proxies[i].state==0){\n        sum_die=sum_die+1\n      }\n  }\n  useEffect(() => {\n    dispatch(actions.requestProxies())\n    setipv4('')\n    setKeyTrue(0)\n  }, [status])\n  async function delipv4(ipv4:string) {\n    let  requestUrl = API_URL+'proxy/delipv4?ipv4='+ipv4;\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {status} = responseJson;\n    return status\n  }\n  async function addipv4(ipv4:string) {\n    let  requestUrl = API_URL+'proxy/addipv4?ipv4='+ipv4;\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {status} = responseJson;\n    return status\n  }\n  async function addcron() {\n    let  requestUrl = API_URL+'proxy/addcron'\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {num} = responseJson;\n    sum_total=num\n    return num\n  }\n  const clickDeleteHandler = () => {\n    const arr:string[]=ipv4.split('\\n');\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" đơn!\") == true) {\n      for(var i=0;i<arr.length;i++){\n        delipv4(arr[i])\n      }\n      setStatus('true')\n    }\n  }\n  const clickAddHandler = () => {\n    const arr:string[]=ipv4.split('\\n');\n    for(var i=0;i<arr.length;i++){\n      addipv4(arr[i])\n    }\n    setStatus('true')\n  }\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-6 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách Proxy</span>\n              <span  className='ml-2 fw-bold fs-7'>(Tổng: {proxies.length}, Die: {sum_die})</span>\n            </div>\n            {keytrue==0&&<div className=\"col-lg-6 col-sm-12 text-right\">\n              <button\n                  onClick={() => {\n                    setKeyTrue(1)\n                    setAddTrue(1)\n                  }}\n                  className='btn btn-success'\n              >\n                Thêm\n              </button>\n                <button style={{margin:5}}\n                    onClick={() => {\n                      setKeyTrue(1)\n                    }}\n                    className='btn btn-success'\n                >\n                  Xóa\n                </button>\n              <button\n                  onClick={() => {\n                    addcron()\n                    alert('Số Cron:'+sum_total)\n                  }}\n                  className='btn btn-light-facebook'\n              >\n                Add Cron\n              </button>\n            </div>}\n\n          </div>\n        </div>\n        {keytrue==1&&<div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\"}}>\n            <div >\n                <Input style={{height:500,width:'100%',float:\"left\"}}\n                       id=\"list_id\"\n                       name=\"list_id\"\n                       className=\"form-control form-control-solid\"\n                       placeholder={\"1 ipv4 một dòng!\"}\n                       value={ipv4}\n                       type={\"textarea\"}\n                       onChange={(e) => setipv4(e.target.value)}\n                />\n              {addtrue==0&&<button style={{maxWidth:120,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\n                        onClick={() => {\n                          clickDeleteHandler()\n                        }}\n                    /*\n                    if(key.trim().length==0){\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                        dispatch(actions.requestOrders(''))\n                      }else{\n                        dispatch(actions.requestOrders(user))\n                      }\n                    }else{\n                      if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                        dispatch(actions.showordersfilter(key,''))\n                      }else{\n                        dispatch(actions.showordersfilter(key,user))\n                      }\n                    }\n                    //setKey(\"\")\n                  }}\n\n                     */\n                        className='btn btn-success'\n                >\n                  Xóa\n                </button>}\n              {addtrue==1&&<button style={{maxWidth:140,color:\"white\",height:40,marginTop:10,float:\"right\",marginBottom:20}}\n                                   onClick={() => {\n                                     clickAddHandler()\n                                   }}\n                  /*\n                  if(key.trim().length==0){\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                      dispatch(actions.requestOrders(''))\n                    }else{\n                      dispatch(actions.requestOrders(user))\n                    }\n                  }else{\n                    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                      dispatch(actions.showordersfilter(key,''))\n                    }else{\n                      dispatch(actions.showordersfilter(key,user))\n                    }\n                  }\n                  //setKey(\"\")\n                }}\n\n                   */\n                                   className='btn btn-success'\n              >\n                Thêm\n              </button>}\n            </div>\n\n\n          </div>\n        </div>}\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      {keytrue==0&&<div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr>\n                <th className='min-w-10px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Ipv4</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Port</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>State</span>\n                </th>\n                <th className='min-w-50px'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Geo</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {\n                proxies&&proxies?.map((item: ProxyModel,index:number) => {\n                  return <ComputerItem key={\"ipv4-\"+index} item={item} index={index}/>\n                })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>}\n      {/* begin::Body */}\n    </div>\n  )\n}\n\nexport default ComputerList\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrdersPage.tsx",["2256","2257"],"import React, { useEffect, useState } from 'react'\nimport { OrderList } from './OrderList'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { OrderModel } from './models/Order'\nimport { RootState } from 'setup'\nimport { actions } from './redux/OrdersRedux'\nimport EditModal from './modals/EditModal'\n\nconst WidgetsPage: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n  const channel_prior: number = useSelector<RootState>(({ orders }) => orders.channel_prior, shallowEqual) as number || 0\n  const [channelPrior,setChannelPrior] =useState(channel_prior)\n  const currentOrder: OrderModel = useSelector<RootState>(({ orders }) => orders.currentOrder, shallowEqual) as OrderModel || undefined\n  useEffect(() => {\n    //dispatch(actions.requestSetting())\n    //dispatch(actions.requestGroups())\n    dispatch(actions.requestOrders())\n  }, [])\n\n  useEffect(() => {\n    setChannelPrior(channel_prior)\n  }, [channel_prior])\n\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n        <div className='col-xl-12'>\n          <OrderList orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n      </div>\n      {\n        currentOrder && <EditModal key={currentOrder?.channel_id} item={currentOrder}  />\n      }\n    </>\n  )\n}\n\nexport default WidgetsPage\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Footer.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\ScrollTop.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Content.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx",["2258"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport clsx from 'clsx'\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\nimport {useLayout} from '../../core'\nimport {Header} from './Header'\nimport {DefaultTitle} from './page-title/DefaultTitle'\nimport {Topbar} from './Topbar'\n\nexport function HeaderWrapper() {\n  const {config, classes, attributes} = useLayout()\n  const {header, aside} = config\n\n  return (\n    <div\n      id='kt_header'\n      className={clsx('header', classes.header.join(' '), 'align-items-stretch')}\n      {...attributes.headerMenu}\n    >\n      <div style={{backgroundColor:'#e1f8eb'}}\n        className={clsx(\n          classes.headerContainer.join(' '),\n          'd-flex align-items-stretch justify-content-between'\n        )}\n      >\n        {/* begin::Aside mobile toggle */}\n        {aside.display && (\n          <div className='d-flex align-items-center d-lg-none ms-n3 me-1' title='Show aside menu'>\n            <div\n              className='btn btn-icon btn-active-light-primary w-30px h-30px w-md-80px h-md-80px'\n              id='kt_aside_mobile_toggle'\n            >\n              <KTSVG path='/media/icons/duotune/abstract/abs015.svg' className='svg-icon-2x mt-1' />\n            </div>\n          </div>\n        )}\n        {/* end::Aside mobile toggle */}\n        {/* begin::Logo */}\n        {!aside.display && (\n          <div className='d-flex align-items-center flex-grow-1 flex-lg-grow-0' >\n            <Link to='/dashboard' className='d-lg-none'>\n              <img alt='Logo' src={toAbsoluteUrl('/media/logos/logo-2.svg')} className='h-30px' />\n            </Link>\n          </div>\n        )}\n        {/* end::Logo */}\n\n        {/* begin::Wrapper */}\n        <div style={{backgroundColor:'#e1f8eb'}}  className='d-flex align-items-stretch justify-content-between flex-lg-grow-1' >\n          {/* begin::Navbar */}\n          {header.left === 'menu' && (\n            <div className='d-flex align-items-stretch' id='kt_header_nav'>\n         \n            </div>\n          )}\n\n          {header.left === 'page-title' && (\n            <div className='d-flex align-items-center' id='kt_header_nav'>\n              <DefaultTitle />\n            </div>\n          )}\n\n          <div className='d-flex align-items-stretch flex-shrink-0'>\n            <Topbar />\n          </div>\n        </div>\n        {/* end::Wrapper */}\n      </div>\n    </div>\n  )\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx",["2259"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error404.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error500.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\Logout.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\AuthPage.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts",["2260","2261","2262","2263","2264","2265","2266"],"import { Action } from '@reduxjs/toolkit'\nimport { App } from 'app/App'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\nimport { getListOrder, updateOrder, addOrder, addOrderManual,  updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  RequestOrders: '[Orders] Requested',\n  OrdersLoadedSuccess: '[Orders] Loaded succcess',\n  OrdersLoadedFail: '[Orders] load fail',\n  AddOrderRequest: '[Orders] Add Order Request',\n  AddOrderManualRequest: '[Orders] Add Order Manual Request',\n  AddOrderSuccess: '[Orders] Add Order Success',\n  AddOrdersSuccess: '[Orders] Add Orders Success',\n  AddOrderFail: '[Orders] Add Order Fail',\n  ShowcurrentOrder: '[orders] Show Account',\n  RequestUpdate: '[orders] Requested Update',\n  UpdateMultiOrderRequest: '[orders] Update Multi Order Request',\n  UpdateSuccess: '[orders] Update Success',\n  UpdateMultiSuccess: '[orders] Update Multi Success',\n  UpdateFail: '[orders] Update Fail',\n  ClearSelected: '[orders] Clear selected account',\n  GroupLoadedRequest: '[orders] Group Loaded Request',\n  GroupLoadedSuccess: '[orders] Group Loaded Success',\n  GroupLoadedFail: '[orders] Group Loaded Fail',\n  GroupAddRequest: '[orders] GroupAddRequest',\n  GroupAddSuccess: '[orders] Group Add Success',\n  GroupAddFail: '[orders] Group Add Fail',\n  GroupDeleteRequest: '[orders] Group Delete Request',\n  GroupDeleteSuccess: '[orders] Group Delete Success',\n  SelectGroup: '[orders] Select Group',\n  DeleteOrderRequest: '[orders] Delete Order Request',\n  DeleteOrderSuccess: '[orders] Delete Order Success',\n  CheckedChange: '[orders] Checked Change',\n  CheckedAllChange: '[orders] Checked All Change',\n}\n\nconst initialorderstate: Iorderstate = {\n  orders: [],\n  loading: false,\n  adding: false,\n  groups: [],\n  currentOrder: undefined,\n  currentGroup: undefined,\n  channel_prior: 0,\n  \n}\n\nexport interface Iorderstate {\n  orders: OrderModel[]\n  loading: boolean\n  adding: boolean\n  currentOrder?: OrderModel\n  groups: Group[]\n  currentGroup?: Group\n  channel_prior: number\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-orders', whitelist: [] },\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestOrders: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.OrdersLoadedSuccess: {\n        return {\n          ...state,\n          orders: action.payload?.orders || [],\n          loading: false\n        }\n      }\n      case actionTypes.GroupLoadedSuccess: {\n        return {\n          ...state,\n          groups: action.payload?.groups\n        }\n      }\n      case actionTypes.SelectGroup: {\n        return {\n          ...state,\n          currentGroup: action.payload?.group\n        }\n      }\n      case actionTypes.GroupDeleteSuccess: {\n        return {\n          ...state,\n          currentGroup: undefined,\n          groups: state.groups.filter((item: Group) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.DeleteOrderSuccess: {\n        return {\n          ...state,\n          orders: state.orders.filter((item: OrderModel) => {\n            if (item.channel_id === action.payload?.channel_id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.OrdersLoadedFail: {\n        return {\n          ...state,\n          orders: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n        const remaporders = state.orders.map((item: OrderUpdateForm) => {\n          if (item.channel_id === action.payload?.order?.channel_id) {\n            return action.payload?.order\n          } else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          const findItem = action.payload?.channels.find((_item:OrderModel)=>{\n            if(_item.channel_id===item.channel_id){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          adding: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.AddOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.AddOrderManualRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.GroupAddSuccess: {\n        return {\n          ...state,\n          groups: state.groups.concat(action.payload?.group)\n        }\n      }\n      case actionTypes.AddOrderSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.order)\n        }\n      }\n      case actionTypes.AddOrdersSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.orders)\n        }\n      }\n      case actionTypes.AddOrderFail: {\n        return {\n          ...state,\n          adding: false,\n          message: action.payload?.message\n        }\n      }\n      case actionTypes.ShowcurrentOrder: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            if(item.channel_id===action.payload?.data?.channel_id){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      \n      \n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestOrders: () => ({ type: actionTypes.RequestOrders }),\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\n  requestUpdate: (order: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { order } }),\n  updateSuccess: (order: OrderUpdateForm) => ({ type: actionTypes.UpdateSuccess, payload: { order } }),\n  updateMultiSuccess: (channels: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { channels } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\n  deleteOrderRequest: (channel_id: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { channel_id } }),\n  deleteOrderSuccess: (channel_id: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { channel_id } }),\n  checkedChange: (data:{channel_id:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\n    const { data: orders } = yield getListOrder()\n    yield put(actions.fulfillorders(orders.channels))\n  })\n\n\n\n  http://localhost:8080/Fitnees/\n\n\n\n\n\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateOrder(param.payload.order)\n    if (result && result.channel) {\n      yield put(actions.updateSuccess(result.channel))\n    } else {\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n  \n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrderManual(payload)\n        if (result && (result.channel)) {\n            yield put(actions.addOrderSuccess(result.status))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrder(payload)\n        if (result && (result.channel||result.channels)) {\n          if(payload.channel_id.includes(\"\\n\")){\n            console.log(\"------channels------\",result.channels)\n            yield put(actions.addOrdersSuccess(result.channels))\n          }else{\n            yield put(actions.addOrderSuccess(result.channel))\n          }\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield updateOrder(payload)\n        if (result && result.channels) {\n          yield put(actions.updateMultiSuccess(result.channels))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        } \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\n    try {\n      const payload = param.payload.channel_id\n      const { data: result } = yield deleteChannel(payload)\n      if (result&&result.channel!==null) {\n        yield put(actions.deleteOrderSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts",["2267","2268","2269","2270"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountRedux.ts",["2271","2272","2273"],"import { Action } from '@reduxjs/toolkit'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport {ComputerModel, HistoryModel, ChannelStaticModel, ProxyModel} from '../models/Account'\nimport { getList,getComputer,getStatics,getProxy,deleteProxy} from './AccountCRUD'\nimport {deleteChannel} from \"../../orderdone/redux/OrdersCRUD\";\nimport {OrderModel} from \"../../orderdone/models/Order\";\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  RequestHistories: '[Histories] Requested',\n  HistoryLoadedSuccess: '[Histories] Loaded succcess',\n  HistoryLoadedFail: '[Histories] load fail',\n  ProxyLoadedFail: '[Proxy] load fail',\n  RequestComputers: '[Computers] Requested',\n  ComputersLoadedSuccess: '[Computers] Loaded succcess',\n  ProxyLoadedSuccess: '[Proxy] Loaded succcess',\n  RequestStatic: '[Static] Requested',\n  RequestProxy: '[Proxy] Requested',\n  StaticLoadedSuccess: '[Static] Loaded succcess',\n  CheckedChange: '[Proxy] Checked Change',\n  CheckedAllChange: '[Proxy] Checked All Change',\n  DeleteIpv4Request: '[Proxy] Delete Proxy Request',\n}\n\n\nconst initialAccountState: IAccountState = {\n  histories: [],\n  loading: false,\n  computers:[],\n  statics:[],\n  proxies:[],\n}\n\nexport interface IAccountState {\n  histories: HistoryModel[]\n  loading: boolean\n  computers : ComputerModel[],\n  statics : ChannelStaticModel[]\n  proxies:ProxyModel[]\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-histories', whitelist: [] },\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<IAccountState>) => {\n    switch (action.type) {\n      case actionTypes.RequestHistories: {\n        return {\n          ...state,\n          histories: [],\n          loading: true\n        }\n      }\n      case actionTypes.RequestProxy: {\n        return {\n          ...state,\n          proxies: [],\n          loading: true\n        }\n      }\n      case actionTypes.RequestComputers: {\n        return {\n          ...state,\n          computers: []\n        }\n      }\n      case actionTypes.ComputersLoadedSuccess: {\n        return {\n          ...state,\n          computers: action.payload?.computers || [],\n        }\n      }\n      case actionTypes.RequestStatic: {\n        return {\n          ...state,\n          statics: []\n        }\n      }\n      case actionTypes.StaticLoadedSuccess: {\n        return {\n          ...state,\n          statics: action.payload?.statics || [],\n        }\n      }\n      case actionTypes.ProxyLoadedSuccess: {\n        return {\n          ...state,\n          proxies: action.payload?.proxies || [],\n        }\n      }\n\n      case actionTypes.HistoryLoadedSuccess: {\n        return {\n          ...state,\n          histories: action.payload?.histories || [],\n          loading: false\n        }\n      }\n      case actionTypes.HistoryLoadedFail: {\n        return {\n          ...state,\n          histories: [],\n          loading: false\n        }\n      }\n      case actionTypes.ProxyLoadedFail: {\n        return {\n          ...state,\n          proxies: [],\n          loading: false\n        }\n      }\n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestHistories: (user_id: number) => ({ type: actionTypes.RequestHistories, payload: { user_id } }),\n  fulfillHistories: (histories: HistoryModel[]) => ({ type: actionTypes.HistoryLoadedSuccess, payload: { histories } }),\n  fulfillProxy: (proxies: ProxyModel[]) => ({ type: actionTypes.ProxyLoadedSuccess, payload: { proxies } }),\n  loadAccountsFail: (message: string) => ({ type: actionTypes.HistoryLoadedFail, payload: { message } }),\n  requestComputers: () => ({ type: actionTypes.RequestComputers}),\n  requestProxies: () => ({ type: actionTypes.RequestProxy}),\n  fulfillComputers: (computers: ComputerModel[]) => ({ type: actionTypes.ComputersLoadedSuccess, payload: { computers } }),\n  requestStatics: (user:string) => ({ type: actionTypes.RequestStatic,payload:{user}}),\n  fulfillStatics: (statics: ChannelStaticModel[]) => ({ type: actionTypes.StaticLoadedSuccess, payload: { statics } }),\n  checkedChange: (data:{vps:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n  deleteIpv4Request: (ipv4: string) => ({ type: actionTypes.DeleteIpv4Request, payload: { ipv4} }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestHistories, function* userRequested(param: any) {\n    const {data: resutl} = yield getList()\n    console.log(resutl)\n    yield put(actions.fulfillHistories(resutl.histories))\n  })\n  yield takeLatest(actionTypes.RequestProxy, function* userRequested(param: any) {\n    const {data: resutl} = yield getProxy()\n    console.log(resutl)\n    yield put(actions.fulfillProxy(resutl.proxies))\n  })\n  yield takeLatest(actionTypes.RequestComputers, function* userRequested(param: any) {\n    const {data: resutl} = yield getComputer()\n    console.log(resutl)\n    yield put(actions.fulfillComputers(resutl.computers))\n  })\n  yield takeLatest(actionTypes.RequestStatic, function* userRequested(param: any) {\n    const payload = param.payload.user\n    const {data: resutl} = yield getStatics(payload)\n    console.log(resutl)\n    yield put(actions.fulfillStatics(resutl.time7day))\n  })\n  yield takeLatest(actionTypes.DeleteIpv4Request, function* DeleteIpv4Request(param: any) {\n    try {\n      const payload = param.payload\n      const { data: result } = yield deleteProxy(payload.ipv4)\n    } catch (error) {\n\n    }\n  })\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\utils\\ApiHelper.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\UserList.tsx",["2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\n\nimport UserItem from './components/UserItem'\nimport {actions} from \"./redux/AccountRedux\";\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport {ComputerModel} from \"../history/models/Account\";\nimport {RootState} from \"../../../setup\";\nimport EditMulti from \"./modals/EditMulti\";\nimport RestartMulti from \"./modals/RestartMulti\";\nimport {Input} from \"reactstrap\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n  className: string,\n  accounts: AccountModel[]\n}\n\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\n\n  const dispatch = useDispatch()\n  const API_URL = process.env.REACT_APP_API_URL\n  const [loading, setLoading] = useState(true)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [total_user, settotal_user] = useState(0)\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\n  const [vpstpye, setvpstpye] = useState('')\n  const [keytrue, setKeyTrue] = useState(0)\n  const [keystatus, setKeyStatus] = useState('')\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\n  const [key, setKey] = useState(\"\")\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const [list_vps,setList_VPS]=useState([{\n    id:0,\n    vps:\"\",\n  },])\n  let [useEff, setuseEff] = useState(0)\n\n\n  var icount=0;\n  const isShowFixMulti = accounts.find((item) => {\n\n    if (item.checked) {\n      icount=icount+1\n    }\n    if(icount>=2){\n      return true\n    }\n    return false\n  })\n  let total_waring=0;\n  let total_thread=0;\n  let total_view24h=0;\n  let total_thread_set=0;\n  let total_tool_warning=0;\n  let [totalvps, setTotalVps] = useState(0)\n  let [totaldvpsshow, setTotalVpsShow] = useState(0)\n  for(let i=0;i<accounts.length;i++){\n    if(parseInt(accounts[i].timegettask)>30){\n      total_tool_warning=total_tool_warning+1;\n    }\n    if((Date.now()-accounts[i].timecheck)/1000/60>6){\n      total_waring=total_waring+1;\n    }else{\n      total_thread_set=total_thread_set+(accounts[i].threads);\n      total_thread=total_thread+accounts[i].total;\n    }\n    total_view24h=total_view24h+accounts[i].view24h;\n  }\n  async function getcounts(){\n    const requestUrl = API_URL+'buffh/countgmails';\n    const response= await fetch(requestUrl,{\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson= await  response.json();\n    const {counts}=responseJson;\n    console.log(counts);\n    settotal_user(counts);\n  }\n  async function getcountsbyendtrial(){\n    const requestUrl = API_URL+'buffh/countgmailsbyendtrial';\n    const response= await fetch(requestUrl,{\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson= await  response.json();\n    const {counts}=responseJson;\n    console.log(counts);\n    settotal_user_endtrial(counts);\n  }\n  useEffect(() => {\n    setLoading(true)\n    if(accounts.length!=0){\n      setLoading(false)\n    }\n    setList_VPS([])\n    useEff=useEff+1\n    setuseEff(useEff)\n    totaldvpsshow=totalvps\n    setTotalVpsShow(totaldvpsshow)\n    setTotalVps(0)\n    if(useEff<=1){\n      getcountsbyendtrial();\n      getcounts();\n    }\n\n  },[keytrue,key,keystatus,vpstpye,accounts.length,,]);\n\n  const clickDeleteHandler = () => {\n    const arr:string[]=[]\n    accounts.forEach(item=>{\n      const myElem = list_vps.find(value => value.vps===item.vps)\n      if(myElem && item.checked){\n        arr.push(item.vps)\n      }\n    })\n    const vps=arr.join(',')\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" VPS!\") == true) {\n      dispatch(actions.deleteVpsRequest(vps))\n    }\n  }\n\n  return (\n\n    <div className={`card ${className}`}>\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>{totaldvpsshow} vps </span>\n              <span className='badge badge-warning' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_waring} vps warning</span>\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_tool_warning} tool warning</span>\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_thread} thread</span>\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_thread_set} thread set</span>\n              <span className='badge badge-secondary' style={{ color:'white',margin:4,backgroundColor:\"#26695c\"}}>{total_user_endtrial} sum user</span>\n              <span className='badge badge-secondary' style={{ color:'black',margin:4}}>{total_user} user</span>\n              <span className='badge badge-danger' style={{ color:'white',margin:4,backgroundColor:\"#e57624\"}}>{total_user_endtrial-total_user} user die</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\n              {isShowFixMulti && (\n                  <div>\n                    <button style={{margin:5}}\n                            onClick={() => {\n                              setShowEditMulti(true)\n                            }}\n                            className='btn btn-light'>\n                      Chỉnh sửa\n                    </button>\n\n                    <button style={{margin:5}}\n                            onClick={() => {\n                              setShowRestartMulti(true)\n                            }}\n                            className='btn btn-light'>\n                      Restart\n                    </button>\n\n                    <button style={{margin:5}}\n                            onClick={()=>clickDeleteHandler()}\n                            className='btn btn-light'>\n                      Xóa VPS\n                    </button>\n                  </div>\n\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\n            <div style={{width:\"60%\"}}>\n              <div>\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\n                       id=\"note\"\n                       name=\"note\"\n                       value={key}\n                       placeholder=\"Search...\"\n                       onChange={(e) => setKey(e.target.value)}\n                       type=\"text\"\n                />\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\n                        onClick={() => {setKeyTrue(1)\n                        }}\n                        className='btn btn-sm'\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n            <div style={{width:\"40%\"}}>\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\n                                           onChange={(e) => {\n                                             setKeyStatus(e.target.value)\n                                             setKeyStatusTrue(1)\n                                           }}\n                                           className=\"form-control form-control-solid\"\n                                           type=\"select\"\n                                           value={keystatus}\n              >\n                <option key={'all'} value={'all'}>All</option>\n                <option key={'die'} value={'die'}>Die</option>\n                <option key={'live'} value={'live'}>Live</option>\n\n              </Input>}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Menu */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n\n                <th className='w-25px'>\n                  <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt) => {\n                          dispatch(actions.checkedAllChange(evt.target.checked))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value='1'\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                    />\n                  </div>\n                </th>\n                <th className='w-5px'>STT</th>\n                <th className='min-w-100px '>VPS</th>\n                <th className='min-w-100px'>VPS Option</th>\n                <th className='min-w-100px'>Trạng thái</th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n\n            <tbody>\n              {\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\n                    if (keystatustrue==0&&keytrue==0) {\n                      if(index===0){\n                        totalvps=1\n                      }else {\n                        totalvps=totalvps+1\n                      }\n                      let orderitem = {\n                        id: index,\n                        vps: item.vps\n                      }\n                      //setList_User([...list_user, orderitem])\n                      list_vps.push(orderitem)\n                      return <UserItem key={item.id+index} item={item} index={index} />\n                    }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatustrue==0&&keytrue==1){\n                      if(index===0){\n                        totalvps=1\n                      }else {\n                        totalvps=totalvps+1\n                      }\n                      let orderitem = {\n                        id: index,\n                        vps: item.vps\n                      }\n                      //setList_User([...list_user, orderitem])\n                      list_vps.push(orderitem)\n                      return <UserItem key={item.id+index} item={item} index={index} />\n                    }else if(keystatustrue==1&&keytrue==0){\n                        if(keystatus.indexOf(\"all\")>=0){\n                          if(index===0){\n                            totalvps=1\n                          }else {\n                            totalvps=totalvps+1\n                          }\n                          let orderitem = {\n                            id: index,\n                            vps: item.vps\n                          }\n                          //setList_User([...list_user, orderitem])\n                          list_vps.push(orderitem)\n                          return <UserItem key={item.id+index} item={item} index={index} />\n                        }else if(keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\n                          if(index===0){\n                            totalvps=1\n                          }else {\n                            totalvps=totalvps+1\n                          }\n                          let orderitem = {\n                            id: index,\n                            vps: item.vps\n                          }\n                          //setList_User([...list_user, orderitem])\n                          list_vps.push(orderitem)\n                          return <UserItem key={item.id+index} item={item} index={index} />\n                        }else if(keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\n                          if(index===0){\n                            totalvps=1\n                          }else {\n                            totalvps=totalvps+1\n                          }\n                          let orderitem = {\n                            id: index,\n                            vps: item.vps\n                          }\n                          //setList_User([...list_user, orderitem])\n                          list_vps.push(orderitem)\n                          return <UserItem key={item.id+index} item={item} index={index} />\n                        }\n                    }else if(keystatustrue==1&&keytrue==1){\n                      if(keystatus.indexOf(\"all\")>=0&&(item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)){\n                        if(index===0){\n                          totalvps=1\n                        }else {\n                          totalvps=totalvps+1\n                        }\n                        let orderitem = {\n                          id: index,\n                          vps: item.vps\n                        }\n                        //setList_User([...list_user, orderitem])\n                        list_vps.push(orderitem)\n                        return <UserItem key={item.id+index} item={item} index={index} />\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatus.indexOf('live')>=0&&(round((Date.now()-item.timecheck)/1000/60)<=5)){\n                        if(index===0){\n                          totalvps=1\n                        }else {\n                          totalvps=totalvps+1\n                        }\n                        let orderitem = {\n                          id: index,\n                          vps: item.vps\n                        }\n                        //setList_User([...list_user, orderitem])\n                        list_vps.push(orderitem)\n                        return <UserItem key={item.id+index} item={item} index={index} />\n                      }else if((item.vps.indexOf(key)>=0 || item.vpsoption.indexOf(key)>=0 || item.threads.toString().indexOf(key.indexOf('th')>=0?key.replace('th',''):'done')>=0)&&keystatus.indexOf('die')>=0&&round((Date.now()-item.timecheck)/1000/60)>=5){\n                        if(index===0){\n                          totalvps=1\n                        }else {\n                          totalvps=totalvps+1\n                        }\n                        let orderitem = {\n                          id: index,\n                          vps: item.vps\n                        }\n                        //setList_User([...list_user, orderitem])\n                        list_vps.push(orderitem)\n                        return <UserItem key={item.id+index} item={item} index={index} />\n                      }\n                    }\n                  })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n      <EditMulti\n          list_vps={list_vps}\n          show={showEditMulti}\n          close={() => {\n            setShowEditMulti(false)\n          }}\n      />\n      <RestartMulti\n          list_vps={list_vps}\n          show={showRestartMulti}\n          close={() => {\n            setShowRestartMulti(false)\n          }}\n      />\n    </div>\n  )\n}\nexport  { UserList }","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrderList.tsx",["2294","2295","2296","2297","2298","2299"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\nimport {Group, OrderModel} from './models/Order'\nimport {Popover, Transition} from '@headlessui/react'\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\n\nimport AddManualModal from './modals/AddManualModal'\nimport AddModal from './modals/AddModal'\nimport EditMulti from './modals/EditMulti'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport OrderItem from './components/OrderItem'\nimport {RootState} from 'setup'\nimport {actions} from './redux/OrdersRedux'\n\ntype Props = {\n  className: string\n  orders: OrderModel[]\n}\nconst OrderList: React.FC<Props> = ({className, orders}) => {\n  const dispatch = useDispatch()\n  const [showAdd, setShowAdd] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n\n  const [groupName, setGroupName] = useState('')\n  const role: string =\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const groups: Group[] =\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\n  const currentGroup: Group =\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\n\n  const selectGroup = (item: Group) => {\n    dispatch(actions.selectGroup(item))\n  }\n\n  const addGroup = () => {\n    if (groupName.length === 0) {\n      alert('vui lòng điền tên nhóm')\n      return\n    }\n    dispatch(actions.addGroupRequest(groupName))\n    setGroupName('')\n  }\n\n  const isShowFixMulti = orders.find((item) => {\n    if (item.checked) {\n      return true\n    }\n    return false\n  })\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className='card-header border-0 pt-5'>\n        <h3 className='card-title align-items-start flex-column'>\n          <span className='card-label fw-bolder fs-3 mb-1'>Danh sách đơn của bạn</span>\n          <span className='text-muted mt-1 fw-bold fs-7'>{orders.length} Đơn</span>\n        </h3>\n        <div className='card-toolbar'>\n          <div className='card-toolbar w-100'>\n            {/* begin::Menu */}\n            {isShowFixMulti && (\n\n              <button style={{fontWeight:'bold',margin:5,color:\"white\",backgroundColor:\"#26695c\"}}\n                onClick={() => {\n                  setShowEditMulti(true)\n                }}\n                className='btn btn-sm '\n              >\n                Sửa nhiều\n              </button>\n            )}\n            <button style={{fontWeight:'bold',color:\"white\",backgroundColor:\"#26695c\"}}\n              onClick={() => {\n                setShowAddManual(true)\n              }}\n              className='btn btn-sm '\n            >\n              Tạo đơn\n            </button>\n\n            <Popover className='z-0 relative'>\n              {({open}) => (\n                <>\n                  <Transition\n                    as={Fragment}\n                    enter='transition ease-out duration-200'\n                    enterFrom='opacity-0 -translate-y-1'\n                    enterTo='opacity-100 translate-y-0'\n                    leave='transition ease-in duration-150'\n                    leaveFrom='opacity-100 translate-y-0'\n                    leaveTo='opacity-0 -translate-y-1'\n                  >\n                    <Popover.Panel className='absolute z-10 inset-x-0 transform shadow-lg'>\n                      <div className='absolute inset-0 flex' aria-hidden='true'>\n                        <div className='bg-white w-full' />\n                      </div>\n                      <div className='relative max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-2'>\n                        <nav\n                          className='grid gap-y-10 px-4 py-8 bg-white'\n                          aria-labelledby='solutions-heading'\n                        >\n                          <div>\n                            <ul role='list' className='space-y-2 flex flex-col'>\n                              {groups.map((item: Group) => {\n                                return (\n                                  <li\n                                    key={item.id}\n                                    onClick={() => {\n                                      selectGroup(item)\n                                    }}\n                                    className='flex-1 w-96 cursor-pointer hover:text-blue focus:bg-blue'\n                                  >\n                                    {item.name}{' '}\n                                    <button\n                                      className='w-12 rounded-sm bg-danger text-white p-1 ml-5 cursor-pointer '\n                                      onClick={() => {\n                                        if (\n                                          window.confirm('bạn có chắc chắn muốn xóa nhóm này') ==\n                                          true\n                                        ) {\n                                          dispatch(actions.deleteGroupRequest(item.id))\n                                        }\n                                      }}\n                                    >\n                                      Xóa\n                                    </button>\n                                  </li>\n                                )\n                              })}\n                            </ul>\n                            <div>\n                              <div className='mt-1 flex rounded-md shadow-sm w-80'>\n                                <div className='relative flex items-stretch flex-grow focus-within:z-10'>\n                                  <input\n                                    value={groupName}\n                                    onChange={(e) => setGroupName(e.target.value)}\n                                    type='email'\n                                    name='email'\n                                    id='email'\n                                    className='focus:ring-indigo-500 focus:border-indigo-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300'\n                                    placeholder='Nhập tên nhóm '\n                                  />\n                                </div>\n                                <button\n                                  type='button'\n                                  onClick={addGroup}\n                                  className='-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500'\n                                >\n                                  <SortAscendingIcon\n                                    className='h-5 w-5 text-gray-400'\n                                    aria-hidden='true'\n                                  />\n                                  <span>Thêm</span>\n                                </button>\n                              </div>\n                            </div>\n                          </div>\n                        </nav>\n                      </div>\n                    </Popover.Panel>\n                  </Transition>\n                </>\n              )}\n            </Popover>\n          </div>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='w-25px'>\n                  <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                      onChange={(evt) => {\n                        dispatch(actions.checkedAllChange(evt.target.checked))\n                      }}\n                      className='form-check-input'\n                      type='checkbox'\n                      value='1'\n                      data-kt-check='true'\n                      data-kt-check-target='.widget-13-check'\n                    />\n                  </div>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span className='text-sm'># Tênh kênh</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span className='text-sm'>Đang chạy</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span className='text-sm'>Status</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {orders &&\n                orders.map((order: OrderModel, index: number) => {\n                  if (currentGroup === undefined) {\n                    return (\n                      <OrderItem\n                        index={index}\n                        showEdit={role === 'ROLE_ADMIN'}\n                        key={order.channel_id}\n                        item={order}\n                      />\n                    )\n                  }\n                  if (order.group_id === currentGroup.id) {\n                    return (\n                      <OrderItem\n                        index={index}\n                        showEdit={role === 'ROLE_ADMIN'}\n                        key={order.channel_id}\n                        item={order}\n                      />\n                    )\n                  }\n                  return null\n                })}\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {/* end::Table */}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n      {showAdd && (\n        <AddModal\n          show={true}\n          close={() => {\n            setShowAdd(false)\n          }}\n        />\n      )}\n\n      <EditMulti\n        show={showEditMulti}\n        close={() => {\n          setShowEditMulti(false)\n        }}\n      />\n      <AddManualModal\n        show={showAddManual}\n        close={() => {\n          setShowAddManual(false)\n        }}\n      />\n    </div>\n  )\n}\n\nexport {OrderList}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar1.tsx",["2300","2301"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\Topbar.tsx",["2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313"],"import clsx from 'clsx'\nimport React, {FC, useEffect} from 'react'\nimport {KTSVG, toAbsoluteUrl} from '../../../helpers'\nimport {HeaderNotificationsMenu, HeaderUserMenu, QuickLinks, Search} from '../../../partials'\nimport {useLayout} from '../../core'\nimport {UserModel} from \"../../../../app/modules/auth/models/UserModel\";\nimport {shallowEqual, useSelector} from \"react-redux\";\nimport {RootState} from \"../../../../setup\";\nimport {auto} from \"@popperjs/core\";\n\nconst toolbarButtonMarginClass = 'ms-2 ms-lg-3',\n  toolbarButtonHeightClass = 'w-30px h-30px w-md-40px h-md-40px',\n  toolbarUserAvatarHeightClass = 'symbol-30px symbol-md-40px',\n  toolbarButtonIconSizeClass = 'svg-icon-1'\nfunction format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n}\n\nconst Topbar: FC = () => {\n  const {config} = useLayout()\n  const user: UserModel = useSelector<RootState>(({auth}) => auth.user, shallowEqual) as UserModel\n  return (\n\n    <div className='d-flex align-items-stretch flex-lg-shrink-1'>\n      {/* begin::User */}\n      <div className=\"align-items-center row\" style={{backgroundColor:\"#c0e1ce\"}}>\n        {/* begin::Toggle */}\n        <div style={{width:\"70%\"}}>\n            <div className=\"pl-2 text-left\">\n                <div style={{color:\"#26695c\",fontWeight:\"bold\"}}>{user.username.substring(0,15)}...</div>\n                <span style={{color:\"#b7080f\",fontWeight:\"bold\"}}  className=\"font-weight-bold\" >{user.role}</span>\n                <div style={{color:\"#000000\",fontWeight:\"bold\"}} className=\"font-weight-bold\">{format1(user.balance)}đ</div>\n            </div>\n        </div>\n\n          <div style={{width:\"30%\"}}\n               data-kt-menu-trigger='click'\n               data-kt-menu-attach='parent'\n               data-kt-menu-placement='bottom-end'\n               data-kt-menu-flip='bottom'\n          >\n              <button className=\"d-block p-0 avatar-icon-wrapper\">\n                  <div className=\"avatar-icon avatar-icon--custom\">\n                      <img style={{width:40,height:40,borderImage:\"-moz-initial\",borderRadius:\"50%\"}} src={toAbsoluteUrl('/media/avatars/Blank-Avatar.jpg')} alt='metronic' />\n                  </div>\n              </button>\n          </div>\n\n\n        <HeaderUserMenu />\n        {/* end::Toggle */}\n      </div>\n      {/* end::User */}\n\n      {/* begin::Aside Toggler */}\n    </div>\n  )\n}\n\nexport {Topbar}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts",["2314"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts",["2315"],"import axios from 'axios'\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\n\n\n\nexport async function getListOrder() {\n  const res:any = await getFunciton(\"channel/getorder\")\n  return res\n}\n\n\n\nexport async function updateSetting(channel_prior:number) {\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\n  return res\n}\n\nexport async function updateOrder(order:OrderModel) {\n  const res:any = await postWithoutTokenFunciton(\"channel/updatesingle\",order)\n  return res\n}\n\nexport async function addorderv2( channel_id:string,\n                                  list_video:string,\n                                  home_rate:number,\n                                  direct_rate:number,\n                                  search_rate:number,\n                                  enabled:number,\n                                  max_thread:number,\n                                  suggest_rate:number,\n                                  view_percent:number) {\n  const res = await postWithoutTokenFunciton(\"channel/orderbuffh\", {\n    channel_id:channel_id,\n    list_video:list_video,\n    direct_rate:direct_rate,\n    search_rate:search_rate,\n    enabled:enabled,\n    max_thread:max_thread,\n    suggest_rate:suggest_rate,\n    view_percent:view_percent\n  })\n  return res\n}\n\n\nexport async function addOrder(order:OrderForm) {\n  const res:any = await postWithoutTokenFunciton(\"channel/orderbuffh\",order)\n  return res\n}\nexport async function addOrderManual(order:OrderFormManual) {\n  const res:any = await postWithoutTokenFunciton(\"channel/orderbuffh\",order)\n  return res\n}\n\nexport async function addOrderMulti(order:OrderPost) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\n\nexport async function deleteChannel(channel_id:string) {\n  const res:any = await deleteFunciton(\"/channel/delete?channelid=\"+channel_id)\n  return res\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountCRUD.ts",["2316"],"import axios from 'axios'\nimport {deleteFunciton, getFunciton} from 'utils/ApiHelper'\n\nexport async function getList() {\n  const res:any = await getFunciton(\"history/list\")\n  return res\n}\n\nexport async function getComputer() {\n  const res:any = await getFunciton(\"history/vpsrunning\")\n  return res\n}\n\nexport async function getProxy() {\n  const res:any = await getFunciton(\"proxy/list_v4\")\n  return res\n}\nexport async function deleteProxy(ipv4:string) {\n  const res:any = await deleteFunciton(\"/proxy/delete?ipv4=\"+ipv4)\n  return res\n}\n\nexport async function resetComputer(computer_name:string) {\n  const res:any = await getFunciton(\"history/reset_com?computer_name=\"+computer_name)\n  return res\n}\n\nexport async function getStatics(user:string) {\n  const res:any = await getFunciton(\"historybuffh/gettimebuff7day?user=\"+user)\n  return res\n}","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Registration.tsx",["2317"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Login.tsx",["2318"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\dataExamples.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\SearchModal.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\InboxCompose.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\MenuModal.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx",["2319","2320","2321"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport {FC} from 'react'\nimport {shallowEqual, useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {UserModel} from '../../../../app/modules/auth/models/UserModel'\nimport {RootState} from '../../../../setup'\nimport {Languages} from './Languages'\nimport * as auth from '../../../../app/modules/auth/redux/AuthRedux'\nimport {useDispatch} from 'react-redux'\nimport {toAbsoluteUrl} from '../../../helpers'\n\nconst HeaderUserMenu: FC = () => {\n  const user: UserModel = useSelector<RootState>(({auth}) => auth.user, shallowEqual) as UserModel\n  const dispatch = useDispatch()\n  const logout = () => {\n    dispatch(auth.actions.logout())\n  }\n  function format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n  }\n  return (\n    <div\n      className='menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-600 menu-state-bg menu-state-primary fw-bold py-4 fs-6 w-275px'\n      data-kt-menu='true'\n    >\n      <div className='menu-item px-3'>\n        <div className='menu-content d-flex align-items-center px-3'>\n          <div className='symbol symbol-50px me-5'>\n            <img alt='Logo' src={toAbsoluteUrl('/media/avatars/Blank-Avatar.jpg')} />\n          </div>\n          <div className='d-flex flex-column'>\n            <div className='fw-bolder d-flex align-items-center fs-5'>\n              <span className='badge badge-success fw-bolder fs-8 px-2 py-1 ms-2'> {user.role}</span>\n            </div>\n            <a href='#' className='fw-bold text-muted text-hover-primary fs-7'>\n              {user.username}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className='separator my-2'></div>\n      <div className='menu-item px-5'>\n        <a href='#' className='menu-link px-5'>\n         Nạp tiền\n        </a>\n      </div>\n      <div className='separator my-2'></div>\n      {/*<div className='menu-item px-5 my-1'>\n        <Link to='/crafted/account/settings' className='menu-link px-5'>\n        Cài đặt tài khoản\n        </Link>\n        </div>*/}\n      <div className='menu-item px-5'>\n        <a onClick={logout} className='menu-link px-5'>\n          Đăng xuất\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport {HeaderUserMenu}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\search\\Search.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\chat\\ChatInner.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\portal\\Portal.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx",["2322","2323","2324","2325","2326","2327","2328","2329"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\n\n\n\ntype Props = {\n    item: AccountModel\n}\nconst EditModal: React.FC<Props> = ({ item }) => {\n    console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const API_URL = process.env.REACT_APP_API_URL\n    const [vpsoption, setvpsoption] = useState('Buffh')\n    const [vpsreset, setvpsreset] = useState(0)\n    const [changefinger, setchangefinger] = useState(item.changefinger)\n    const [threads, setthreads] = useState(item.threads)\n    async function resetrunningacc(vps:string) {\n        let  requestUrl = API_URL+'vps/resetrunningaccbyvps?vps='+vps;\n        const response = await fetch(requestUrl, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': '1',\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        });\n        const responseJson = await response.json();\n        const {status} = responseJson;\n        return status\n    }\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n    const updateUser = () => {\n        if(vpsreset==2){\n            resetrunningacc(item.vps.trim())\n        }\n        dispatch(actions.requestUpdate({\n            ...item,\n            vpsoption:vpsoption,\n            threads:threads,\n            vpsreset:vpsreset,\n            changefinger:changefinger\n        }))\n    }\n    const handleChange = (e:any) => {\n        setthreads(parseInt(e.target.value))\n    }\n\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update cho VPS IP:  {item?.vps}</h3>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Nhập số luồng</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={threads} onChange={handleChange} type=\"number\" className=\"form-control\" placeholder=\"Nhập số point cho user\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsoption(e.target.value)}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsoption}\n                        >\n                            <option key={1} value={'Buffh'}>\n                                {\"Buffh\"}\n                            </option>\n                            <option key={2} value={'Test1'}>\n                                {\"Test1-Vt-Off-Seach\"}\n                            </option>\n                            <option key={3} value={'Test2'}>\n                                {\"Test2-Vt-Off-Direct\"}\n                            </option>\n                            <option key={4} value={'Test3'}>\n                                {\"Test3-Vt-On-Seach\"}\n                            </option>\n                            <option key={5} value={'Test4'}>\n                                {\"Test4-Vt-On-Direct\"}\n                            </option>\n                            <option key={6} value={'Test5'}>\n                                {\"Test5-Hc-Off-Seach\"}\n                            </option>\n                            <option key={7} value={'Test6'}>\n                                {\"Test6-Hc-Off-Direct\"}\n                            </option>\n                            <option key={8} value={'Test7'}>\n                                {\"Test7-Hc-On-5p\"}\n                            </option>\n                            <option key={9} value={'Test8'}>\n                                {\"Test8-Vt-Gmail6-Off-Bas2\"}\n                            </option>\n                            <option key={10} value={'Test9'}>\n                                {\"Test9-Vt-Gmail6-Off-Bas1\"}\n                            </option>\n                            <option key={11} value={'Test10'}>\n                                {\"Test10-Vt-Gmail2-On-Bas2\"}\n                            </option>\n                            <option key={12} value={'Test11'}>\n                                {\"Test11-Vt-Gmail2-On-Bas1\"}\n                            </option>\n                            <option key={13} value={'Test12'}>\n                                {\"Test12-Vt-Domain2-On-Bas2\"}\n                            </option>\n                            <option key={14} value={'Test13'}>\n                                {\"Test13-Vt-Domain2-On-Bas1\"}\n                            </option>\n                            <option key={0} value={'Pending'}>\n                                {\"Pending\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsreset}\n                        >\n                            <option key={0} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Restart\"}\n                            </option>\n                            <option key={2} value={2}>\n                                {\"Restart & DelAcc\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có đổi finger?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setchangefinger(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={changefinger}\n                        >\n                            <option key={0} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Có\"}\n                            </option>\n                        </Input>\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default EditModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx",["2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340"],"import React from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport {ComputerModel, ProxyModel} from 'app/modules/history/models/Account'\nimport {resetComputer} from 'app/modules/history/redux/AccountCRUD'\nimport moment from 'moment'\nimport {round} from \"@popperjs/core/lib/utils/math\";\nimport {actions} from \"../../../orderdone\";\ntype Props = {\n    item: ProxyModel,\n    index: number\n}\n\nconst ComputerItem: React.FC<Props> = ({ item, index }) => {\n\n    const clickDeleteHandler= async()=>{\n        if (window.confirm(\"bạn có chắc chắn muốn reset luồng trên VPS này\") == true) {\n            const res:any = await resetComputer(item.ipv4)\n            //dispatch(actions.deleteOrderRequest(item.channel_id))\n        }\n    }\n\n    return (\n        <tr style={{margin:100}}>\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span className='text-muted me-2 fs-7 fw-bold'>{index + 1}</span>\n                </div>\n            </td>\n            <td>\n                <span style={{fontSize:11,backgroundColor:\"#03d96e\",color:\"white\",}} className='badge badge-danger'>\n                    {item.ipv4}\n                </span>\n            </td>\n            <td>\n                <span style={{fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\",}} className='badge badge-danger'>\n                    {item.totalport}\n                </span>\n            </td>\n            <td>\n                <span style={{fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\",}} className='badge badge-danger'>\n                    {item.timecheck==0?'-':round((Date.now()-item.timecheck)/1000/60)}m\n                </span>\n            </td>\n            <td>\n                <span style={{fontSize:11,backgroundColor:item.state==1?\"#03d96e\":\"#e57624\",color:\"white\",}} className='badge badge-danger'>\n                    {item.state==0?'Die':'Live'}\n                </span>\n            </td>\n            <td>\n                <span style={{fontSize:11,backgroundColor:\"#b92e23\",margin:5,color:\"white\",}} className='badge badge-danger'>\n                    {item.geo.indexOf('us')>=0?'US':'VN'}\n                </span>\n                <span style={{fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\",}} className='badge badge-danger'>\n                    {item.geo}\n                </span>\n            </td>\n        </tr>\n    )\n}\n\nexport default ComputerItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx",["2341","2342","2343","2344","2345","2346","2347","2348","2349","2350"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orders/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\n\n\ntype Props = {\n    item: OrderModel\n\n}\n\nconst EditModal: React.FC<Props> = ({ item}) => {\n\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n\n\n    const dispatch = useDispatch()\n    const [max_thread, setMax_thread] = useState(item.max_threads)\n    const [view_percent,setView_percent]=useState(item.view_percent)\n    const [home_rate,setHome_rate]=useState(0)\n    const [search_rate,setSearch_rate]=useState(80)\n    const [suggest_rate,setSuggest_rate]=useState(0)\n    const [direct_rate,setDirect_rate]=useState(20)\n    const [enabled,setEnabled]=useState(item.enabled)\n    const [like_rate,setLike_rate]=useState(25)\n    const [comment_rate,setComment_rate]=useState(25)\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n\n    const submit = () => {\n\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(like_rate>100||like_rate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>1000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n\n        dispatch(actions.requestUpdate({\n            ...item,\n            home_rate,\n            direct_rate,\n            search_rate,\n            enabled,\n            max_thread,\n            view_percent,\n            suggest_rate\n        }))\n     \n    }\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ cho {item.channel_title}</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt danh sách đơn</p>\n                    <Form>\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={home_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={search_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggest_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={direct_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={like_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={comment_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng max\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={max_thread}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   Time Buff(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={view_percent}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1-Vt-Off-Seach\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2-Vt-Off-Direct\"}\n                                </option>\n                                <option key={4} value={4}>\n                                    {\"Test3-Vt-On-Seach\"}\n                                </option>\n                                <option key={5} value={5}>\n                                    {\"Test4-Vt-On-Direct\"}\n                                </option>\n                                <option key={6} value={6}>\n                                    {\"Test5-Hc-Off-Seach\"}\n                                </option>\n                                <option key={7} value={7}>\n                                    {\"Test6-Hc-Off-Direct\"}\n                                </option>\n                                <option key={8} value={8}>\n                                    {\"Test7-Hc-On-5p\"}\n                                </option>\n                                <option key={9} value={9}>\n                                    {\"Test8-Hc-On-finger\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button  type=\"button\"  style={{color:'white',backgroundColor:\"#26695c\"}}   onClick={submit} className=\"btn\">Lưu</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default EditModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx",["2351","2352","2353"],"/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react'\nimport { useIntl } from 'react-intl'\nimport { KTSVG } from '../../../helpers'\nimport { AsideMenuItemWithSub } from './AsideMenuItemWithSub'\nimport { AsideMenuItem } from './AsideMenuItem'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nexport function AsideMenuMain() {\n  const intl = useIntl()\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n  return (\n    <>\n      <AsideMenuItem\n        to='/dashboard'\n        icon='/media/icons/duotune/general/gen032.svg'\n        title='Thống kê'\n        fontIcon='bi-app-indicator'\n      />\n      {\n        role === \"ROLE_ADMIN\" && <AsideMenuItem\n          to='/crafted/vps'\n          title='Danh sách Vps'\n          icon='/media/icons/duotune/ecommerce/ecm009.svg'\n          fontIcon='bi-person'\n        />\n      }\n      {\n          role === \"ROLE_ADMIN\" && <AsideMenuItem\n              to='/crafted/user'\n              title='Danh sách User'\n              icon='/media/icons/duotune/communication/com006.svg'\n              fontIcon='bi-person'\n          />\n      }\n      {\n          role === \"ROLE_ADMIN\" && <AsideMenuItem\n              to='/crafted/proxy'\n              title='Danh sách Proxy'\n              icon='/media/icons/duotune/abstract/abs018.svg'\n              fontIcon='bi-person'\n          />\n      }\n      <AsideMenuItem\n            to='/crafted/orders'\n            title='Đơn chạy & Thêm đơn'\n            icon='/media/icons/duotune/graphs/gra008.svg'\n            fontIcon='bi-app-indicator'\n      />\n      <AsideMenuItem\n            to='/crafted/orderhistory'\n            title='Lịch sử đơn'\n            icon='/media/icons/duotune/graphs/gra011.svg'\n            fontIcon='bi-app-indicator'\n      />\n        <AsideMenuItem\n            to='/crafted/balance'\n            title='Biến động số dư'\n            icon='/media/icons/duotune/finance/fin002.svg'\n            fontIcon='bi-app-indicator'\n        />\n        {\n            role === \"ROLE_ADMIN\" && <AsideMenuItem\n                to='/crafted/setting'\n                title='Cài đặt hệ thống'\n                icon='/media/icons/duotune/coding/cod001.svg'\n                fontIcon='bi-person'\n            />\n        }\n    </>\n  )\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\StaticList.tsx",["2354","2355","2356"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\nimport {ChannelStaticModel, HistoryModel} from 'app/modules/history/models/Account'\nimport ChannelStaticItem from './components/ChannelStaticItem'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { actions } from './redux/AccountRedux'\nimport { RootState } from 'setup'\nimport HistoryItem from \"./components/HistoryItem\";\ntype Props = {\n  className: string,\n}\n\nconst StaticList: React.FC<Props> = ({ className }) => {\n  const dispatch = useDispatch()\n  function format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n  }\n  const API_URL = process.env.REACT_APP_API_URL\n  const [loading, setLoading] = useState(true)\n  let [useEff, setuseEff] = useState(0)\n  const [totaltimeorder, setTotalTimeOrder] = useState(0)\n  const [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  const statics:HistoryModel[] = useSelector<RootState>(({ histories }) => histories.statics, shallowEqual) as HistoryModel[] || []\n\n  async function getcounttimeorder(){\n    let requestUrl=\"\"\n    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n      requestUrl = API_URL+'videobuffh/getcounttimebufforder';\n    }else{\n      requestUrl = API_URL+'videobuffh/getcounttimebufforder?user='+user;\n    }\n\n    const response= await fetch(requestUrl,{\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson= await  response.json();\n    const {totaltimeorder}=responseJson;\n    setTotalTimeOrder(totaltimeorder);\n  }\n\n  async function getcounttimebuffedorder(){\n    let requestUrl=\"\"\n    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n      requestUrl = API_URL+'videobuffh/getcounttimebuffedorder';\n    }else{\n      requestUrl = API_URL+'videobuffh/getcounttimebuffedorder?user='+user;\n    }\n    const response= await fetch(requestUrl,{\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson= await  response.json();\n    const {totaltimebuffedorder}=responseJson;\n    setTotalTimeBuffedOrder(totaltimebuffedorder);\n  }\nasync function getbyday(){\n  if(role.indexOf(\"ROLE_ADMIN\")>=0){\n    await dispatch(actions.requestStatics(''))\n  }else{\n    await dispatch(actions.requestStatics(user))\n  }\n}\n  useEffect(() => {\n    setLoading(true)\n    useEff=useEff+1\n    setuseEff(useEff)\n    if(useEff<=1){\n      getbyday()\n      getcounttimebuffedorder();\n      getcounttimeorder();\n    }\n    if(statics.length>0){\n      setLoading(false)\n    }\n  }, [statics])\n\n  return (\n    <div className={`card ${className}`}>\n      {/* begin::Header */}\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-8 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Thống kê</span>\n              <p className=\"fw-bold c-order__list\">\n                <span style={{fontSize:12,marginTop:5}}>Tổng đặt: {format1((totaltimeorder==null?0:totaltimeorder)*(1+bonus/100))}h | Đã chạy: {format1(totaltimebuffedorder==null?0:totaltimebuffedorder)}h | Còn tồn: {format1(totaltimeorder*(1+bonus/100)-totaltimebuffedorder)}h</span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr>\n                <th className='min-w-30px' style={{fontWeight:\"bold\",fontSize:12}}>#</th>\n                <th className='min-w-100px'  style={{fontWeight:\"bold\",fontSize:12}}>Date</th>\n                <th className='min-w-100px'  style={{fontWeight:\"bold\",fontSize:12}}>Time buff </th>\n                <th className='min-w-100px'  style={{fontWeight:\"bold\",fontSize:12}}>View buff </th>\n\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {\n                statics&&statics?.map((item: HistoryModel,index:number) => {\n                  return <HistoryItem key={+index} item={item} index={index}/>\n                })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n    </div>\n  )\n}\n\nexport { StaticList }\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx",["2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel,OrderModelChecked } from 'app/modules/accounts/models/Account'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\nimport {RootState} from \"../../../../../setup\";\nimport {Group, OrderModel} from \"../../../orders/models/Order\";\n\n\n\ntype Props = {\n    list_vps:OrderModelChecked[],\n    show: boolean\n    close: () => void\n}\nconst RestartMulti: React.FC<Props> = ({list_vps, show,close }) => {\n    //console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ accounts }) => accounts.adding, shallowEqual) as boolean || false\n    const accounts: AccountModel[] = useSelector<RootState>(({ accounts }) => accounts.accounts, shallowEqual) as AccountModel[] || []\n    const API_URL = process.env.REACT_APP_API_URL\n\n    const [vpsoption, setvpsoption] = useState('Pending')\n    const [threads, setthreads] = useState(0)\n    const [changefinger, setchangefinger] = useState(0)\n    const [vpsreset, setvpsreset] = useState(0)\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n    async function resetrunningacc(vps:string) {\n        let  requestUrl = API_URL+'vps/resetrunningaccbyvps?vps='+vps;\n        const response = await fetch(requestUrl, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': '1',\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        });\n        const responseJson = await response.json();\n        const {status} = responseJson;\n        return status\n    }\n    const submit = () => {\n        const arr:string[]=[]\n        accounts.forEach(item=>{\n            const myElem = list_vps.find(value => value.vps===item.vps)\n            if(myElem && item.checked){\n                arr.push(item.vps)\n            }\n        })\n        if(vpsreset==2){\n            for(var i=0;i<arr.length;i++){\n                resetrunningacc(arr[i].trim())\n            }\n        }\n        const vps=arr.join('\\n')\n\n        dispatch(actions.editRestartMultiOrderRequest({\n            vps,\n            vpsoption,\n            vpsreset,\n            threads,\n            changefinger\n        }))\n\n    }\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsreset}\n                        >\n                            <option key={1} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Restart\"}\n                            </option>\n                            <option key={1} value={2}>\n                                {\"Restart & DelAcc\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsoption(e.target.value)}\n                            className=\"form-control form-control-solid\"\n                            style={{fontWeight:'bold'}}\n                            type=\"select\"\n                            value={vpsoption}\n                        >\n                            <option key={1} value={'Buffh'}>\n                                {\"Buffh\"}\n                            </option>\n                            <option key={2} value={'Test1'}>\n                                {\"Test1-Vt-Off-Seach\"}\n                            </option>\n                            <option key={3} value={'Test2'}>\n                                {\"Test2-Vt-Off-Direct\"}\n                            </option>\n                            <option key={4} value={'Test3'}>\n                                {\"Test3-Vt-On-Seach\"}\n                            </option>\n                            <option key={5} value={'Test4'}>\n                                {\"Test4-Vt-On-Direct\"}\n                            </option>\n                            <option key={6} value={'Test5'}>\n                                {\"Test5-Hc-Off-Seach\"}\n                            </option>\n                            <option key={7} value={'Test6'}>\n                                {\"Test6-Hc-Off-Direct\"}\n                            </option>\n                            <option key={8} value={'Test7'}>\n                                {\"Test7-Hc-On-5p\"}\n                            </option>\n                            <option key={9} value={'Test8'}>\n                                {\"Test8-Vt-Gmail6-Off-Bas2\"}\n                            </option>\n                            <option key={10} value={'Test9'}>\n                                {\"Test9-Vt-Gmail6-Off-Bas1\"}\n                            </option>\n                            <option key={11} value={'Test10'}>\n                                {\"Test10-Vt-Gmail2-On-Bas2\"}\n                            </option>\n                            <option key={12} value={'Test11'}>\n                                {\"Test11-Vt-Gmail2-On-Bas1\"}\n                            </option>\n                            <option key={13} value={'Test12'}>\n                                {\"Test12-Vt-Domain2-On-Bas2\"}\n                            </option>\n                            <option key={14} value={'Test13'}>\n                                {\"Test13-Vt-Domain2-On-Bas1\"}\n                            </option>\n                            <option key={0} value={'Pending'}>\n                                {\"Pending\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có đổi finger?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setchangefinger(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={changefinger}\n                        >\n                            <option key={0} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Có\"}\n                            </option>\n                        </Input>\n                    </div>\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" disabled={adding} style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn btn-primary\">Lưu thông tin mới</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default RestartMulti","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item7.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item6.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item8.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item5.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item3.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item2.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item4.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item1.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx",["2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Modal,\n  Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\ntype Props = {\n  show: boolean\n  close: () => void\n}\n\nconst AddModal: React.FC<Props> = ({ show, close }) => {\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n  const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n  const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n\n\n  const dispatch = useDispatch()\n  const [max_thread, setMax_thread] = useState(100)\n  const [channel_id, setChannel_id] = useState(\"\")\n  //const [list_video, setList_video] = useState(\"\")\n  //\n  const [view_need, setView_need] = useState(1000)\n  const [premium_rate,setPremium_rate]=useState(5)\n  const [view_percent,setView_percent]=useState(4000)\n  //\n  const [home_rate,setHome_rate]=useState(0)\n  const [search_rate,setSearch_rate]=useState(80)\n  const [suggest_rate,setSuggest_rate]=useState(0)\n  const [direct_rate,setDirect_rate]=useState(20)\n  //\n  const [like_rate,setLike_rate]=useState(25)\n  const [comment_rate,setComment_rate]=useState(25)\n  const [mobile_rate,setMobile_rate]=useState(0)\n  //\n  const [note, setNote] = useState(\"\")\n  const [keyword, setKeyword] = useState(\"\")\n  const [comment_list, setComment_list] = useState(\"\")\n  const [group_id, setGroup] = useState(0)\n  //\n  const [enabled,setEnabled]=useState(1)\n\n\n  const dismissModal = () => {\n    dispatch(actions.clearcurrentOrder())\n  }\n\n  const submit = () => {\n\n    if (channel_id.trim() === \"\") {\n      alert(\"Điền list kênh cần chạy\")\n      return\n    }\n    if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n      alert(\"Tổng nguồn view không đúng\")\n      return\n    }\n\n    if(view_percent>10000000||view_percent<0){\n      alert(\"phần trăm xem video không đúng\")\n      return\n    }\n    dispatch(actions.addOrderRequest({\n      channel_id,\n      home_rate,\n      //note: string,\n      direct_rate,\n      //view_need: number,\n      //comment_rate: number,\n      //mobile_rate: number,\n      search_rate,\n      enabled,\n      max_thread,\n      view_percent,\n      //group_id: number,\n      //like_rate: number,\n      //comment_list: string,\n      suggest_rate,\n      //premium_rate: number,\n    }))\n\n  }\n\n  useEffect(() => {\n    if (!adding) {\n      close()\n    }\n  }, [adding])\n\n  return (\n      <Modal isOpen={show}\n             modalTransition={{ timeout: 500 }}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n              <span className=\"svg-icon svg-icon-2x\"></span>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <p>Cài đặt đơn</p>\n            <Form>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Danh sách id kênh cần chạy sub\n                </Label>\n                <Input\n                    id=\"list_id\"\n                    name=\"list_id\"\n                    className=\"form-control form-control-solid\"\n                    placeholder={\"Id kênh\"}\n                    value={channel_id}\n                    type={\"textarea\"}\n                    onChange={(e) => setChannel_id(e.target.value)}\n                />\n              </FormGroup>\n              <p>Nguồn view tổng = 100%</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Home\n                  </Label>\n                  <Input\n                      id=\"home_rate\"\n                      name=\"home_rate\"\n                      value={home_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Search\n                  </Label>\n                  <Input\n                      id=\"search_rate\"\n                      name=\"search_rate\"\n                      value={search_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Suggest\n                  </Label>\n                  <Input\n                      id=\"suggest_rate\"\n                      name=\"suggest_rate\"\n                      value={suggest_rate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Direct\n                  </Label>\n                  <Input\n                      id=\"direct_rate\"\n                      name=\"direct_rate\"\n                      value={direct_rate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <p>Cài đặt tương tác</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ Like\n                  </Label>\n                  <Input\n                      id=\"like_rate\"\n                      name=\"like_rate\"\n                      value={like_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ comment\n                  </Label>\n                  <Input\n                      id=\"comment_rate\"\n                      name=\"comment_rate\"\n                      value={comment_rate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Luồng max\n                  </Label>\n                  <Input\n                      id=\"max_thread\"\n                      name=\"max_thread\"\n                      value={max_thread}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Time Buff(h)\n                  </Label>\n                  <Input\n                      id=\"mobile_rate\"\n                      name=\"mobile_rate\"\n                      value={view_percent}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 100\"\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Trạng thái\n                </Label>\n                <Input\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\n                    className=\"form-control form-control-solid\"\n                    type=\"select\"\n                    value={enabled}\n                >\n                  <option key={1} value={1}>\n                    {\"Chạy\"}\n                  </option>\n                  <option key={0} value={0}>\n                    {\"Ngừng\"}\n                  </option>\n                </Input>\n              </FormGroup>\n            </Form>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n          </div>\n        </div>\n      </Modal>\n  )\n}\n\nexport default AddModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx",["2392","2393","2394","2395","2396","2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orders/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\n\n\ntype Props = {\n    show: boolean\n    close: () => void\n}\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n\n    const dispatch = useDispatch()\n    const [max_thread, setMax_thread] = useState(100)\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(4000)\n    //\n    const [home_rate,setHome_rate]=useState(0)\n    const [search_rate,setSearch_rate]=useState(80)\n    const [suggest_rate,setSuggest_rate]=useState(0)\n    const [direct_rate,setDirect_rate]=useState(20)\n    //\n    const [like_rate,setLike_rate]=useState(25)\n    const [comment_rate,setComment_rate]=useState(25)\n    const [mobile_rate,setMobile_rate]=useState(0)\n    //\n    const [note, setNote] = useState(\"\")\n    const [keyword, setKeyword] = useState(\"\")\n    const [comment_list, setComment_list] = useState(\"\")\n    const [group_id, setGroup] = useState(0)\n    //\n    const [enabled,setEnabled]=useState(1)\n\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    \n    const submit = () => {\n        const arr:string[]=[]\n        orders.forEach(item=>{\n            if(item.checked==true)\n            arr.push(item.channel_id)\n        })\n        const channel_id=arr.join('\\n')\n        if (view_need % 100 !== 0 || view_need ==0) {\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\n            return\n        }\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(like_rate>100||like_rate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>10000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        if(comment_rate>100||comment_rate<0){\n            alert(\"Tỉ lệ comment không đúng\")\n            return\n        }\n\n        dispatch(actions.editMultiOrderRequest({\n            channel_id,\n            home_rate,\n            direct_rate,\n            search_rate,\n            enabled,\n            max_thread,\n            view_percent,\n            suggest_rate\n        }))\n     \n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt danh sách đơn</p>\n                    <Form>\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={home_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={search_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggest_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={direct_rate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ Like \n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={like_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Tỉ lệ comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={comment_rate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng max\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={max_thread}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   Time Buff(%)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={view_percent}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setView_percent(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1-Vt-Off-Seach\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2-Vt-Off-Direct\"}\n                                </option>\n                                <option key={4} value={4}>\n                                    {\"Test3-Vt-On-Seach\"}\n                                </option>\n                                <option key={5} value={5}>\n                                    {\"Test4-Vt-On-Direct\"}\n                                </option>\n                                <option key={6} value={6}>\n                                    {\"Test5-Hc-Off-Seach\"}\n                                </option>\n                                <option key={7} value={7}>\n                                    {\"Test6-Hc-Off-Direct\"}\n                                </option>\n                                <option key={8} value={8}>\n                                    {\"Test7-Hc-On-5p\"}\n                                </option>\n                                <option key={9} value={9}>\n                                    {\"Test8-Hc-On-finger\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} style={{color:'white',backgroundColor:\"#26695c\"}}  type=\"button\" onClick={submit} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default EditMulti","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx",["2416","2417","2418","2419","2420","2421","2422","2423","2424","2425","2426","2427"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { OrderModel } from '../../models/Order'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport { getFunciton } from 'utils/ApiHelper'\ntype Props = {\n    item: OrderModel,\n    showEdit: boolean,\n    index: number,\n    //increase: number\n}\n\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\n    const [running, setRunning] = useState(0)\n    const [success, setSuccess] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n\n\n\n    const dispatch = useDispatch()\n    const clickUpdateHandler = () => {\n        dispatch(actions.showcurrentOrder(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn của kênh: \"+item.channel_title!) == true) {\n            dispatch(actions.deleteOrderRequest(item.channel_id))\n        }\n    }\n\n\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\n    //const increase = item.current_view - item.start_view\n    return (\n        <tr>\n            <td className='w-25px'>\n                <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt)=>{\n                            dispatch(actions.checkedChange({\n                                channel_id:item.channel_id,\n                                checked:evt.target.checked\n                            }))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value={1}\n                        checked={item.checked}\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                    />\n                </div>\n            </td>\n            <td>\n                <span style={{fontWeight:'bold',fontSize:11}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n            <td>\n\n                    <a style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#26695c\"}} href={'https://www.youtube.com/channel/' + item.channel_id} className='badge badge-danger'>\n                        {item.channel_title}\n                    </a>\n                    <span style={{ color:'black',margin:5,fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-warning'>{Math.round(Number(item.view_need==null?0:item.view_need)/3600)+\"/\"+item.view_percent}</span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-warning'>{Math.round(Number(item.like_rate==null?0:item.like_rate)/3600)}</span>\n                    <span style={{ color:'black',margin:5,fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-dark'>{item.view_total==null?0:item.view_total}</span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-dark'>{item.comment_rate==null?0:item.comment_rate}</span>\n                    <span style={{ color:'black',margin:5,fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-success'>{Math.round((Math.round(Number(item.view_need==null?0:item.view_need)/3600)/item.view_percent*100))+'%'}</span>\n            </td>\n            <td className='text-dark fw-bolder text-hover-primary text-sm'>\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\n                    {\"Đang lấy dữ liệu\"}\n                </span> :\n                    <span style={{color:'black',fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-dark'>{item.total==1?0:item.total}/{item.max_threads} running</span>\n                }\n            </td>\n            <td>\n                {\n                    item.enabled === 1 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-success'>Đang chạy</span> :item.enabled === 2 ?\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-warning'>Test 1</span>:item.enabled === 3 ?\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>Test 2</span>:\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#af171b\"}} className='badge badge-danger'>Ngừng</span>\n\n                }\n                {\n                    <span style={{color:'black',fontSize:11,margin:5,backgroundColor:\"#c0e1ce\"}} className='badge badge-primary'>{new Date(item.insert_date).toLocaleDateString('vn-VN')}</span>\n                }\n\n            </td>\n            {\n                 <td >\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </a>\n                    <a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\n                    </a>\n                </td>\n            }\n\n        </tr>\n    )\n}\n\nexport default OrderItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx",["2428","2429","2430","2431","2432","2433","2434","2435","2436","2437","2438","2439","2440","2441","2442","2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { addorderv2 } from '../../redux/OrdersCRUD'\nimport {\n    Modal,\n    Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport {Group, OrderModel} from '../../models/Order'\nimport OrderItem from \"../../components/OrderItem\";\nimport AddModal from \"../AddModal\";\nimport {string} from \"yup\";\nimport {register} from \"../../../auth/redux/AuthCRUD\";\nimport * as auth from \"../../../auth/redux/AuthRedux\";\nimport {randomInt} from \"crypto\";\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\ntype Props = {\n    show: boolean\n    close: () => void\n}\n\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    const [status,setStatus]=useState(\"Fail\")\n    const [list_order,setList_Todo]=useState([{\n        id:\"0121222222\",\n        channel_id:\"\",\n        state:\"\"\n    },])\n\n    const dispatch = useDispatch()\n    const [max_thread, setMax_thread] = useState(100)\n    const [channel_id, setChannel_id] = useState(\"\")\n    const [list_video, setList_video] = useState(\"\")\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(4000)\n    //\n    const [home_rate,setHome_rate]=useState(0)\n    const [search_rate,setSearch_rate]=useState(80)\n    const [suggest_rate,setSuggest_rate]=useState(0)\n    const [direct_rate,setDirect_rate]=useState(20)\n    //\n    const [like_rate,setLike_rate]=useState(25)\n    const [comment_rate,setComment_rate]=useState(25)\n    const [mobile_rate,setMobile_rate]=useState(0)\n    //\n    const [note, setNote] = useState(\"\")\n    const [keyword, setKeyword] = useState(\"\")\n    const [comment_list, setComment_list] = useState(\"\")\n    const [group_id, setGroup] = useState(0)\n    //\n    const [enabled,setEnabled]=useState(1)\n    const [showorder,setShowOrder]=useState(true)\n    const [loading, setLoading] = useState(false)\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n\n    const ordercheck = () => {\n        setShowOrder(false)\n    }\n\n    const submit = () => {\n        //setShowOrder(false)\n        if (channel_id.trim() === \"\") {\n            alert(\"Điền id kênh cần chạy\")\n            return\n        }\n        if(home_rate+search_rate+suggest_rate+direct_rate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n\n        if(view_percent>10000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        ordercheck()\n        const videoidlist=channel_id.split('\\n')\n        for (var i = 0; i < videoidlist.length; i++) {\n            let video=videoidlist[i]\n            setTimeout(() => {\n                addorderv2(video,list_video,home_rate,direct_rate\n                    ,search_rate,enabled,max_thread,suggest_rate,view_percent)\n                    .then((data:any) => {\n                        setLoading(true)\n                        if(data.data.channel==\"true\"){\n                            let orderitem={\n                                id:randomString(10),\n                                channel_id:video,\n                                state:\"done\"\n                            }\n                            setList_Todo([...list_order,orderitem])\n                            list_order.push(orderitem)\n                        }else{\n                            list_order.push({\n                                id:randomString(10),\n                                channel_id:video,\n                                state: 'error',\n                            })\n                        }\n\n                    })\n                    .catch(() => {\n                        list_order.push({\n                            id:randomString(10),\n                            channel_id:video,\n                            state: 'error',\n                        })\n\n                    })\n            }, 1000)\n            continue\n        }\n    }\n\n    useEffect(() => {\n        if (!adding) {\n\n        }\n    },[show] )\n\n    return (\n        <Modal isOpen={show}\n           modalTransition={{timeout: 500}}>\n        <div className=\"modal-content\">\n            <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"none\"}}>\n                <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách id channel</h5>\n                <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                    <span className=\"svg-icon svg-icon-2x\"></span>\n                </div>\n            </div>\n            <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\n                <p>Cài đặt đơn</p>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\" className=\"required form-label\">\n                            Danh sách id kênh cần chạy sub\n                        </Label>\n                        <Input\n                            id=\"list_id\"\n                            name=\"list_id\"\n                            className=\"form-control form-control-solid\"\n                            placeholder={\"Id kênh\"}\n                            value={channel_id}\n                            type={\"textarea\"}\n                            onChange={(e) => setChannel_id(e.target.value)}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\" className=\"required form-label\">\n                            Danh sách video của kênh( Để trống video sẽ được thêm tự động )\n                        </Label>\n                        <Input\n                            id=\"list_id\"\n                            name=\"list_id\"\n                            className=\"form-control form-control-solid\"\n                            placeholder={\"video id cách nhau dấu ,\"}\n                            value={list_video}\n                            type={\"textarea\"}\n                            onChange={(e) => setList_video(e.target.value)}\n                        />\n                    </FormGroup>\n\n                    <p>Nguồn view tổng = 100%</p>\n                    <div className='flex flex-row justify-between space-x-3'>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Home\n                            </Label>\n                            <Input\n                                id=\"home_rate\"\n                                name=\"home_rate\"\n                                value={home_rate}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Search\n                            </Label>\n                            <Input\n                                id=\"search_rate\"\n                                name=\"search_rate\"\n                                value={search_rate}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Suggest\n                            </Label>\n                            <Input\n                                id=\"suggest_rate\"\n                                name=\"suggest_rate\"\n                                value={suggest_rate}\n                                disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Direct\n                            </Label>\n                            <Input\n                                id=\"direct_rate\"\n                                name=\"direct_rate\"\n                                value={direct_rate}\n                                disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                    </div>\n                    <p>Cài đặt tương tác</p>\n                    <div className='flex flex-row justify-between space-x-3'>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Tỉ lệ Like\n                            </Label>\n                            <Input\n                                id=\"like_rate\"\n                                name=\"like_rate\"\n                                value={like_rate}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Tỉ lệ comment\n                            </Label>\n                            <Input\n                                id=\"comment_rate\"\n                                name=\"comment_rate\"\n                                value={comment_rate}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Luồng max\n                            </Label>\n                            <Input\n                                id=\"max_thread\"\n                                name=\"max_thread\"\n                                value={max_thread}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 1000\"\n                                onChange={(e) => setMax_thread(parseInt(e.target.value))}\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Time Buff(h)\n                            </Label>\n                            <Input\n                                id=\"mobile_rate\"\n                                name=\"mobile_rate\"\n                                value={view_percent}\n                                className=\"form-control form-control-solid\"\n                                placeholder=\"ví dụ : 100\"\n                                onChange={(e) => setView_percent(parseInt(e.target.value))}\n                                type=\"number\"\n                            />\n                        </FormGroup>\n                    </div>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\" className=\"required form-label\">\n                            Trạng thái\n                        </Label>\n                        <Input\n                            onChange={(e) => setEnabled(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            value={enabled}\n                        >\n                            <option key={1} value={1}>\n                                {\"Chạy\"}\n                            </option>\n                            <option key={2} value={2}>\n                                {\"Test1-Vt-Off-Seach\"}\n                            </option>\n                            <option key={3} value={3}>\n                                {\"Test2-Vt-Off-Direct\"}\n                            </option>\n                            <option key={4} value={4}>\n                                {\"Test3-Vt-On-Seach\"}\n                            </option>\n                            <option key={5} value={5}>\n                                {\"Test4-Vt-On-Direct\"}\n                            </option>\n                            <option key={6} value={6}>\n                                {\"Test5-Hc-Off-Seach\"}\n                            </option>\n                            <option key={7} value={7}>\n                                {\"Test6-Hc-Off-Direct\"}\n                            </option>\n                            <option key={8} value={8}>\n                                {\"Test7-Hc-On-5p\"}\n                            </option>\n                            <option key={9} value={9}>\n                                {\"Test8-Hc-On-finger\"}\n                            </option>\n                            <option key={0} value={0}>\n                                {\"Ngừng\"}\n                            </option>\n                        </Input>\n                    </FormGroup>\n                </Form>\n            </div>\n            <div className=\"modal-body\">\n                <div className=\"card-body\" style={{width: \"100%\"}}>\n                    {/* begin::Table container */}\n\n                   {\n                        list_order.map((item, index) => {\n                            console.log(list_order)\n                            if (item.channel_id.length >0) return (\n                                <ul className=\"list-group list-group-flush\" id={item.channel_id} key={item.channel_id}>\n                                    <li className=\"list-group-item\" style={{minHeight: 10}}>\n                                        <div className=\"row\">\n                                            <div className=\"col-1 d-flex align-items-center\">{index}.</div>\n                                            <div className=\"col-5 d-flex align-items-center\">{item.channel_id}</div>\n                                            <div className=\"col-6 d-flex justify-content-end align-items-center\">\n                                                <div className=\"d-flex flex-row align-items-center\">\n                                                    <span className='symbol-label'>\n                                                              <img\n\n                                                                  src={toAbsoluteUrl(item.state.indexOf('done')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\n                                                                  className='svg-icon-1'\n                                                                  alt=''\n                                                              />\n                                                            </span>\n\n                                                    <button type=\"button\"\n                                                            style={{display: item.state == \"done\" ? \"none\" : \"true\"}}\n                                                            className=\"ant-btn ant-btn-link\">\n                                                        <span>Thử lại</span>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            )\n                        })\n                    }\n                    {/* end::Table container */}\n                </div>\n            </div>\n            <div className=\"modal-footer\">\n                <button type=\"button\" onClick={close} className=\"btn btn-light\">Thoát</button>\n                <button disabled={adding} style={{color: 'white', backgroundColor: \"#26695c\"}} id='hide' type=\"button\"\n                        onClick={submit} className=\"btn \">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n            </div>\n        </div>\n    </Modal>\n    )\n}\n\nexport default AddManualModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx",["2463","2464","2465","2466","2467","2468","2469","2470","2471","2472","2473"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel,OrderModelChecked } from 'app/modules/accounts/models/Account'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\nimport {RootState} from \"../../../../../setup\";\n\n\n\ntype Props = {\n    list_vps:OrderModelChecked[],\n    show: boolean\n    close: () => void\n}\nconst EditMulti: React.FC<Props> = ({list_vps, show,close }) => {\n    //console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ accounts }) => accounts.adding, shallowEqual) as boolean || false\n    const accounts: AccountModel[] = useSelector<RootState>(({ accounts }) => accounts.accounts, shallowEqual) as AccountModel[] || []\n    const API_URL = process.env.REACT_APP_API_URL\n\n    const [vpsoption, setvpsoption] = useState('Pending')\n    const [threads, setthreads] = useState(0)\n    const [vpsreset, setvpsreset] = useState(0)\n    const [changefinger, setchangefinger] = useState(0)\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n    async function resetrunningacc(vps:string) {\n        let  requestUrl = API_URL+'vps/resetrunningaccbyvps?vps='+vps;\n        const response = await fetch(requestUrl, {\n            method: 'get',\n            headers: new Headers({\n                'Authorization': '1',\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        });\n        const responseJson = await response.json();\n        const {status} = responseJson;\n        return status\n    }\n    const submit = () => {\n        const arr:string[]=[]\n        accounts.forEach(item=>{\n            const myElem = list_vps.find(value => value.vps===item.vps)\n            if(myElem && item.checked){\n                arr.push(item.vps)\n            }\n        })\n        if(vpsreset==2){\n            for(var i=0;i<arr.length;i++){\n                resetrunningacc(arr[i].trim())\n            }\n        }\n        const vps=arr.join('\\n')\n\n        dispatch(actions.editMultiOrderRequest({\n            vps,\n            vpsoption,\n            vpsreset,\n            threads,\n            changefinger\n        }))\n\n    }\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 style={{fontWeight:'bold'}} className=\"modal-title\">Update VPS</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Nhập số luồng</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}}\n                               onChange={(e) => setthreads(parseInt(e.target.value))}\n                               value={threads}  type=\"number\"\n                               className=\"form-control\"\n                               placeholder=\"Nhập số point cho user\"\n                               aria-label=\"Recipient's username\"\n                               aria-describedby=\"basic-addon2\" />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">thread</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Chọn Option</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsoption(e.target.value)}\n                            className=\"form-control form-control-solid\"\n                            style={{fontWeight:'bold'}}\n                            type=\"select\"\n                            value={vpsoption}\n                        >\n                            <option key={1} value={'Buffh'}>\n                                {\"Buffh\"}\n                            </option>\n                            <option key={2} value={'Test1'}>\n                                {\"Test1-Vt-Off-Seach\"}\n                            </option>\n                            <option key={3} value={'Test2'}>\n                                {\"Test2-Vt-Off-Direct\"}\n                            </option>\n                            <option key={4} value={'Test3'}>\n                                {\"Test3-Vt-On-Seach\"}\n                            </option>\n                            <option key={5} value={'Test4'}>\n                                {\"Test4-Vt-On-Direct\"}\n                            </option>\n                            <option key={6} value={'Test5'}>\n                                {\"Test5-Hc-Off-Seach\"}\n                            </option>\n                            <option key={7} value={'Test6'}>\n                                {\"Test6-Hc-Off-Direct\"}\n                            </option>\n                            <option key={8} value={'Test7'}>\n                                {\"Test7-Hc-On-5p\"}\n                            </option>\n                            <option key={9} value={'Test8'}>\n                                {\"Test8-Vt-Gmail6-Off-Bas2\"}\n                            </option>\n                            <option key={10} value={'Test9'}>\n                                {\"Test9-Vt-Gmail6-Off-Bas1\"}\n                            </option>\n                            <option key={11} value={'Test10'}>\n                                {\"Test10-Vt-Gmail2-On-Bas2\"}\n                            </option>\n                            <option key={12} value={'Test11'}>\n                                {\"Test11-Vt-Gmail2-On-Bas1\"}\n                            </option>\n                            <option key={13} value={'Test12'}>\n                                {\"Test12-Vt-Domain2-On-Bas2\"}\n                            </option>\n                            <option key={14} value={'Test13'}>\n                                {\"Test13-Vt-Domain2-On-Bas1\"}\n                            </option>\n                            <option key={0} value={'Pending'}>\n                                {\"Pending\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có Restart VPS?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvpsreset(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vpsreset}\n                        >\n                            <option key={0} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Restart\"}\n                            </option>\n                            <option key={2} value={2}>\n                                {\"Restart & DelAcc\"}\n                            </option>\n                        </Input>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Có đổi finger?</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setchangefinger(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={changefinger}\n                        >\n                            <option key={0} value={0}>\n                                {\"Không\"}\n                            </option>\n                            <option key={1} value={1}>\n                                {\"Có\"}\n                            </option>\n                        </Input>\n                    </div>\n                </div>\n\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" disabled={adding}  style={{backgroundColor:\"#26695c\",color:\"white\"}} onClick={submit} className=\"btn\">Lưu thông tin mới</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default EditMulti","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx",["2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488","2489"],"import React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/accounts/models/Account'\nimport {useDispatch} from 'react-redux'\nimport {actions} from '../../redux/AccountRedux'\nimport moment from 'moment'\nimport {date} from \"yup\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n    item: AccountModel,\n    index:number\n}\n\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const clickHandler =()=>{\n        dispatch(actions.showCurrentAccount(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.vps!) == true) {\n            dispatch(actions.deleteVpsRequest(item.vps))\n        }\n    }\n    return (\n\n        <tr>\n            <td className='w-25px'>\n                <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt)=>{\n                            dispatch(actions.checkedChange({\n                                vps:item.vps,\n                                checked:evt.target.checked\n                            }))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value={1}\n                        checked={item.checked}\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                         />\n                </div>\n            </td>\n            <td className='w-25px'>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n\n            <td>\n                <div className='d-flex align-items-center'>\n                    <div className='d-flex justify-content-start flex-column'>\n                        <div  className='text-dark fw-bolder text-hover-primary fs-6'>\n                            {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length).length!=0&&<span style={{marginRight:2,backgroundColor:\"#26695c\"}} className='badge badge-dark'>\n                                <text style={{fontSize:11}}>\n                                {item.vps.substring(item.vps.lastIndexOf('-')+1,item.vps.length)}\n                                </text>\n                            </span>}\n                            <span style={{marginRight:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\n                                <text style={{fontSize:11,color:\"black\"}}>\n                                {item.vps.substring(0,item.vps.lastIndexOf('-'))}\n                                </text>\n                            </span>\n                            <span style={{marginRight:2,backgroundColor:round((Date.now()-item.timecheck)/1000/60)<10?\"#50CD89\":\"#e57624\"}} className='badge badge-danger'>\n                                <text style={{fontSize:11,color:\"white\"}}>\n                                    {round((Date.now()-item.timecheck)/1000/60)}{'m'}\n                                </text>\n                            </span>\n                        </div>\n\n                    </div>\n                </div>\n            </td>\n            <td>\n                <span className='badge badge-dark' style={{fontSize:11,marginRight:2, backgroundColor:item.vpsoption=='Buffh'?'#50CD89':item.vpsoption=='Pending'?'#9ca1a0':item.vpsoption=='Test1'?'#435e57':'#396977'}}>\n                    <text >\n                    {item.vpsoption==''?'Pending':item.vpsoption}\n                    </text>\n                </span>\n                <span style={{fontWeight:'bold',fontSize:11,backgroundColor:\"#c0e1ce\",color:\"black\"}} className='badge badge-dark'>\n\n                        <text >\n                              {item.threads==0?'0':+item.threads}|{item.acccount==0?'0':+item.acccount}\n                        </text>\n\n                </span>\n            </td>\n            <td style={{width:'250px'}} className='text-end'>\n                <div  className='d-flex flex-column w-100 me-2'>\n                    <div  className='d-flex flex-stack mb-2'>\n                        <span  style={{color:\"black\"}} className={parseInt(item.timegettask)>=30?'badge badge-warning':''} >{item.total} running | {item.timegettask==null?'':item.timegettask+\" minutes before\"} </span>\n                        {\n                            item.vpsreset!=0 && <span style={{fontWeight:'bold',fontSize:11,marginTop:2,backgroundColor:\"#e57624\"}} className='badge badge-danger'>\n\n                                <text >\n                                        Reset{item.vpsreset}\n                                </text>\n\n                </span>\n\n                        }{\n                        item.changefinger!=0 && <span style={{color:\"black\",fontWeight:'bold',fontSize:11,marginTop:2,backgroundColor:\"#c0e1ce\"}} className='badge badge-danger'>\n\n                                <text >\n                                       Change Finger\n                                </text>\n\n                </span>\n                    }\n                    </div>\n                    <div  className='progress h-6px w-300'>\n                        <div\n                            className='progress-bar bg-active-success'\n                            role='progressbar'\n                            style={{width:(item.total/(item.threads))*300,backgroundColor:\"#6da18a\"}}\n                        ></div>\n                    </div>\n                </div>\n            </td>\n            <td>\n                <div className='d-flex justify-content-end flex-shrink-0'>\n                    <button\n                        onClick={()=>clickHandler()}\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                    >\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </button>\n                    <button\n                        onClick={()=>clickDeleteHandler()}\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'>\n                        <KTSVG\n                            path='/media/icons/duotune/general/gen027.svg'\n                            className='svg-icon-3'\n                        />\n                    </button>\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default UserItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\RouterHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\AssetHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ChannelStaticItem\\index.tsx",["2490","2491","2492","2493","2494","2495"],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\components\\KTSVG.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersRedux.ts",["2496","2497","2498","2499","2500","2501"],"import { Action } from '@reduxjs/toolkit'\nimport { App } from 'app/App'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\nimport {\n  getListOrder,\n  getOrderFilter,\n  updateOrder,\n    updateThread,\n  addOrder,\n  addOrderManual,\n  deleteChannel,\n  addOrderMulti,\n  getOrderPercentFilter\n} from './OrdersCRUD'\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  ShowOrdersFilter:'[Orderdone] Filter',\n  ShowOrdersPercentFilter:'[Orderdone] Percent Filter',\n  RequestOrders: '[Orderdone] Requested',\n  OrdersLoadedSuccess: '[Orderdone] Loaded succcess',\n  OrdersLoadedFail: '[Orderdone] load fail',\n  AddOrderRequest: '[Orderdone] Add Order Request',\n  AddOrderManualRequest: '[Orderdone] Add Order Manual Request',\n  AddOrderSuccess: '[Orderdone] Add Order Success',\n  AddOrdersSuccess: '[Orderdone] Add Orders Success',\n  AddOrderFail: '[Orderdone] Add Order Fail',\n  ShowcurrentOrder: '[Orderdone] Show Order',\n  RequestUpdate: '[Orderdone] Requested Update',\n  RequestUpdateThread: '[Orderdone] Requested UpdateThread',\n  UpdateMultiOrderRequest: '[Orderdone] Update Multi Order Request',\n  UpdateMultiThreadRequest: '[Orderdone] Update Multi Thread Request',\n  UpdateSuccess: '[Orderdone] Update Success',\n  UpdateMultiSuccess: '[Orderdone] Update Multi Success',\n  UpdateFail: '[Orderdone] Update Fail',\n  ClearSelected: '[Orderdone] Clear selected account',\n  GroupLoadedRequest: '[Orderdone] Group Loaded Request',\n  GroupLoadedSuccess: '[Orderdone] Group Loaded Success',\n  GroupLoadedFail: '[Orderdone] Group Loaded Fail',\n  GroupAddRequest: '[Orderdone] GroupAddRequest',\n  GroupAddSuccess: '[Orderdone] Group Add Success',\n  GroupAddFail: '[Orderdone] Group Add Fail',\n  GroupDeleteRequest: '[Orderdone] Group Delete Request',\n  GroupDeleteSuccess: '[Orderdone] Group Delete Success',\n  SelectGroup: '[Orderdone] Select Group',\n  DeleteOrderRequest: '[Orderdone] Delete Order Request',\n  DeleteOrderSuccess: '[Orderdone] Delete Order Success',\n  CheckedChange: '[Orderdone] Checked Change',\n  CheckedAllChange: '[Orderdone] Checked All Change',\n}\n\nconst initialorderstate: Iorderstate = {\n  orders: [],\n  loading: false,\n  adding: false,\n  groups: [],\n  currentOrder: undefined,\n  currentGroup: undefined,\n  channel_prior: 0,\n  \n}\n\nexport interface Iorderstate {\n  orders: OrderModel[]\n  loading: boolean\n  adding: boolean\n  currentOrder?: OrderModel\n  groups: Group[]\n  currentGroup?: Group\n  channel_prior: number\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-orders', whitelist: [] },\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestOrders: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.ShowOrdersFilter: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.ShowOrdersPercentFilter: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n\n      case actionTypes.OrdersLoadedSuccess: {\n        return {\n          ...state,\n          orders: action.payload?.orders || [],\n          loading: false\n        }\n      }\n      case actionTypes.GroupLoadedSuccess: {\n        return {\n          ...state,\n          groups: action.payload?.groups\n        }\n      }\n      case actionTypes.SelectGroup: {\n        return {\n          ...state,\n          currentGroup: action.payload?.group\n        }\n      }\n      case actionTypes.GroupDeleteSuccess: {\n        return {\n          ...state,\n          currentGroup: undefined,\n          groups: state.groups.filter((item: Group) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.DeleteOrderSuccess: {\n        return {\n          ...state,\n          orders: state.orders.filter((item: OrderModel) => {\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.OrdersLoadedFail: {\n        return {\n          ...state,\n          orders: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.RequestUpdateThread: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateMultiThreadRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          if (item.videoid === action.payload?.videobuff?.videoid) {\n            return action.payload?.videobuff\n          } else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: true,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          const findItem = action.payload?.videobuff.find((_item:OrderModel)=>{\n            if(_item.videoid===item.videoid){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          adding: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.AddOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.AddOrderManualRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.GroupAddSuccess: {\n        return {\n          ...state,\n          groups: state.groups.concat(action.payload?.group)\n        }\n      }\n      case actionTypes.AddOrderSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.order)\n        }\n      }\n      case actionTypes.AddOrdersSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.orders)\n        }\n      }\n\n      case actionTypes.AddOrderFail: {\n        return {\n          ...state,\n          adding: false,\n          message: action.payload?.message\n        }\n      }\n      case actionTypes.ShowcurrentOrder: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            if(item.videoid===action.payload?.data?.videoid){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      \n      \n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\n  requestUpdate: (videobuff: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videobuff } }),\n  requestUpdateThread: (videobuff: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videobuff } }),\n  updateSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videobuff } }),\n  updateMultiSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videobuff } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\n    const payload = param.payload.user\n    const { data: orders } = yield getListOrder(payload)\n    yield put(actions.fulfillorders(orders.videobuff))\n  })\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\n    const payload = param.payload\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\n    yield put(actions.fulfillorders(orders.videobuff))\n  })\n\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\n    const payload = param.payload\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\n    yield put(actions.fulfillorders(orders.videobuff))\n  })\n\n\n  http://localhost:8080/Fitnees/\n\n\n\n\n\n\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateOrder(param.payload.videobuff)\n    if (result && result.videobuff) {\n      yield put(actions.updateMultiSuccess(result.videobuff))\n    } else {\n      alert(result.message)\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateThread(param.payload.videobuff)\n    if (result && result.videobuff) {\n      yield put(actions.updateMultiSuccess(result.videobuff))\n    } else {\n      alert(result.message)\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n  \n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrderManual(payload)\n        if (result && (result.videobuff)) {\n            yield put(actions.addOrderSuccess(result.videobuff))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrder(payload)\n        if (result && (result.channel||result.channels)) {\n          if(payload.channel_id.includes(\"\\n\")){\n            console.log(\"------channels------\",result.channels)\n            yield put(actions.addOrdersSuccess(result.channels))\n          }else{\n            yield put(actions.addOrderSuccess(result.channel))\n          }\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield updateOrder(payload)\n        if (result && result.videobuff) {\n          yield put(actions.updateMultiSuccess(result.videobuff))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        } \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateThread(payload)\n      if (result && result.videobuff) {\n        yield put(actions.updateMultiSuccess(result.videobuff))\n      } else {\n        yield put(actions.addOrderFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\n    try {\n      const payload = param.payload\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\n      if (result&&result.videobuffh!==null) {\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrdersPage.tsx",["2502","2503","2504","2505","2506"],"import React, { useEffect, useState } from 'react'\nimport { OrderList } from './OrderList'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { OrderModel } from './models/Order'\nimport { RootState } from 'setup'\nimport { actions } from './redux/OrdersRedux'\nimport EditModal from './modals/EditModal'\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nconst WidgetsPage: React.FC = () => {\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  const dispatch = useDispatch()\n  const orders: OrderModel[] = useSelector<RootState>(({ orderdone }) => orderdone.orders, shallowEqual) as OrderModel[] || []\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderdone }) => orderdone.currentOrder, shallowEqual) as OrderModel || undefined\n  useEffect(() => {\n    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n      dispatch(actions.requestOrders(''))\n    }else{\n      dispatch(actions.requestOrders(user))\n    }\n  }, [])\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n        <div className='col-xl-12'>\n          <OrderList orders={orders} done={1} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n      </div>\n      {\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\n      }\n    </>\n  )\n}\n\nexport default WidgetsPage\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersCRUD.ts",["2507"],"import axios from 'axios'\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost,} from '../models/Order'\n\n\n\nexport async function getListOrder(user:string) {\n  const res:any = await getFunciton(\"videobuffh/getorderbuffh?user=\"+user)\n  return res\n}\n\nexport async function getOrderFilter(key:string,user:string) {\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffh?key=\"+key+'&user='+user)\n  return res\n}\n\nexport async function getOrderPercentFilter(key:number,user:string) {\n  const res:any = await getFunciton(\"videobuffh/getorderbypercentbuffh?key=\"+key+\"&user=\"+user)\n  return res\n}\nexport async function addorderv2( videoid:string,\n                                  homerate:number,\n                                  note:string,\n                                  directrate:number,\n                                  commentrate:number,\n                                  mobilerate:number,\n                                  searchrate:number,\n                                  enabled:number,\n                                  maxthreads:number,\n                                  viewstart:number,\n                                  likerate:number,\n                                  suggestrate:number,\n                                  timebuff:number,\n                                  optionbuff:number,\n                                  user:string) {\n  const res = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\", {\n    videoid:videoid,\n    homerate:homerate,\n    note:note,\n    directrate:directrate,\n    commentrate:commentrate,\n    mobilerate:mobilerate,\n    searchrate:searchrate,\n    enabled:enabled,\n    maxthreads:maxthreads,\n    viewstart:viewstart,\n    likerate:likerate,\n    suggestrate:suggestrate,\n    timebuff:timebuff,\n    optionbuff:optionbuff,\n    user:user\n  })\n  return res\n}\n\nexport async function bhorderv2( videoid:string) {\n  const res = await postWithoutTokenFunciton(\"videobuffh/bhbuffh\", {\n    videoid:videoid\n  })\n  return res\n}\n\nexport async function updateOrder(order:OrderModel) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\n  return res\n}\nexport async function updateThread(order:OrderModel) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/updatethread\",order)\n  return res\n}\n\nexport async function addOrder(order:OrderForm) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\nexport async function addOrderManual(order:OrderFormManual) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\n  return res\n}\n\nexport async function addOrderMulti(order:OrderPost) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\n\n\n\n\nexport async function deleteChannel(videoid:string,cancel:number) {\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid+'&cancel='+cancel)\n  return res\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrderList.tsx",["2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519","2520","2521","2522","2523","2524","2525","2526","2527","2528","2529","2530","2531","2532","2533","2534","2535","2536","2537","2538","2539","2540","2541","2542","2543","2544","2545","2546","2547","2548","2549","2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\nimport {Group, OrderModel} from './models/Order'\nimport {Popover, Transition} from '@headlessui/react'\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport AddManualModal from './modals/AddManualModal'\nimport AddModal from './modals/AddModal'\nimport EditMulti from './modals/EditMulti'\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\nimport OrderItem from './components/OrderItem'\nimport {RootState} from 'setup'\nimport {actions} from './redux/OrdersRedux'\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\nimport {Spinner} from \"react-bootstrap-v5\";\nimport BhManualModal from \"./modals/BhManualModal\";\n\ntype Props = {\n  done:number,\n  className: string\n  orders: OrderModel[]\n}\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\n  const dispatch = useDispatch()\n  const API_URL = process.env.REACT_APP_API_URL\n  function format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n  }\n  const [loading, setLoading] = useState(true)\n  const [showAdd, setShowAdd] = useState(false)\n  const [key, setKey] = useState(\"\")\n  const [keyrate, setKeyRate] = useState(0)\n  const [keyuser, setKeyUser] = useState(\"\")\n  const [keytrue, setKeyTrue] = useState(0)\n  const [keyratetrue, setKeyRateTrue] = useState(0)\n  const [keyusertrue, setKeyUserTrue] = useState(0)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [showBhManual, setShowBhManual] = useState(false)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  let [totaltimeorder, setTotalTimeOrder] = useState(0)\n  let [totaltimeordershow, setTotalTimeOrderShow] = useState(0)\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\n  let [totaldorder, setTotalOrder] = useState(0)\n  let [totaldordershow, setTotalOrderShow] = useState(0)\n  let [useEff, setuseEff] = useState(0)\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n  const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\n  const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\n  const bonus: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\n  const vip: number = useSelector<RootState>(({ auth }) => auth.user?.vip, shallowEqual) as number || 0\n  const role: string =\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  const groups: Group[] =\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\n  const currentGroup: Group =\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\n  let sumtime=0;\n  let sumorder=0;\n  const arr:string[]=[]\n  const [list_user,setList_User]=useState([{\n    id:\"0000000000\",\n    user:\"All User\"\n  },])\n  const [list_video,setList_Video]=useState([{\n    id:0,\n    videoid:\"\",\n  },])\n  orders.forEach(item=>{\n    sumtime=sumtime+item.timebuff;\n    sumorder=sumorder+1;\n  })\n  let sumtimedone=0;\n  orders.forEach(item=>{\n    sumtimedone=sumtimedone+Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)\n  })\n\n  async function getcounttimeorder() {\n    let  requestUrl = API_URL+'auth/getalluser';\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {user} = responseJson;\n    let arrlist =user.split(',');\n    for(var i=0;i<arrlist.length;i++){\n      let orderitem = {\n        id: randomString(10),\n        user: arrlist[i]\n      }\n      setList_User([...list_user, orderitem])\n      list_user.push(orderitem)\n    }\n  }\nlet videos=''\n  useEffect(() => {\n    setLoading(true)\n    if(orders.length!=0 || list_video.length>0){\n      setLoading(false)\n    }\n    setList_Video([])\n    useEff=useEff+1\n    setuseEff(useEff)\n    totaldordershow=totaldorder\n    setTotalOrderShow(totaldordershow)\n    setTotalOrder(0)\n\n    totaltimeordershow=totaltimeorder\n    setTotalTimeOrderShow(totaltimeordershow)\n    totaltimeorder=0\n    setTotalTimeOrder(0)\n\n    totaltimebuffedordershow=totaltimebuffedorder\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\n    totaltimebuffedorder=0\n    setTotalTimeBuffedOrder(0)\n    if(useEff<=1){\n      getcounttimeorder();\n    }\n\n\n\n  }, [keytrue,keyuser,keyrate,key,orders.length,,])\n  const selectGroup = (item: Group) => {\n    dispatch(actions.selectGroup(item))\n  }\n\n  const clickDeleteHandler = () => {\n    const arr:string[]=[]\n    orders.forEach(item=>{\n      const myElem = list_video.find(value => value.videoid===item.videoid)\n      if(myElem && item.checked){\n\n        arr.push(item.videoid)\n      }\n    })\n    const orderarr=arr.join(',')\n    if (window.confirm(\"Bạn chắc chắn muốn xóa \"+arr.length+\" đơn!\") == true) {\n      dispatch(actions.deleteOrderRequest(orderarr,1))\n    }\n  }\n\n  const clickDeleteOrderDoneHandler = () => {\n    const arr:string[]=[]\n    orders.forEach(item=>{\n      const myElem = list_video.find(value => value.videoid===item.videoid)\n      if(myElem && item.checked){\n        arr.push(item.videoid)\n      }\n    })\n    const orderarr=arr.join(',')\n    if (window.confirm(\"Bạn chắc chắn muốn hoàn thành \"+arr.length+\" đơn!\") == true) {\n      dispatch(actions.deleteOrderRequest(orderarr,0))\n    }\n  }\n\n  const isShowFixMulti = orders.find((item) => {\n    if (item.checked) {\n      return true\n    }\n    return false\n  })\n\n  return (\n    <div className={`card ${className}`}>\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Đơn đang chạy</span>\n              <span  className='ml-2 fw-bold fs-7'>({totaldordershow} Video)</span>\n              <p className=\"fw-bold c-order__list\">\n                <span style={{fontSize:12,marginTop:5}}>Tổng đặt: {format1((useEff<=1?sumtime:totaltimeordershow)*(1+bonus/100))}h | Đã chạy: {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}h | Còn tồn: {format1((useEff<=1?sumtime:totaltimeordershow)*(1+bonus/100)-(useEff<=1?sumtimedone:totaltimebuffedordershow))}h</span>\n              </p>\n            </div>\n\n            <div className=\"col-lg-5 col-sm-12 text-right\">\n              {isShowFixMulti && role === \"ROLE_ADMIN\"&&(\n                  <button style={{marginRight:5}}\n                          onClick={() => {\n                            clickDeleteHandler()\n                          }}\n                          className='btn btn-light'\n                  >\n                    Xóa\n                  </button>\n              )}\n              {isShowFixMulti&& role === \"ROLE_ADMIN\"&& (\n                  <button\n                          onClick={() => {\n                            setShowEditMulti(true)\n                          }}\n                          className='btn btn-light'\n                  >\n                    Sửa luồng\n                  </button>\n              )}\n\n              {isShowFixMulti &&  (\n                  <button style={{margin:5}}\n                          onClick={() => {\n                            clickDeleteOrderDoneHandler()\n                          }}\n                          className='btn btn-light'\n                  >\n                    Hoàn thành\n                  </button>\n              )}\n              {role === \"ROLE_ADMIN\"&&<button style={{marginRight:5,color:\"white\"}}\n                  onClick={() => {\n                    setShowBhManual(true)\n                  }}\n                  className='btn btn-google'\n              >Bảo hành\n              </button>}\n              <button\n                      onClick={() => {\n                        setShowAddManual(true)\n                      }}\n                      className='btn btn-success'\n              >\n                Thêm đơn\n              </button>\n            </div>\n\n          </div>\n        </div>\n        <div className=\"page-header__content\">\n        <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\n          <div style={{width:\"60%\"}}>\n            <div>\n              <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\n                     id=\"note\"\n                     name=\"note\"\n                     value={key}\n                     placeholder=\"Search...\"\n                     onChange={(e) => setKey(e.target.value)\n              }\n                     type=\"text\"\n              />\n              <button style={{ fontWeight:'bold',maxWidth:80,color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\n                      onClick={() => {\n                        setKeyTrue(1)\n                      }}\n                        /*\n                        if(key.trim().length==0){\n                          if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                            dispatch(actions.requestOrders(''))\n                          }else{\n                            dispatch(actions.requestOrders(user))\n                          }\n                        }else{\n                          if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                            dispatch(actions.showordersfilter(key,''))\n                          }else{\n                            dispatch(actions.showordersfilter(key,user))\n                          }\n                        }\n                        //setKey(\"\")\n                      }}\n\n                         */\n                      className='btn btn-sm'\n              >\n                Search\n              </button>\n            </div>\n          </div>\n\n          <div style={{width:\"40%\"}}>\n            <Input style={{margin:10,width:\"auto\",height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\n                //onChange={(e) => setKeyRate(parseInt(e.target.value))}\n                   onChange={(e) => {\n                     setKeyRate(parseInt(e.target.value))\n                     setKeyRateTrue(1)\n                     /*\n                     if(parseInt(e.target.value)==0){\n                       if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                         dispatch(actions.requestOrders(''))\n                       }else{\n                         dispatch(actions.requestOrders(user))\n                       }\n                     }else{\n                       if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                         dispatch(actions.showorderspercentfilter(parseInt(e.target.value),''))\n                       }else{\n                         dispatch(actions.showorderspercentfilter(parseInt(e.target.value),user))\n                       }\n\n                     }\n\n                      */\n                     //setKeyRate(keyrate)\n                   }}\n                   className=\"form-control form-control-solid\"\n                   type=\"select\"\n                   value={keyrate}\n            >\n              <option key={0} value={0}>\n                {\"All %\"}\n              </option>\n              <option key={10} value={10}>\n                {\"10\"}\n              </option>\n              <option key={20} value={20}>\n                {\"20\"}\n              </option>\n              <option key={30} value={30}>\n                {\"30\"}\n              </option>\n              <option key={40} value={40}>\n                {\"40\"}\n              </option>\n              <option key={50} value={50}>\n                {\"50\"}\n              </option>\n              <option key={60} value={60}>\n                {\"60\"}\n              </option>\n              <option key={70} value={70}>\n                {\"70\"}\n              </option>\n              <option key={80} value={80}>\n                {\"80\"}\n              </option>\n              <option key={90} value={90}>\n                {\"90\"}\n              </option>\n              <option key={100} value={100}>\n                {\"100\"}\n              </option>\n              <option key={104} value={104}>\n                {\"104\"}\n              </option>\n            </Input>\n            {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\n                //onChange={(e) => setKeyRate(parseInt(e.target.value))}\n                   onChange={(e) => {\n                     setKeyUser(e.target.value)\n                     setKeyUserTrue(1)\n                     //setKeyRate(keyrate)\n                   }}\n                   className=\"form-control form-control-solid\"\n                   type=\"select\"\n                   value={keyuser}\n            >\n              {\n                list_user.map((item, index) => {\n                  return(\n                      <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\n                    {item.user}</option>)\n                })\n              }\n            </Input>}\n          </div>\n\n\n        </div>\n        </div>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{marginLeft:10,marginRight:10}}>\n            <div style={{width:\"100%\"}}>\n              <p className=\"fw-bold c-order__list\">\n                <span style={{fontSize:12}}>Giá dịch vụ buffh (tính theo đơn 4000h): <span style={{color:\"red\"}}>{format1(price*(1-discount/100)+(vip!=1?40000:0))}đ</span> với video dưới 1h | <span style={{color:\"red\"}}>{format1(price*(1-discount/100)+(vip!=1?20000:0))}đ</span> với video dưới 2h | <span style={{color:\"red\"}}>{format1(price*(1-discount/100)*1)}đ</span> với video trên 2h |\n                  <span style={{color:\"blueviolet\"}}> Lưu ý: </span>\n                  Không nhận video có time nhỏ hơn\n                  <span style={{color:\"red\"}}> 30 phút</span>\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='card-body py-3'>\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='w-25px'>\n                  <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                      onChange={(evt) => {\n                        dispatch(actions.checkedAllChange(evt.target.checked))\n                      }}\n                      className='form-check-input'\n                      type='checkbox'\n                      value='1'\n                      data-kt-check='true'\n                      data-kt-check-target='.widget-13-check'\n                    />\n                  </div>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\n                </th>\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Threads</span>\n                </th>}\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Status</span>\n                </th>\n                {role!=\"ROLE_USER\"&&<th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\n                </th>}\n                <th   className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {orders &&\n                orders.map((order: OrderModel, index: number) => {\n                  if (keyusertrue==0&&keyratetrue===0&&keytrue==0) {\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                      <OrderItem\n                        index={totaldorder}\n                        showEdit={role === 'ROLE_ADMIN'}\n                        key={order.videoid}\n                        item={order}\n                      />\n                    )\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keyratetrue==0&&keytrue==0){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }else if(Math.round((Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)/order.timebuff*100))>=keyrate&&keyratetrue==1&&keyusertrue==0&&keytrue==0){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0 )&&keytrue==1&&keyusertrue==0&&keyratetrue==0){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0) && Math.round((Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)/order.timebuff*100))>=keyrate) &&keytrue==1&&keyusertrue==0&&keyratetrue==1){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }else if((order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)/order.timebuff*100))>=keyrate) &&keytrue==0&&keyusertrue==1&&keyratetrue==1){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keyratetrue==0){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0) && order.user.indexOf(keyuser)>=0 && Math.round((Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)/order.timebuff*100))>=keyrate)&&keytrue==1&&keyusertrue==1&&keyratetrue==1){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimeorder=order.timebuff\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimeorder=order.timebuff+totaltimeorder\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid\n                    }\n                    //setList_User([...list_user, orderitem])\n                    list_video.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={totaldorder}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid}\n                            item={order}\n                        />\n                    )\n                  }\n                  return null\n                })}\n            </tbody>\n          </table>\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>}\n\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n      {showAdd && (\n        <AddModal\n          show={true}\n          close={() => {\n            setShowAdd(false)\n          }}\n        />\n      )}\n\n      <EditMulti\n        show={showEditMulti}\n        listvieoid={list_video}\n        close={() => {\n          setShowEditMulti(false)\n        }}\n      />\n      <AddManualModal\n        show={showAddManual}\n        close={() => {\n          setShowAddManual(false)\n        }}\n      />\n\n      <BhManualModal\n          show={showBhManual}\n          close={() => {\n            setShowBhManual(false)\n          }}\n      />\n    </div>\n  )\n}\n\nexport {OrderList}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddModal\\index.tsx",["2563","2564","2565","2566","2567","2568","2569","2570","2571","2572","2573","2574","2575","2576","2577","2578","2579"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Modal,\n  Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\ntype Props = {\n  show: boolean\n  close: () => void\n}\n\nconst AddModal: React.FC<Props> = ({ show, close }) => {\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n  const adding: boolean = useSelector<RootState>(({ orders }) => orders.adding, shallowEqual) as boolean || false\n  const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n\n\n  const dispatch = useDispatch()\n  const [maxthreads, setMaxthreads] = useState(100)\n  const [videoid, setVideoid] = useState(\"\")\n  //const [list_video, setList_video] = useState(\"\")\n  //\n  const [view_need, setView_need] = useState(1000)\n  const [premium_rate,setPremium_rate]=useState(5)\n  const [view_percent,setView_percent]=useState(4000)\n  //\n  const [homerate,setHome_rate]=useState(0)\n  const [searchrate,setSearch_rate]=useState(80)\n  const [suggestrate,setSuggest_rate]=useState(0)\n  const [directrate,setDirect_rate]=useState(20)\n  //\n  const [likerate,setLike_rate]=useState(25)\n  const [commentrate,setComment_rate]=useState(25)\n  const [mobilerate,setMobile_rate]=useState(0)\n  const [optionbuff, setOptionbuff] = useState(10)\n  const [note, setNote] = useState(\"\")\n  const [viewstart, setViewstart] = useState(0)\n  const [timebuff, setTimebuff] = useState(0)\n  //\n  const [enabled,setEnabled]=useState(1)\n  const [user,setUser]=useState(username)\n\n\n  const dismissModal = () => {\n    dispatch(actions.clearcurrentOrder())\n  }\n\n  const submit = () => {\n\n    if (videoid.trim() === \"\") {\n      alert(\"Điền list kênh cần chạy\")\n      return\n    }\n    if(homerate+searchrate+suggestrate+directrate !=100){\n      alert(\"Tổng nguồn view không đúng\")\n      return\n    }\n\n    if(view_percent>10000000||view_percent<0){\n      alert(\"phần trăm xem video không đúng\")\n      return\n    }\n    dispatch(actions.addOrderRequest({\n      videoid,\n      homerate,\n      note,\n      directrate,\n      commentrate,\n      mobilerate,\n      searchrate,\n      enabled,\n      maxthreads,\n      viewstart,\n      likerate,\n      suggestrate,\n      timebuff,\n      optionbuff,\n      user\n    }))\n\n  }\n\n  useEffect(() => {\n    if (!adding) {\n      close()\n    }\n  }, [adding])\n\n  return (\n      <Modal isOpen={show}\n             modalTransition={{ timeout: 500 }}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n              <span className=\"svg-icon svg-icon-2x\"></span>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <p>Cài đặt đơn</p>\n            <Form>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Danh sách id kênh cần chạy sub\n                </Label>\n                <Input\n                    id=\"list_id\"\n                    name=\"list_id\"\n                    className=\"form-control form-control-solid\"\n                    placeholder={\"Id kênh\"}\n                    value={videoid}\n                    type={\"textarea\"}\n                    onChange={(e) => setVideoid(e.target.value)}\n                />\n              </FormGroup>\n              <p>Nguồn view tổng = 100%</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Home\n                  </Label>\n                  <Input\n                      id=\"home_rate\"\n                      name=\"home_rate\"\n                      value={homerate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Search\n                  </Label>\n                  <Input\n                      id=\"search_rate\"\n                      name=\"search_rate\"\n                      value={searchrate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Suggest\n                  </Label>\n                  <Input\n                      id=\"suggest_rate\"\n                      name=\"suggest_rate\"\n                      value={suggestrate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Direct\n                  </Label>\n                  <Input\n                      id=\"direct_rate\"\n                      name=\"direct_rate\"\n                      value={directrate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <p>Cài đặt tương tác</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ Like\n                  </Label>\n                  <Input\n                      id=\"like_rate\"\n                      name=\"like_rate\"\n                      value={likerate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ comment\n                  </Label>\n                  <Input\n                      id=\"comment_rate\"\n                      name=\"comment_rate\"\n                      value={commentrate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Luồng max\n                  </Label>\n                  <Input\n                      id=\"max_thread\"\n                      name=\"max_thread\"\n                      value={maxthreads}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Time Buff(h)\n                  </Label>\n                  <Input\n                      id=\"mobile_rate\"\n                      name=\"mobile_rate\"\n                      value={view_percent}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 100\"\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Trạng thái\n                </Label>\n                <Input\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\n                    className=\"form-control form-control-solid\"\n                    type=\"select\"\n                    value={enabled}\n                >\n                  <option key={1} value={1}>\n                    {\"Chạy\"}\n                  </option>\n                  <option key={0} value={0}>\n                    {\"Ngừng\"}\n                  </option>\n                </Input>\n              </FormGroup>\n            </Form>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n          </div>\n        </div>\n      </Modal>\n  )\n}\n\nexport default AddModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\components\\OrderItem\\index.tsx",["2580","2581","2582","2583","2584","2585","2586","2587","2588","2589","2590","2591","2592","2593","2594","2595","2596","2597","2598","2599","2600","2601","2602"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { OrderModel } from '../../models/Order'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport { getFunciton } from 'utils/ApiHelper'\nimport {RootState} from \"../../../../../setup\";\ntype Props = {\n    item: OrderModel,\n    showEdit: boolean,\n    index: number,\n    //increase: number\n}\n\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\n    const [running, setRunning] = useState(0)\n    const [success, setSuccess] = useState(0)\n    const [loading, setLoading] = useState(false)\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\n\n    function format1(n:number) {\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n        });\n    }\n\n    const dispatch = useDispatch()\n    const clickUpdateHandler = () => {\n        dispatch(actions.showcurrentOrder(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!\n    ) == true) {\n            dispatch(actions.deleteOrderRequest(item.videoid,1))\n        }\n    }\n\n\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\n    //const increase = item.current_view - item.start_view\n    return (\n        <tr style={{margin:100}}>\n            <td className='w-25px'>\n                <div className='form-check form-check-sm form-check-custom form-check-solid'>\n                    <input\n                        onChange={(evt)=>{\n                            dispatch(actions.checkedChange({\n                                videoid:item.videoid,\n                                checked:evt.target.checked\n                            }))\n                        }}\n                        className='form-check-input'\n                        type='checkbox'\n                        value={1}\n                        checked={item.checked}\n                        data-kt-check='true'\n                        data-kt-check-target='.widget-13-check'\n                    />\n                </div>\n            </td>\n            <td>\n                <span style={{fontWeight:'bold',fontSize:11,fontFamily:'cursive'}} className='text-muted fw-bold text-muted d-block text-sm'>{index}</span>\n            </td>\n            <td>\n\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\n                    {item.videoid}\n                </a>\n                {role==\"ROLE_ADMIN\"&&<span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'><span style={{color:\"red\"}}>{format1(Math.round(Number(item.price==null?0:item.price)))}đ</span></span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{(item.optionbuff==10?'10':item.optionbuff==30?'30':item.optionbuff==60?'60':item.optionbuff==0?'Auto':'120')+'|'+Math.round(Number(item.duration==null?0:item.duration)/60)+'min'}</span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-warning'>{Math.round(Number(item.timebuffh24h==null?0:item.timebuffh24h)/3600)+'/'+(Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600))+\"/\"+item.timebuff}</span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-dark'>{(item.view24h==null?0:item.view24h)+'/'+(item.viewtotal==null?0:item.viewtotal)+' | '+item.viewstart}</span>\n                    {Math.round((Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)/item.timebuff*100))>=90?\n                        <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>\n                        {Math.round((Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)/item.timebuff*100))+'%'}</span>:\n                        <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success'>\n                        {Math.round((Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)/item.timebuff*100))+'%'}</span>\n                    }\n                    <br/>\n                </span>}\n                {role==\"ROLE_USER\"&&<span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Price | <span style={{color:\"red\"}}>{format1(Math.round(Number(item.price==null?0:item.price)))}đ</span></span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Time order | <span style={{color:\"#ffffff\"}}>{item.timebuff+'h'}</span></span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>View start | <span style={{color:\"#fafafa\"}}>{item.viewstart}</span></span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Time buff | <span style={{color:\"#000000\"}}>{Math.round(Number(item.duration==null?0:item.duration<3600?1800:item.duration<7200?3600:7200)/60)+'min'}</span></span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total buff | <span style={{color:\"#000000\"}}>{Math.round(Number(item.timebuffhtotal==null?0:item.timebuffh24h)/3600)+'h'}</span></span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>% Completed | <span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)/item.timebuff*100))+'%'}</span></span>\n                    <br/>\n                </span>}\n\n            </td>\n            {role!=\"ROLE_USER\"&&<td className='text-dark fw-bolder text-hover-primary text-sm'>\n                {loading ? <span className='text-muted fw-bold text-muted d-block text-sm'>\n                    {\"Đang lấy dữ liệu\"}\n                </span> :\n                    <span style={{color:'black',fontSize:11,backgroundColor:item.total!=1?\"#c0e1ce\":\"#dc7a30\"}} className='badge badge-dark'>{item.total==1?0:item.total}/{item.maxthreads}</span>\n                }\n            </td>}\n            <td>\n                {\n                    item.enabled === 1 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>R</span> :item.enabled === 2 ?\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-warning'>T1</span>:item.enabled === 3 ?\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T2</span>:item.enabled === 4 ?\n                                <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T3</span>:item.enabled === 5 ?\n                                    <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T4</span>:item.enabled === 6 ?\n                                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T5</span>:item.enabled === 7 ?\n                                            <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T6</span>:item.enabled === 8 ?\n                                                <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T7</span>:item.enabled === 9 ?\n                                                    <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T8</span>:item.enabled === 10 ?\n                                                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T9</span>:\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-danger'>S</span>\n\n                }\n                {\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\n                }\n\n            </td>\n            {role!=\"ROLE_USER\"&&<td>\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user}</span>\n            </td>}\n            <td>\n               <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\n            </td>\n\n            {\n                 <td >\n                    <a href='#' onClick={clickUpdateHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm mr-5'>\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </a>\n                     {role==='ROLE_ADMIN'&&<a href='#' onClick={clickDeleteHandler} className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm'>\n                        <KTSVG path='/media/icons/duotune/general/gen027.svg' className='svg-icon-3' />\n                    </a>}\n                </td>\n            }\n        </tr>\n    )\n}\n\nexport default OrderItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditModal\\index.tsx",["2603","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614","2615","2616","2617","2618","2619","2620","2621","2622","2623"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orderdone/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\nimport {toAbsoluteUrl} from \"../../../../../_metronic/helpers\";\n\n\ntype Props = {\n    item: OrderModel\n\n}\n\nconst EditModal: React.FC<Props> = ({ item}) => {\n    function format1(n:number) {\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n        });\n    }\n    const price: number = useSelector<RootState>(({ auth }) => auth.user?.price, shallowEqual) as number || 0\n    const vip: number = useSelector<RootState>(({ auth }) => auth.user?.bonus, shallowEqual) as number || 0\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n\n\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\n    //const [videoid, setVideoid] = useState(\"\")\n    //const [list_video, setList_video] = useState(\"\")\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(4000)\n    //\n    const [homerate,setHome_rate]=useState(item.homerate)\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\n    const [directrate,setDirect_rate]=useState(item.directrate)\n    //\n    const [likerate,setLike_rate]=useState(item.likerate)\n    const [commentrate,setComment_rate]=useState(item.commentrate)\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\n    //\n    const [note, setNote] = useState(item.note)\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(item.timebuff)\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\n    const [enabled,setEnabled]=useState(item.enabled)\n    const [user,setUser]=useState(username)\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    let [timebuff_old,setTimebuff_Old]=useState(0);\n    const submit = () => {\n\n        if(homerate+searchrate+suggestrate+directrate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(likerate>100||likerate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>1000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        if (timebuff<parseInt((item.timebuffhtotal/3600).toFixed(0))+100) {\n            alert(\"Số giờ thay đổi phải lớn hơn tổng giờ đã chạy ít nhất 100h! (>=\"+(item.timebuffhtotal/3600+100).toFixed(0)+\"h)\")\n            return\n        }\n\n        dispatch(actions.requestUpdate({\n            ...item,\n            homerate,\n            note,\n            directrate,\n            commentrate,\n            mobilerate,\n            searchrate,\n            enabled,\n            maxthreads,\n            viewstart,\n            likerate,\n            suggestrate,\n            timebuff,\n            optionbuff,\n            user\n        }))\n     \n    }\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Update {item.videoid} | Đã chạy {format1((item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)}h</h5>\n                </div>\n                <div className=\"modal-body\">\n                    <Form>\n                        {role===\"Ver2\"&&<p>Nguồn view tổng = 100%</p>}\n                        {role===\"Ver2\"&&<div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={homerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={searchrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggestrate}\n                                    //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={directrate}\n                                    //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>}\n                        {role===\"Ver2\"&&<p>Cài đặt tương tác</p>}\n                        {role===\"Ver2\"&&<div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={likerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Comment\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={commentrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Mobile\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"mobilerate\"\n                                    name=\"mobilerate\"\n                                    value={mobilerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            {//role === \"ROLE_ADMIN\"&&\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>}\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   Time(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value)\n                                    )}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>}\n                        <div>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Time(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value)\n                                    )}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" >\n                                    Ghi chú\n                                </Label>\n                                <Input\n                                    id=\"note\"\n                                    name=\"note\"\n                                    value={note}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"...\"\n                                    onChange={(e) => setNote(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            {role===\"ROLE_ADMIN\"&&<FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>}\n                        </div>\n                        {role===\"ROLE_ADMIN\"&&<FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Chế độ buff\n                            </Label>\n                            <Input disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={optionbuff}\n                            >\n                                <option key={10} value={10}>\n                                    {\"10 phút\"}\n                                </option>\n                                <option key={30} value={30}>\n                                    {\"30 phút\"}\n                                </option>\n                                <option key={60} value={60}>\n                                    {\"60 phút\"}\n                                </option>\n                                <option key={120} value={120}>\n                                    {\"120 phút\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Auto\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>}\n                        {role===\"ROLE_ADMIN\"&&<FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1-Vt-Off-Seach\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2-Vt-Off-Direct\"}\n                                </option>\n                                <option key={4} value={4}>\n                                    {\"Test3-Vt-On-Seach\"}\n                                </option>\n                                <option key={5} value={5}>\n                                    {\"Test4-Vt-On-Direct\"}\n                                </option>\n                                <option key={6} value={6}>\n                                    {\"Test5-Hc-Off-Seach\"}\n                                </option>\n                                <option key={7} value={7}>\n                                    {\"Test6-Hc-Off-Direct\"}\n                                </option>\n                                <option key={8} value={8}>\n                                    {\"Test7-Hc-On-5p\"}\n                                </option>\n                                <option key={9} value={9}>\n                                    {\"Test8-Vt-Gmail6-Off-Bas2\"}\n                                </option>\n                                <option key={10} value={10}>\n                                    {\"Test9-Vt-Gmail6-Off-Bas1\"}\n                                </option>\n                                <option key={11} value={11}>\n                                    {\"Test10-Vt-Gmail2-On-Bas2\"}\n                                </option>\n                                <option key={12} value={12}>\n                                    {\"Test11-Vt-Gmail2-On-Bas1\"}\n                                </option>\n                                <option key={13} value={13}>\n                                    {\"Test12-Vt-Domain2-On-Bas2\"}\n                                </option>\n                                <option key={14} value={14}>\n                                    {\"Test13-Vt-Domain2-On-Bas1\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>}\n                    </Form>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\n                        {/* begin::Table container */}\n                        <span>Số tiền {timebuff<item.timebuff?\"hoàn\": \"trả thêm\"}: {format1(((timebuff<item.timebuff?(item.timebuff-timebuff):(timebuff-item.timebuff))/4000)*(price*(1-discount/100)+(vip!=1?(\n                            item.duration<3600?40000:item.duration<7200?20000:0):0)))}đ</span>\n                            <br/>\n                        {/* end::Table container */}\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button  type=\"button\"  onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">Lưu</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default EditModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddManualModal\\index.tsx",["2624","2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Modal,\n    Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\nimport { addorderv2 } from '../../redux/OrdersCRUD'\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\ntype Props = {\n    show: boolean\n    close: () => void\n}\n\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\n\n    function format1(n:number) {\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n        });\n    }\n\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(50)\n    const [videoid, setVideoid] = useState(\"\")\n    const [homerate,setHome_rate]=useState(0)\n    //\n    const [searchrate,setSearch_rate]=useState(80)\n    const [suggestrate,setSuggest_rate]=useState(0)\n    const [directrate,setDirect_rate]=useState(20)\n    //\n    const [likerate,setLike_rate]=useState(25)\n    const [commentrate,setComment_rate]=useState(25)\n    const [mobilerate,setMobile_rate]=useState(0)\n    //\n    const [note, setNote] = useState(\"\")\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(4000)\n    const [optionbuff, setOptionbuff] = useState(0)\n    const [enabled,setEnabled]=useState(1)\n    const [user,setUser]=useState(username)\n    const [showorder,setShowOrder]=useState(true)\n    const [orderdonenum,setOrderDoneNum]=useState(0)\n    const [list_order,setList_Todo]=useState([{\n        id:\"0000000000\",\n        videoid:\"\",\n        state:\"\",\n        time:0,\n        price:0\n\n    },])\n    let [sumprice,setSumPrice]=useState(0)\n    let [sumtime,setSumTime]=useState(0)\n    let [sumorder,setSumOrder]=useState(0)\n    const dismissModal = () => {\n        close()\n        setShowOrder(true)\n        setVideoid(\"\")\n        let or={\n            id:\"0000000000\",\n            videoid:\"\",\n            state:\"\",\n            time:0,\n            price:0\n        }\n        setList_Todo([or])\n        if(orderdonenum>0){\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                dispatch(actions.requestOrders(''))\n            }else{\n                dispatch(actions.requestOrders(user))\n            }\n        }\n        setOrderDoneNum(0)\n    }\n    async function order_video_ver2(video: string) {\n            await addorderv2(video, homerate, note, directrate, commentrate, mobilerate, searchrate, enabled, maxthreads, viewstart, likerate, suggestrate, timebuff, optionbuff, user)\n                .then((data: any) => {\n                    if (data.data.videobuffh == \"true\") {\n                        setOrderDoneNum(orderdonenum + 1)\n                        let orderitem = {\n                            id: randomString(10),\n                            videoid: video,\n                            state: \"OK\",\n                            time: data.data.time,\n                            price: data.data.price\n                        }\n\n                        sumprice = sumprice + data.data.price\n                        setSumPrice(sumprice)\n                        sumtime = sumtime + timebuff;\n                        setSumTime(sumtime)\n                        sumorder = sumorder + 1\n                        setSumOrder(sumorder)\n                        console.log(sumprice, sumtime, sumorder)\n                        setList_Todo([...list_order, orderitem])\n                        list_order.push(orderitem)\n                    } else {\n                        let orderitem = {\n                            id: randomString(10),\n                            videoid: video,\n                            time: 0,\n                            state: data.data.videobuffh,\n                            price: 0\n                        }\n                        setList_Todo([...list_order, orderitem])\n                        list_order.push(orderitem)\n                    }\n\n                })\n                .catch(() => {\n                    let orderitem = {\n                        id: randomString(10),\n                        videoid: video,\n                        state: 'Error',\n                        time: 0,\n                        price: 0\n                    }\n                    setList_Todo([...list_order, orderitem])\n                    list_order.push(orderitem)\n                })\n    }\n    const  submit = async () => {\n        setSumOrder(0)\n        setSumTime(0)\n        setSumPrice(0)\n        if (videoid.trim() === \"\") {\n            alert(\"VideoId không để trống!\")\n            return\n        }\n\n        if (timebuff < 100) {\n            alert(\"Số giờ phải lớn hơn 100!\")\n            return\n        }\n\n        if (homerate + searchrate + suggestrate + directrate != 100) {\n            alert(\"Tổng nguồn view không đúng!\")\n            return\n        }\n        setShowOrder(false)\n        const videoidlist = videoid.split('\\n')\n        for (var i = 0; i < videoidlist.length; i++) {\n            let video = videoidlist[i]\n            await order_video_ver2(video)\n            await getUserByToken()\n        }\n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\n                    <h5 className=\"modal-title\">{showorder==true?'Thêm nhiệm vụ với danh sách VideoId':'Thành công: '+sumorder+' | Giờ: '+format1(sumtime)+'h | Giá: '+format1(sumprice)+'đ'}</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Danh sách VideoId\n                            </Label>\n                            <Input style={{minHeight:250}}\n                                id=\"list_id\"\n                                name=\"list_id\"\n                                className=\"form-control form-control-solid\"\n                                placeholder={\"1 VideoId một dòng!\"}\n                                value={videoid}\n                                type={\"textarea\"}\n                                onChange={(e) => setVideoid(e.target.value)}\n                            />\n                        </FormGroup>\n\n                        {role===\"Ver2\"&&<p>Nguồn view tổng = 100%</p>}\n                        {role===\"Ver2\"&&<div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup >\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={homerate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={searchrate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggestrate}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={directrate}\n                                    //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>}\n                        {role===\"Ver2\"&&<p>Cài đặt tương tác</p>}\n                        {role===\"Ver2\"&&<div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={likerate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Comment\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={commentrate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Mobile\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"mobilerate\"\n                                    name=\"mobilerate\"\n                                    value={mobilerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n\n\n                        </div>}\n                        <div>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Time(h)\n                                </Label>\n                                <Input\n                                    id=\"timebuffh\"\n                                    name=\"timebuffh\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" >\n                                    Ghi chú\n                                </Label>\n                                <Input\n                                    id=\"note\"\n                                    name=\"note\"\n                                    value={note}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"...\"\n                                    onChange={(e) => setNote(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                            {role === \"ROLE_ADMIN\" &&<FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>}\n                        </div>\n                        {role===\"Ver2\"&&<FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Chế độ buff\n                            </Label>\n                            <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={optionbuff}\n                            >\n                                <option key={10} value={10}>\n                                    {\"10 phút\"}\n                                </option>\n                                <option key={30} value={30}>\n                                    {\"30 phút\"}\n                                </option>\n                                <option key={60} value={60}>\n                                    {\"60 phút\"}\n                                </option>\n                                <option key={120} value={120}>\n                                    {\"120 phút\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Auto\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>}\n                        {role===\"ROLE_ADMIN\"&&<FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1-Vt-Off-Seach\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2-Vt-Off-Direct\"}\n                                </option>\n                                <option key={4} value={4}>\n                                    {\"Test3-Vt-On-Seach\"}\n                                </option>\n                                <option key={5} value={5}>\n                                    {\"Test4-Vt-On-Direct\"}\n                                </option>\n                                <option key={6} value={6}>\n                                    {\"Test5-Hc-Off-Seach\"}\n                                </option>\n                                <option key={7} value={7}>\n                                    {\"Test6-Hc-Off-Direct\"}\n                                </option>\n                                <option key={8} value={8}>\n                                    {\"Test7-Hc-On-5p\"}\n                                </option>\n                                <option key={9} value={9}>\n                                    {\"Test8-Vt-Gmail6-Off-Bas2\"}\n                                </option>\n                                <option key={10} value={10}>\n                                    {\"Test9-Vt-Gmail6-Off-Bas1\"}\n                                </option>\n                                <option key={11} value={11}>\n                                    {\"Test10-Vt-Gmail2-On-Bas2\"}\n                                </option>\n                                <option key={12} value={12}>\n                                    {\"Test11-Vt-Gmail2-On-Bas1\"}\n                                </option>\n                                <option key={13} value={13}>\n                                    {\"Test12-Vt-Domain2-On-Bas2\"}\n                                </option>\n                                <option key={14} value={14}>\n                                    {\"Test13-Vt-Domain2-On-Bas1\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n                        </FormGroup>}\n                    </Form>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\n                        {/* begin::Table container */}\n\n                        {\n                            list_order.map((item, index) => {\n                                if (item.videoid.length >0) return (\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\n                                            <div className=\"row\">\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\n                                                <div className=\"col-1 d-flex align-items-center\">\n                                                            <span className='symbol-label'>\n                                                              <img\n\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\n                                                                  className='svg-icon-1'\n                                                                  alt=''\n                                                              />\n                                                            </span>\n                                                </div>\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}m</div>\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\n                                                    {format1(item.price)}đ\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                )\n                            })\n                        }\n                        {/* end::Table container */}\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddManualModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditMulti\\index.tsx",["2638","2639","2640","2641","2642","2643","2644","2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656"],"import React, {useState, useEffect, ReactChild} from 'react'\nimport {OrderModel, OrderModelChecked} from 'app/modules/orderdone/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\n\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\n\n\ntype Props = {\n    listvieoid:OrderModelChecked[],\n    show: boolean\n    close: () => void\n}\nconst EditMulti: React.FC<Props> = ({ listvieoid,show,close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\n    const orders: OrderModel[] = useSelector<RootState>(({ orderdone }) => orderdone.orders, shallowEqual) as OrderModel[] || []\n\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(200)\n    const [videoid, setVideoid] = useState(\"\")\n    //const [list_video, setList_video] = useState(\"\")\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(4000)\n    //\n    const [homerate,setHome_rate]=useState(0)\n    const [searchrate,setSearch_rate]=useState(80)\n    const [suggestrate,setSuggest_rate]=useState(0)\n    const [directrate,setDirect_rate]=useState(20)\n    //\n    const [likerate,setLike_rate]=useState(25)\n    const [commentrate,setComment_rate]=useState(25)\n    const [mobilerate,setMobile_rate]=useState(0)\n    const [optionbuff, setOptionbuff] = useState(0)\n    const [note, setNote] = useState(\"\")\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(4000)\n    const [user,setUser]=useState(username)\n    const [enabled,setEnabled]=useState(1)\n\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    const arr:string[]=[]\n    orders.forEach(item=>{\n        const myElem = listvieoid.find(value => value.videoid===item.videoid)\n        if(myElem && item.checked){\n            arr.push(item.videoid)\n        }\n    })\n    console.log(arr)\n    const submit = () => {\n        const arr:string[]=[]\n        orders.forEach(item=>{\n            const myElem = listvieoid.find(value => value.videoid===item.videoid)\n            if(myElem && item.checked){\n                arr.push(item.videoid)\n            }\n        })\n        console.log(arr)\n        const videoid=arr.join('\\n')\n        if (view_need % 100 !== 0 || view_need ==0) {\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\n            return\n        }\n        if(homerate+searchrate+suggestrate+directrate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(likerate>100||likerate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>10000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        if(commentrate>100||commentrate<0){\n            alert(\"Tỉ lệ comment không đúng\")\n            return\n        }\n\n        dispatch(actions.editMultiThreadRequest({\n            videoid,\n            homerate,\n            note,\n            directrate,\n            commentrate,\n            mobilerate,\n            searchrate,\n            enabled,\n            maxthreads,\n            viewstart,\n            likerate,\n            suggestrate,\n            timebuff,\n            optionbuff,\n            user\n        }))\n     \n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Sửa luồng</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <Form>\n                        {role===\"Ver2\"&&<p>Nguồn view tổng = 100%</p>}\n                        {role===\"Ver2\"&&<div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={homerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={searchrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggestrate}\n                                    //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={directrate}\n                                    //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>}\n                        {role===\"Ver2\"&&<p>Cài đặt tương tác</p>}\n                        {role===\"Ver2\"&&<div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Like\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={likerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Comment\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={commentrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Mobile\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"mobilerate\"\n                                    name=\"mobilerate\"\n                                    value={mobilerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            {role === \"Ver2\"&&<FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>}\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Time(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>}\n                        <div>\n                            {role===\"Ver2\"&&<FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Time(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>}\n                            {role===\"Ver2\"&&<FormGroup>\n                                <Label for=\"exampleEmail\" >\n                                    Ghi chú\n                                </Label>\n                                <Input\n                                    id=\"note\"\n                                    name=\"note\"\n                                    value={note}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"...\"\n                                    onChange={(e) => setNote(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </FormGroup>}\n                            {role === \"ROLE_ADMIN\"&&<FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>}\n                        </div>\n                        {role===\"Ver2\"&&<FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Chế độ buff\n                            </Label>\n                            <Input //disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={optionbuff}\n                            >\n                                <option key={10} value={10}>\n                                    {\"10 phút\"}\n                                </option>\n                                <option key={30} value={30}>\n                                    {\"30 phút\"}\n                                </option>\n                                <option key={60} value={60}>\n                                    {\"60 phút\"}\n                                </option>\n                                <option key={120} value={120}>\n                                    {\"120 phút\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Auto\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>}\n                        {role===\"Ver2\"&&<FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1-Vt-Off-Seach\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2-Vt-Off-Direct\"}\n                                </option>\n                                <option key={4} value={4}>\n                                    {\"Test3-Vt-On-Seach\"}\n                                </option>\n                                <option key={5} value={5}>\n                                    {\"Test4-Vt-On-Direct\"}\n                                </option>\n                                <option key={6} value={6}>\n                                    {\"Test5-Hc-Off-Seach\"}\n                                </option>\n                                <option key={7} value={7}>\n                                    {\"Test6-Hc-Off-Direct\"}\n                                </option>\n                                <option key={8} value={8}>\n                                    {\"Test7-Hc-On-5p\"}\n                                </option>\n                                <option key={9} value={9}>\n                                    {\"Test8-Vt-Gmail6-Off-Bas2\"}\n                                </option>\n                                <option key={10} value={10}>\n                                    {\"Test9-Vt-Gmail6-Off-Bas1\"}\n                                </option>\n                                <option key={11} value={11}>\n                                    {\"Test10-Vt-Gmail2-On-Bas2\"}\n                                </option>\n                                <option key={12} value={12}>\n                                    {\"Test11-Vt-Gmail2-On-Bas1\"}\n                                </option>\n                                <option key={13} value={13}>\n                                    {\"Test12-Vt-Domain2-On-Bas2\"}\n                                </option>\n                                <option key={14} value={14}>\n                                    {\"Test13-Vt-Domain2-On-Bas1\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>}\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default EditMulti","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar2.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\toolbar\\Toolbar4.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrdersPage.tsx",["2657","2658","2659","2660","2661"],"import React, { useEffect, useState } from 'react'\nimport { OrderList } from './OrderList'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { OrderModel } from './models/Order'\nimport { RootState } from 'setup'\nimport { actions } from './redux/OrdersRedux'\nimport EditModal from './modals/EditModal'\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nconst WidgetsPage: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const orders: OrderModel[] = useSelector<RootState>(({ orderhistory }) => orderhistory.orders, shallowEqual) as OrderModel[] || []\n  const currentOrder: OrderModel = useSelector<RootState>(({ orderhistory }) => orderhistory.currentOrder, shallowEqual) as OrderModel || undefined\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  useEffect(() => {\n    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n      dispatch(actions.requestOrders(''))\n    }else{\n      dispatch(actions.requestOrders(user))\n    }\n  }, [])\n\n\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n        <div className='col-xl-12'>\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n      </div>\n      {\n        currentOrder && <EditModal key={currentOrder?.videoid} item={currentOrder}  />\n      }\n    </>\n  )\n}\n\nexport default WidgetsPage\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersRedux.ts",["2662","2663","2664","2665","2666","2667","2668"],"import { Action } from '@reduxjs/toolkit'\nimport { App } from 'app/App'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  ShowOrdersFilter:'[Orderhistory] Filter',\n  RequestOrders: '[Orderhistory] Requested',\n  OrdersLoadedSuccess: '[Orderhistory] Loaded succcess',\n  OrdersLoadedFail: '[Orderhistory] load fail',\n  AddOrderRequest: '[Orderhistory] Add Order Request',\n  AddOrderManualRequest: '[Orderhistory] Add Order Manual Request',\n  AddOrderSuccess: '[Orderhistory] Add Order Success',\n  AddOrdersSuccess: '[Orderhistory] Add Orders Success',\n  AddOrderFail: '[Orderhistory] Add Order Fail',\n  ShowcurrentOrder: '[Orderhistory] Show Order',\n  RequestUpdate: '[Orderhistory] Requested Update',\n  UpdateMultiOrderRequest: '[Orderhistory] Update Multi Order Request',\n  UpdateSuccess: '[Orderhistory] Update Success',\n  UpdateMultiSuccess: '[Orderhistory] Update Multi Success',\n  UpdateFail: '[Orderhistory] Update Fail',\n  ClearSelected: '[Orderhistory] Clear selected account',\n  GroupLoadedRequest: '[Orderhistory] Group Loaded Request',\n  GroupLoadedSuccess: '[Orderhistory] Group Loaded Success',\n  GroupLoadedFail: '[Orderhistory] Group Loaded Fail',\n  GroupAddRequest: '[Orderhistory] GroupAddRequest',\n  GroupAddSuccess: '[Orderhistory] Group Add Success',\n  GroupAddFail: '[Orderhistory] Group Add Fail',\n  GroupDeleteRequest: '[Orderhistory] Group Delete Request',\n  GroupDeleteSuccess: '[Orderhistory] Group Delete Success',\n  SelectGroup: '[Orderhistory] Select Group',\n  DeleteOrderRequest: '[Orderhistory] Delete Order Request',\n  DeleteOrderSuccess: '[Orderhistory] Delete Order Success',\n  CheckedChange: '[Orderhistory] Checked Change',\n  CheckedAllChange: '[Orderhistory] Checked All Change',\n}\n\nconst initialorderstate: Iorderstate = {\n  orders: [],\n  loading: false,\n  adding: false,\n  groups: [],\n  currentOrder: undefined,\n  currentGroup: undefined,\n  channel_prior: 0,\n  \n}\n\nexport interface Iorderstate {\n  orders: OrderModel[]\n  loading: boolean\n  adding: boolean\n  currentOrder?: OrderModel\n  groups: Group[]\n  currentGroup?: Group\n  channel_prior: number\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-orders', whitelist: [] },\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestOrders: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.ShowOrdersFilter: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n\n      case actionTypes.OrdersLoadedSuccess: {\n        return {\n          ...state,\n          orders: action.payload?.orders || [],\n          loading: false\n        }\n      }\n      case actionTypes.GroupLoadedSuccess: {\n        return {\n          ...state,\n          groups: action.payload?.groups\n        }\n      }\n      case actionTypes.SelectGroup: {\n        return {\n          ...state,\n          currentGroup: action.payload?.group\n        }\n      }\n      case actionTypes.GroupDeleteSuccess: {\n        return {\n          ...state,\n          currentGroup: undefined,\n          groups: state.groups.filter((item: Group) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.DeleteOrderSuccess: {\n        return {\n          ...state,\n          orders: state.orders.filter((item: OrderModel) => {\n            if (item.videoid === action.payload?.videoid) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.OrdersLoadedFail: {\n        return {\n          ...state,\n          orders: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          if (item.videoid === action.payload?.videobuff?.videoid) {\n            return action.payload?.videobuff\n          } else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: true,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          const findItem = action.payload?.videobuff.find((_item:OrderModel)=>{\n            if(_item.videoid===item.videoid){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          adding: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.AddOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.AddOrderManualRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.GroupAddSuccess: {\n        return {\n          ...state,\n          groups: state.groups.concat(action.payload?.group)\n        }\n      }\n      case actionTypes.AddOrderSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.order)\n        }\n      }\n      case actionTypes.AddOrdersSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.orders)\n        }\n      }\n      case actionTypes.AddOrderFail: {\n        return {\n          ...state,\n          adding: false,\n          message: action.payload?.message\n        }\n      }\n      case actionTypes.ShowcurrentOrder: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            if(item.videoid===action.payload?.data?.videoid){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      \n      \n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\n  requestUpdate: (videobuff: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videobuff } }),\n  updateSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videobuff } }),\n  updateMultiSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videobuff } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\n    const payload = param.payload.user\n    const { data: orders } = yield getListOrder(payload)\n    yield put(actions.fulfillorders(orders.videobuff))\n  })\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\n    const payload = param.payload\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\n    yield put(actions.fulfillorders(orders.videobuff))\n  })\n\n  http://localhost:8080/Fitnees/\n\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateOrder(param.payload.videobuff)\n    if (result && result.videobuff) {\n      yield put(actions.updateMultiSuccess(result.videobuff))\n    } else {\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n  \n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrderManual(payload)\n        if (result && (result.videobuff)) {\n            yield put(actions.addOrderSuccess(result.videobuff))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrder(payload)\n        if (result && (result.channel||result.channels)) {\n          if(payload.channel_id.includes(\"\\n\")){\n            console.log(\"------channels------\",result.channels)\n            yield put(actions.addOrdersSuccess(result.channels))\n          }else{\n            yield put(actions.addOrderSuccess(result.channel))\n          }\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield updateOrder(payload)\n        if (result && result.videobuff) {\n          yield put(actions.updateMultiSuccess(result.videobuff))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        } \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\n    try {\n      const payload = param.payload.groupName\n      const { data: result } = yield addGroup(payload)\n      if (result && result.group) {\n        yield put(actions.addGroupSuccess(result.group))\n      } else {\n\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\n    try {\n      const payload = param.payload.videoid\n      const { data: result } = yield deleteChannel(payload)\n      if (result&&result.videobuffh!==null) {\n        yield put(actions.deleteOrderSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrderList.tsx",["2669","2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2680","2681","2682","2683","2684","2685","2686","2687","2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2699","2700","2701","2702","2703","2704","2705","2706","2707","2708","2709","2710","2711","2712","2713","2714","2715","2716","2717","2718","2719","2720","2721","2722","2723","2724","2725","2726","2727","2728","2729"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\nimport {Popover, Transition} from '@headlessui/react'\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport AddManualModal from './modals/AddManualModal'\nimport AddModal from './modals/AddModal'\nimport EditMulti from './modals/EditMulti'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport OrderItem from './components/OrderItem'\nimport {RootState} from 'setup'\nimport {actions} from './redux/OrdersRedux'\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport { DateRangePicker } from 'rsuite';\nimport DatePicker from \"react-date-picker\";\n\n\ntype Props = {\n  done:number\n  className: string\n  orders: OrderModel[]\n}\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\n\n  function format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n  }\n  const [list_orderhistory,setList_OrderHistory]=useState([{\n    id: 0,\n    videoid: '',\n    timebuff:0,\n    timebuffhtotal: 0,\n    viewtotal:0,\n    viewstart:0,\n    viewend:0,\n    insertdate: \"\",\n    enddate: \"\",\n    cancel:0,\n    user:\"\",\n    note:\"\",\n    price:0,\n\n  }])\n  let today=new Date()\n  today.setHours(0,0,0,0)\n  const dispatch = useDispatch()\n  let [startDate, setStartDate] = useState(today);\n  let [endDate, setEndDate] = useState(today);\n\n\n  const [loading, setLoading] = useState(true)\n  const API_URL = process.env.REACT_APP_API_URL\n  const [showAdd, setShowAdd] = useState(false)\n  const [key, setKey] = useState(\"\")\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  const [keyuser, setKeyUser] = useState(\"\")\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())):0);\n  let [keydate, setKeyDate] = useState(1)\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(0)\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())):0);\n  const [keydateendtrue, setKeyDateEndTrue] = useState(0)\n\n  const [keytrue, setKeyTrue] = useState(0)\n  const [keyusertrue, setKeyUserTrue] = useState(0)\n  const [groupName, setGroupName] = useState('')\n  const [nameExport, setNameExport] = useState('')\n\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\n  let [totaldorder, setTotalOrder] = useState(0)\n  let [totaldordershow, setTotalOrderShow] = useState(0)\n  let [useEff, setuseEff] = useState(0)\n  const role: string =\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  const groups: Group[] =\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\n  const currentGroup: Group =\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\n  let sumtimedone=0;\n  let sumorder=0;\n  orders.forEach(item=>{\n    sumtimedone=sumtimedone+Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)\n    sumorder=sumorder+1;\n  })\n  const [list_user,setList_User]=useState([{\n    id:\"0000000000\",\n    user:\"All User\"\n  },])\n\n  async function getcounttimeorder() {\n    let  requestUrl = API_URL+'auth/getalluser';\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {user} = responseJson;\n    let arrlist =user.split(',');\n    for(var i=0;i<arrlist.length;i++){\n      let orderitem = {\n        id: randomString(10),\n        user: arrlist[i]\n      }\n      setList_User([...list_user, orderitem])\n      list_user.push(orderitem)\n      console.log(list_user)\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    if(orders.length!=0 || list_orderhistory.length>0){\n      setLoading(false)\n    }\n    setList_OrderHistory([])\n    useEff=useEff+1\n    setuseEff(useEff)\n    if(role===\"ROLE_ADMIN\"){\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\n    }else {\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\n\n    }\n    if(startDate==null || endDate==null){\n      setKeyDateStartTrue(0)\n      setKeyDateEndTrue(0)\n      keydatestart=0\n      keydateend=0\n    }else if(startDate!=null && endDate!=null){\n      keydatestart=startDate.getTime()\n      setKeyDateStart(keydatestart)\n      keydateend=endDate.getTime()\n      setKeyDateEnd(keydateend)\n      keydate=1\n      setKeyDate(keydate)\n    }\n\n    totaldordershow=totaldorder\n    setTotalOrderShow(totaldordershow)\n    setTotalOrder(0)\n\n    totaltimebuffedordershow=totaltimebuffedorder\n    setTotalTimeBuffedOrderShow(totaltimebuffedordershow)\n    totaltimebuffedorder=0\n    setTotalTimeBuffedOrder(0)\n    if(useEff<=1){\n      getcounttimeorder();\n    }\n\n  }, [keyusertrue,keydate,startDate,endDate,keydatestart,keydateend,keytrue,keyuser,key,orders.length,,])\n\n  const selectGroup = (item: Group) => {\n    dispatch(actions.selectGroup(item))\n  }\n\n  async function Export(csvData:OrderModelChecked[],fileName:string){\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], {type: fileType});\n    FileSaver.saveAs(data, fileName + fileExtension);\n  }\n\n  const addGroup = () => {\n    if (groupName.length === 0) {\n      alert('vui lòng điền tên nhóm')\n      return\n    }\n\n    dispatch(actions.addGroupRequest(groupName))\n    setGroupName('')\n  }\n\n  const isShowFixMulti = orders.find((item) => {\n    if (item.checked) {\n      return true\n    }\n    return false\n  })\n\n  return (\n    <div className={`card ${className}`}>\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-5 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Đơn đã xong</span>\n              <span  className='ml-2 fw-bold fs-7'>({useEff<=1?sumorder:totaldordershow} Video)</span>\n              <p className=\"fw-bold c-order__list\">\n                <span style={{fontSize:12,marginTop:5}}>Tổng đã chạy: {format1(useEff<=1?sumtimedone:totaltimebuffedordershow)}h</span>\n              </p>\n            </div>\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\n              <div style={{float:\"right\",fontWeight:\"bold\"}}>\n                <DatePicker\n\n                    value={startDate}\n                    onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\n                    }\n                    }\n\n                />\n                <DatePicker\n                    value={endDate}\n                    onChange={(date: React.SetStateAction<Date>) =>{\n                      setEndDate(date)\n                    }\n                    }\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",margin:10}}>\n            <div style={{width:\"60%\"}}>\n              <div>\n                <Input style={{margin:10,width:\"48%\",maxWidth:130,minWidth:60,height:40,float:\"left\"}}\n                       id=\"note\"\n                       name=\"note\"\n                       value={key}\n                       placeholder=\"Search...\"\n                       onChange={(e) => setKey(e.target.value)}\n                       type=\"text\"\n                />\n                <button style={{fontWeight:'bold',color:\"black\",backgroundColor:\"#c0e1ce\",height:40,marginTop:10,float:\"left\"}}\n                        onClick={() => {setKeyTrue(1)\n                        }}\n                        className='btn btn-sm'\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n            <div style={{width:\"40%\"}}>\n              <button style={{height:40,margin:10,float:\"right\"}}\n                      onClick={() => {Export(list_orderhistory,nameExport)\n                      }}\n                      className='btn btn-success'\n              >\n                Export\n              </button>\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\n                     onChange={(e) => {\n                       setKeyUser(e.target.value)\n                       setKeyUserTrue(1)\n                     }}\n                     className=\"form-control form-control-solid\"\n                     type=\"select\"\n                     value={keyuser}\n              >\n                {\n                  list_user.map((item, index) => {\n                    return(\n                        <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\n                          {item.user}</option>)\n                  })\n                }\n\n              </Input>}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='card-body py-3'>\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Info</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Start</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>End</span>\n                </th>\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\n                </th>}\n                <th   className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {orders &&\n                orders.map((order: OrderModel, index: number) => {\n                  if (keyusertrue==0&&keytrue==0&&keydate==0) {\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keytrue==0&&keydate==0){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0 )&&keytrue==1&&keyusertrue==0&&keydate==0){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }else if((keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)&&keytrue==0&&keyusertrue==0&&keydate==1){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }\n                  else if(order.user.indexOf(keyuser)>=0&&keytrue==0&&keyusertrue==1&&keydate==1&&\n                      (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\n                  ){\n                    console.log('Oke'+order.enddate)\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }else if((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0 )&&keytrue==1&&keyusertrue==0&&keydate==1&&\n                      (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)\n                  ){\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keydate==0) {\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }\n                  else if(((order.videoid.indexOf(key)>=0 || order.note.indexOf(key)>=0) && order.user.indexOf(keyuser)>=0 )&&keytrue==1&&keyusertrue==1&&keydate==1&&\n                      (keydatestart<=order.enddate&&order.enddate<=keydateend+24*60*60*1000-1)) {\n                    if(index===0){\n                      totaldorder=1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)\n                    }else{\n                      totaldorder=totaldorder+1\n                      totaltimebuffedorder=Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600)+totaltimebuffedorder\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      videoid: order.videoid,\n                      timebuff:order.timebuff,\n                      viewtotal:order.viewtotal,\n                      timebuffhtotal: Math.round(Number(order.timebuffhtotal==null?0:order.timebuffhtotal)/3600),\n                      viewstart:order.viewstart,\n                      viewend:order.viewend,\n                      insertdate: new Date(order.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.insertdate).toLocaleTimeString('vn-VN'),\n                      enddate: new Date(order.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(order.enddate).toLocaleTimeString('vn-VN'),\n                      cancel:order.cancel,\n                      user:order.user,\n                      note:order.note,\n                      price:order.price\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.videoid+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }\n                    return null\n                })}\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n      {showAdd && (\n        <AddModal\n          show={true}\n          close={() => {\n            setShowAdd(false)\n          }}\n        />\n      )}\n\n      <EditMulti\n        show={showEditMulti}\n        close={() => {\n          setShowEditMulti(false)\n        }}\n      />\n      <AddManualModal\n        show={showAddManual}\n        close={() => {\n          setShowAddManual(false)\n        }}\n      />\n    </div>\n  )\n}\n\nexport {OrderList}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersCRUD.ts",["2730"],"import axios from 'axios'\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\n\n\n\nexport async function getListOrder(user:string) {\n  const res:any = await getFunciton(\"videobuffh/getorderbuffhhistory?user=\"+user)\n  return res\n}\n\nexport async function getOrderFilter(key:string,user:string) {\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\n  return res\n}\n\nexport async function updateSetting(channel_prior:number) {\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\n  return res\n}\n\nexport async function updateOrder(order:OrderModel) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\n  return res\n}\n\n\nexport async function addOrder(order:OrderForm) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\nexport async function addOrderManual(order:OrderFormManual) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\n  return res\n}\n\nexport async function addOrderMulti(order:OrderPost) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\n\n\n\n\nexport async function addGroup(groupName:string) {\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\n    name: groupName\n  })\n  return res\n}\n\nexport async function deleteGroup(id:number) {\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\n  return res\n}\n\nexport async function deleteChannel(videoid:string) {\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\n  return res\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditModal\\index.tsx",["2731","2732","2733","2734","2735","2736","2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orderhistory/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\nimport {updateAccount} from \"../../../accounts/redux/AccountCRUD\";\nimport {updateOrder} from \"../../redux/OrdersCRUD\";\n\n\ntype Props = {\n    item: OrderModel\n\n}\n\nconst EditModal: React.FC<Props> = ({ item}) => {\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\n    //const groups: Group[] = useSelector<RootState>(({ orders }) => orders.groups, shallowEqual) as Group[] || []\n    //const orders: OrderModel[] = useSelector<RootState>(({ orders }) => orders.orders, shallowEqual) as OrderModel[] || []\n\n\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(item.maxthreads)\n    //const [videoid, setVideoid] = useState(\"\")\n    //const [list_video, setList_video] = useState(\"\")\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(4000)\n    //\n    const [homerate,setHome_rate]=useState(item.homerate)\n    const [searchrate,setSearch_rate]=useState(item.searchrate)\n    const [suggestrate,setSuggest_rate]=useState(item.suggestrate)\n    const [directrate,setDirect_rate]=useState(item.directrate)\n    //\n    const [likerate,setLike_rate]=useState(item.likerate)\n    const [commentrate,setComment_rate]=useState(item.commentrate)\n    const [mobilerate,setMobile_rate]=useState(item.mobilerate)\n    const [user,setUser]=useState(username)\n    const [note, setNote] = useState(item.note)\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(item.timebuff)\n    const [optionbuff, setOptionbuff] = useState(item.optionbuff)\n    const [enabled,setEnabled]=useState(item.enabled)\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n\n    const submit = () => {\n\n        if(homerate+searchrate+suggestrate+directrate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(likerate>100||likerate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>1000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n\n        dispatch(actions.requestUpdate({\n            ...item,\n            homerate,\n            note,\n            directrate,\n            commentrate,\n            mobilerate,\n            searchrate,\n            enabled,\n            maxthreads,\n            viewstart,\n            likerate,\n            suggestrate,\n            timebuff,\n            optionbuff,\n            user\n        }))\n     \n    }\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Update {item.videoid}</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt danh sách đơn</p>\n                    <Form>\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={homerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={searchrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggestrate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={directrate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={likerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={commentrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Mobile\n                                </Label>\n                                <Input\n                                    id=\"mobilerate\"\n                                    name=\"mobilerate\"\n                                    value={mobilerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                   Time(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <div>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" >\n                                    Ghi chú\n                                </Label>\n                                <Input\n                                    id=\"note\"\n                                    name=\"note\"\n                                    value={note}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"...\"\n                                    onChange={(e) => setNote(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Chế độ buff\n                            </Label>\n                            <Input\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={optionbuff}\n                            >\n                                <option key={10} value={10}>\n                                    {\"10 phút\"}\n                                </option>\n                                <option key={30} value={30}>\n                                    {\"30 phút\"}\n                                </option>\n                                <option key={60} value={60}>\n                                    {\"60 phút\"}\n                                </option>\n                                <option key={120} value={120}>\n                                    {\"120 phút\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Auto\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button  type=\"button\"  onClick={submit} className=\"btn btn-primary\">Lưu</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\nexport default EditModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditMulti\\index.tsx",["2748","2749","2750","2751","2752","2753","2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766"],"import React, { useState, useEffect } from 'react'\nimport { OrderModel } from 'app/modules/orderhistory/models/Order'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal,\n    Form, FormGroup, Input, Label, ModalFooter,\n    ModalHeader, ModalBody\n} from \"reactstrap\"\nimport {useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\n\n\ntype Props = {\n    show: boolean\n    close: () => void\n}\nconst EditMulti: React.FC<Props> = ({ show,close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orderhistory }) => orderhistory.groups, shallowEqual) as Group[] || []\n    const orders: OrderModel[] = useSelector<RootState>(({ orderhistory }) => orderhistory.orders, shallowEqual) as OrderModel[] || []\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(100)\n    const [videoid, setVideoid] = useState(\"\")\n    //const [list_video, setList_video] = useState(\"\")\n    //\n    const [view_need, setView_need] = useState(1000)\n    const [premium_rate,setPremium_rate]=useState(5)\n    const [view_percent,setView_percent]=useState(4000)\n    //\n    const [homerate,setHome_rate]=useState(0)\n    const [searchrate,setSearch_rate]=useState(80)\n    const [suggestrate,setSuggest_rate]=useState(0)\n    const [directrate,setDirect_rate]=useState(20)\n    const [user,setUser]=useState(username)\n    const [likerate,setLike_rate]=useState(25)\n    const [commentrate,setComment_rate]=useState(25)\n    const [mobilerate,setMobile_rate]=useState(0)\n    const [optionbuff, setOptionbuff] = useState(0)\n    const [note, setNote] = useState(\"\")\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(4000)\n    //\n    const [enabled,setEnabled]=useState(1)\n\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    \n    const submit = () => {\n        const arr:string[]=[]\n        orders.forEach(item=>{\n            if(item.checked==true)\n            arr.push(item.videoid)\n        })\n        const videoid=arr.join('\\n')\n        if (view_need % 100 !== 0 || view_need ==0) {\n            alert(\"Số sub cần chạy phải chia hết cho 100\")\n            return\n        }\n        if(homerate+searchrate+suggestrate+directrate !=100){\n            alert(\"Tổng nguồn view không đúng\")\n            return\n        }\n        if(likerate>100||likerate<0){\n            alert(\"Tỉ lệ like không đúng\")\n            return\n        }\n        if(view_percent>10000000||view_percent<0){\n            alert(\"phần trăm xem video không đúng\")\n            return\n        }\n        if(commentrate>100||commentrate<0){\n            alert(\"Tỉ lệ comment không đúng\")\n            return\n        }\n\n        dispatch(actions.editMultiOrderRequest({\n            videoid,\n            homerate,\n            note,\n            directrate,\n            commentrate,\n            mobilerate,\n            searchrate,\n            enabled,\n            maxthreads,\n            viewstart,\n            likerate,\n            suggestrate,\n            timebuff,\n            optionbuff,\n            user\n        }))\n     \n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Sửa nhiệm vụ</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p>Cài đặt danh sách đơn</p>\n                    <Form>\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home\n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={homerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={searchrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggestrate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={directrate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={likerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={commentrate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Mobile\n                                </Label>\n                                <Input\n                                    id=\"mobilerate\"\n                                    name=\"mobilerate\"\n                                    value={mobilerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Time(h)\n                                </Label>\n                                <Input\n                                    id=\"mobile_rate\"\n                                    name=\"mobile_rate\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <div>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" >\n                                    Ghi chú\n                                </Label>\n                                <Input\n                                    id=\"note\"\n                                    name=\"note\"\n                                    value={note}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"...\"\n                                    onChange={(e) => setNote(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Chế độ buff\n                            </Label>\n                            <Input\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={optionbuff}\n                            >\n                                <option key={10} value={10}>\n                                    {\"10 phút\"}\n                                </option>\n                                <option key={30} value={30}>\n                                    {\"30 phút\"}\n                                </option>\n                                <option key={60} value={60}>\n                                    {\"60 phút\"}\n                                </option>\n                                <option key={120} value={120}>\n                                    {\"120 phút\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Auto\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Cập nhật\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default EditMulti","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddManualModal\\index.tsx",["2767","2768","2769","2770","2771","2772","2773","2774","2775"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Modal,\n    Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\ntype Props = {\n    show: boolean\n    close: () => void\n}\n\nconst AddManualModal: React.FC<Props> = ({ show, close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orderhistory }) => orderhistory.groups, shallowEqual) as Group[] || []\n\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(100)\n    const [videoid, setVideoid] = useState(\"\")\n    const [homerate,setHome_rate]=useState(0)\n    //\n    const [searchrate,setSearch_rate]=useState(80)\n    const [suggestrate,setSuggest_rate]=useState(0)\n    const [directrate,setDirect_rate]=useState(20)\n    //\n    const [likerate,setLike_rate]=useState(25)\n    const [commentrate,setComment_rate]=useState(25)\n    const [mobilerate,setMobile_rate]=useState(0)\n    const [user,setUser]=useState(username)\n    const [note, setNote] = useState(\"\")\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(4000)\n    const [optionbuff, setOptionbuff] = useState(0)\n    const [enabled,setEnabled]=useState(1)\n\n\n    const dismissModal = () => {\n        dispatch(actions.clearcurrentOrder())\n    }\n    \n    const submit = () => {\n\n\n        if (videoid.trim() === \"\") {\n            alert(\"VideoId không để trống!\")\n            return\n        }\n        if(homerate+searchrate+suggestrate+directrate !=100){\n            alert(\"Tổng nguồn view không đúng!\")\n            return\n        }\n\n        async function getcounts(){\n            let videoidlist=videoid.split('\\n')\n            for (var i = 0; i < videoidlist.length; i++) {\n                const requestUrl = 'http://localhost:8000/videobuffh/checkduration?listvideo='+videoidlist[i];\n                const response= await fetch(requestUrl,{\n                    method: 'get',\n                    headers: new Headers({\n                        'Authorization': '1',\n                        'Content-Type': 'application/x-www-form-urlencoded'\n                    })\n                });\n                const responseJson= await  response.json();\n                const {duration}=responseJson;\n                if(duration<optionbuff){\n                    alert(\"VideoId không để trống!\"+duration.toString())\n                }\n\n            }\n\n\n        }\n        //getcounts()\n        dispatch(actions.addOrderManualRequest({\n            videoid,\n            homerate,\n            note,\n            directrate,\n            commentrate,\n            mobilerate,\n            searchrate,\n            enabled,\n            maxthreads,\n            viewstart,\n            likerate,\n            suggestrate,\n            timebuff,\n            optionbuff,\n            user\n        }))\n     \n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách VideoId</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Danh sách VideoId\n                            </Label>\n                            <Input style={{height:200}}\n                                id=\"list_id\"\n                                name=\"list_id\"\n                                className=\"form-control form-control-solid\"\n                                placeholder={\"1 VideoId một dòng!\"}\n                                value={videoid}\n                                type={\"textarea\"}\n                                onChange={(e) => setVideoid(e.target.value)}\n                            />\n                        </FormGroup>\n\n                        <p>Nguồn view tổng = 100%</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Home \n                                </Label>\n                                <Input\n                                    id=\"home_rate\"\n                                    name=\"home_rate\"\n                                    value={homerate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Search\n                                </Label>\n                                <Input\n                                    id=\"search_rate\"\n                                    name=\"search_rate\"\n                                    value={searchrate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Suggest\n                                </Label>\n                                <Input\n                                    id=\"suggest_rate\"\n                                    name=\"suggest_rate\"\n                                    value={suggestrate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Direct\n                                </Label>\n                                <Input\n                                    id=\"direct_rate\"\n                                    name=\"direct_rate\"\n                                    value={directrate}\n                                    disabled={role === \"ROLE_ADMIN\" ? false : true}\n                                    onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <p>Cài đặt tương tác</p>\n                        <div className='flex flex-row justify-between space-x-3'>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Like\n                                </Label>\n                                <Input\n                                    id=\"like_rate\"\n                                    name=\"like_rate\"\n                                    value={likerate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Comment\n                                </Label>\n                                <Input\n                                    id=\"comment_rate\"\n                                    name=\"comment_rate\"\n                                    value={commentrate}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    % Mobile\n                                </Label>\n                                <Input\n                                    id=\"mobilerate\"\n                                    name=\"mobilerate\"\n                                    value={mobilerate}\n                                    className=\"form-control form-control-solid\"\n                                    onChange={(e) => setMobile_rate(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Luồng\n                                </Label>\n                                <Input\n                                    id=\"max_thread\"\n                                    name=\"max_thread\"\n                                    value={maxthreads}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 1000\"\n                                    onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" className=\"required form-label\">\n                                    Time(h)\n                                </Label>\n                                <Input\n                                    id=\"timebuffh\"\n                                    name=\"timebuffh\"\n                                    value={timebuff}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"ví dụ : 100\"\n                                    onChange={(e) => setTimebuff(parseInt(e.target.value))}\n                                    type=\"number\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <div>\n                            <FormGroup>\n                                <Label for=\"exampleEmail\" >\n                                    Ghi chú\n                                </Label>\n                                <Input\n                                    id=\"note\"\n                                    name=\"note\"\n                                    value={note}\n                                    className=\"form-control form-control-solid\"\n                                    placeholder=\"...\"\n                                    onChange={(e) => setNote(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </FormGroup>\n                        </div>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Chế độ buff\n                            </Label>\n                            <Input\n                                onChange={(e) => setOptionbuff(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={optionbuff}\n                            >\n                                <option key={10} value={10}>\n                                    {\"10 phút\"}\n                                </option>\n                                <option key={30} value={30}>\n                                    {\"30 phút\"}\n                                </option>\n                                <option key={60} value={60}>\n                                    {\"60 phút\"}\n                                </option>\n                                <option key={120} value={120}>\n                                    {\"120 phút\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Auto\"}\n                                </option>\n                            </Input>\n\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Trạng thái\n                            </Label>\n                            <Input\n                                onChange={(e) => setEnabled(parseInt(e.target.value))}\n                                className=\"form-control form-control-solid\"\n                                type=\"select\"\n                                value={enabled}\n                            >\n                                <option key={1} value={1}>\n                                    {\"Chạy\"}\n                                </option>\n                                <option key={2} value={2}>\n                                    {\"Test1\"}\n                                </option>\n                                <option key={3} value={3}>\n                                    {\"Test2\"}\n                                </option>\n                                <option key={0} value={0}>\n                                    {\"Ngừng\"}\n                                </option>\n                            </Input>\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} style={{color:'white',backgroundColor:\"#26695c\"}}  type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddManualModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddModal\\index.tsx",["2776","2777","2778","2779","2780","2781","2782","2783","2784","2785","2786","2787","2788","2789","2790","2791","2792"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Modal,\n  Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\ntype Props = {\n  show: boolean\n  close: () => void\n}\n\nconst AddModal: React.FC<Props> = ({ show, close }) => {\n  const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n  const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n  const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n  const adding: boolean = useSelector<RootState>(({ orderhistory }) => orderhistory.adding, shallowEqual) as boolean || false\n  const groups: Group[] = useSelector<RootState>(({ orderhistory }) => orderhistory.groups, shallowEqual) as Group[] || []\n\n\n  const dispatch = useDispatch()\n  const [maxthreads, setMaxthreads] = useState(100)\n  const [videoid, setVideoid] = useState(\"\")\n  //const [list_video, setList_video] = useState(\"\")\n  //\n  const [view_need, setView_need] = useState(1000)\n  const [premium_rate,setPremium_rate]=useState(5)\n  const [view_percent,setView_percent]=useState(4000)\n  //\n  const [homerate,setHome_rate]=useState(0)\n  const [searchrate,setSearch_rate]=useState(80)\n  const [suggestrate,setSuggest_rate]=useState(0)\n  const [directrate,setDirect_rate]=useState(20)\n  const [user,setUser]=useState(username)\n  const [likerate,setLike_rate]=useState(25)\n  const [commentrate,setComment_rate]=useState(25)\n  const [mobilerate,setMobile_rate]=useState(0)\n  const [optionbuff, setOptionbuff] = useState(10)\n  const [note, setNote] = useState(\"\")\n  const [viewstart, setViewstart] = useState(0)\n  const [timebuff, setTimebuff] = useState(0)\n  //\n  const [enabled,setEnabled]=useState(1)\n\n\n  const dismissModal = () => {\n    dispatch(actions.clearcurrentOrder())\n  }\n\n  const submit = () => {\n\n    if (videoid.trim() === \"\") {\n      alert(\"Điền list kênh cần chạy\")\n      return\n    }\n    if(homerate+searchrate+suggestrate+directrate !=100){\n      alert(\"Tổng nguồn view không đúng\")\n      return\n    }\n\n    if(view_percent>10000000||view_percent<0){\n      alert(\"phần trăm xem video không đúng\")\n      return\n    }\n    dispatch(actions.addOrderRequest({\n      videoid,\n      homerate,\n      note,\n      directrate,\n      commentrate,\n      mobilerate,\n      searchrate,\n      enabled,\n      maxthreads,\n      viewstart,\n      likerate,\n      suggestrate,\n      timebuff,\n      optionbuff,user\n    }))\n\n  }\n\n  useEffect(() => {\n    if (!adding) {\n      close()\n    }\n  }, [adding])\n\n  return (\n      <Modal isOpen={show}\n             modalTransition={{ timeout: 500 }}>\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\">Thêm nhiệm vụ với danh sách kênh</h5>\n            <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n              <span className=\"svg-icon svg-icon-2x\"></span>\n            </div>\n          </div>\n          <div className=\"modal-body\">\n            <p>Cài đặt đơn</p>\n            <Form>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Danh sách id kênh cần chạy sub\n                </Label>\n                <Input\n                    id=\"list_id\"\n                    name=\"list_id\"\n                    className=\"form-control form-control-solid\"\n                    placeholder={\"Id kênh\"}\n                    value={videoid}\n                    type={\"textarea\"}\n                    onChange={(e) => setVideoid(e.target.value)}\n                />\n              </FormGroup>\n              <p>Nguồn view tổng = 100%</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Home\n                  </Label>\n                  <Input\n                      id=\"home_rate\"\n                      name=\"home_rate\"\n                      value={homerate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setHome_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Search\n                  </Label>\n                  <Input\n                      id=\"search_rate\"\n                      name=\"search_rate\"\n                      value={searchrate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setSearch_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Suggest\n                  </Label>\n                  <Input\n                      id=\"suggest_rate\"\n                      name=\"suggest_rate\"\n                      value={suggestrate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setSuggest_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Direct\n                  </Label>\n                  <Input\n                      id=\"direct_rate\"\n                      name=\"direct_rate\"\n                      value={directrate}\n                      disabled={role === \"ROLE_ADMIN\" ? false : true}\n                      onChange={(e) => setDirect_rate(parseInt(e.target.value))}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <p>Cài đặt tương tác</p>\n              <div className='flex flex-row justify-between space-x-3'>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ Like\n                  </Label>\n                  <Input\n                      id=\"like_rate\"\n                      name=\"like_rate\"\n                      value={likerate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setLike_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Tỉ lệ comment\n                  </Label>\n                  <Input\n                      id=\"comment_rate\"\n                      name=\"comment_rate\"\n                      value={commentrate}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setComment_rate(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Luồng max\n                  </Label>\n                  <Input\n                      id=\"max_thread\"\n                      name=\"max_thread\"\n                      value={maxthreads}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 1000\"\n                      onChange={(e) => setMaxthreads(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"exampleEmail\" className=\"required form-label\">\n                    Time Buff(h)\n                  </Label>\n                  <Input\n                      id=\"mobile_rate\"\n                      name=\"mobile_rate\"\n                      value={view_percent}\n                      className=\"form-control form-control-solid\"\n                      placeholder=\"ví dụ : 100\"\n                      onChange={(e) => setView_percent(parseInt(e.target.value))}\n                      type=\"number\"\n                  />\n                </FormGroup>\n              </div>\n              <FormGroup>\n                <Label for=\"exampleEmail\" className=\"required form-label\">\n                  Trạng thái\n                </Label>\n                <Input\n                    onChange={(e) => setEnabled(parseInt(e.target.value))}\n                    className=\"form-control form-control-solid\"\n                    type=\"select\"\n                    value={enabled}\n                >\n                  <option key={1} value={1}>\n                    {\"Chạy\"}\n                  </option>\n                  <option key={0} value={0}>\n                    {\"Ngừng\"}\n                  </option>\n                </Input>\n              </FormGroup>\n            </Form>\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" onClick={close} className=\"btn btn-light\" >Thoát</button>\n            <button disabled={adding} type=\"button\" onClick={submit} className=\"btn btn-primary\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n          </div>\n        </div>\n      </Modal>\n  )\n}\n\nexport default AddModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\components\\OrderItem\\index.tsx",["2793","2794","2795","2796","2797","2798","2799","2800","2801","2802","2803","2804","2805","2806","2807","2808","2809","2810","2811","2812","2813"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { OrderModel } from '../../models/Order'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport { getFunciton } from 'utils/ApiHelper'\nimport {RootState} from \"../../../../../setup\";\ntype Props = {\n    item: OrderModel,\n    showEdit: boolean,\n    index: number,\n    //increase: number\n}\n\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\n    const role: string =\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n    const [running, setRunning] = useState(0)\n    const [success, setSuccess] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n    function format1(n:number) {\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n        });\n    }\n\n\n    const dispatch = useDispatch()\n    const clickUpdateHandler = () => {\n        dispatch(actions.showcurrentOrder(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"bạn có chắc chắn muốn xóa đơn : \"+item.videoid!) == true) {\n            dispatch(actions.deleteOrderRequest(item.videoid))\n        }\n    }\n\n\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\n    //const increase = item.current_view - item.start_view\n    return (\n        <tr style={{margin:100}}>\n\n            <td>\n                <span style={{fontWeight:'bold',fontSize:11,fontFamily:'cursive'}} className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n            <td>\n\n                <a target=\"_blank\" style={{textDecorationLine:'none',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5,color:\"white\",}} href={'https://www.youtube.com/watch?v=' + item.videoid} className='badge badge-danger'>\n                    {item.videoid}\n                </a>\n                {role==\"ROLE_ADMIN\"&&<span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Price | <span style={{color:\"red\"}}>{format1(Math.round(Number(item.price==null?0:item.price)))}đ</span></span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>{(item.optionbuff==10?'10min':item.optionbuff==30?'30':item.optionbuff==60?'60':item.optionbuff==0?'Auto':'120')+'|'+Math.round(Number(item.duration==null?0:item.duration)/60)+'min'}</span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-warning'>{(Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600))+\"/\"+item.timebuff}</span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-dark'>{(item.viewtotal==null?0:item.viewtotal)}</span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success'>{Math.round((Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)/item.timebuff*100))+'%'}</span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success'>{item.viewstart} | {item.viewend==null?'...':item.viewend}</span>\n                    <br/>\n                </span>}\n                {role==\"ROLE_USER\"&&<span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Price | <span style={{color:\"red\"}}>{format1(Math.round(Number(item.price==null?0:item.price)))}đ</span></span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Order | <span style={{color:\"#ffffff\"}}>{item.timebuff+'h'}</span></span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Buff | <span style={{color:\"#000000\"}}>{Math.round(Number(item.duration==null?0:item.duration<3600?1800:item.duration<7200?3600:7200)/60)+'min'}</span></span>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Total | <span style={{color:\"#000000\"}}>{Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)+'h'}</span></span>\n                    <span style={{ color:'white',fontSize:11,backgroundColor:\"#03d96e\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Percent | <span style={{color:\"#fafafa\"}}>{Math.round((Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)/item.timebuff*100))+'%'}</span></span>\n                    {item.viewend!=null&&<span style={{ color:'white',fontSize:11,backgroundColor:\"#26695c\",marginRight:5,marginBottom:5}} className='badge badge-success 1'>Views | <span style={{color:\"#fafafa\"}}>{item.viewstart}-{item.viewend}</span></span>}\n                    <br/>\n                </span>}\n            </td>\n            <td >\n                {\n                    item.enabled === 1 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>R</span> :item.enabled === 2 ?\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-warning'>T1</span>:item.enabled === 3 ?\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-primary'>T2</span>:\n                            <span style={{color:'white',fontSize:11,backgroundColor:\"#26695c\"}} className='badge badge-danger'>S</span>\n\n                }\n                {\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.insertdate).toLocaleDateString('vn-VN') +\" \"+ new Date(item.insertdate).toLocaleTimeString('vn-VN')}</span>\n                }\n            </td>\n            <td>\n                {\n                    item.cancel === 0 ? <span style={{color:'white',fontSize:11,backgroundColor:\"#03d96e\"}} className='badge badge-success'>D</span> :\n                        <span style={{color:'white',fontSize:11,backgroundColor:\"#b7080f\"}} className='badge badge-danger'>C</span>\n\n                }\n                {\n                    <span style={{color:'black',fontWeight:\"bold\",fontSize:11,margin:5}} >{new Date(item.enddate).toLocaleDateString('vn-VN') +\" \"+ new Date(item.enddate).toLocaleTimeString('vn-VN')}</span>\n                }\n\n            </td>\n            {role!=\"ROLE_USER\"&&<td>\n                <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.user}</span>\n            </td>}\n            <td>\n               <span style={{color:'black',fontSize:11,fontWeight:'bold'}} >{item.note}</span>\n            </td>\n        </tr>\n    )\n}\n\nexport default OrderItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx",["2814","2815","2816"],"import React from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { HistoryModel } from 'app/modules/history/models/Account'\nimport moment from 'moment'\ntype Props = {\n    item: HistoryModel,\n    index: number\n}\n\nconst HistoryItem: React.FC<Props> = ({ item, index }) => {\n    return (\n        <tr>\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span>{index + 1}</span>\n                </div>\n            </td>\n            <td>\n                <div className='d-flex flex-stack mb-2'>\n                    <span style={{ color:'black',fontSize:11,backgroundColor:\"#c0e1ce\"}} className='badge badge-success 1'>{item.date}</span>\n                </div>\n            </td>\n            <td>\n\n                <div   className='progress h-20px w-300px'>\n                    <div\n\n                        className='progress-bar bg-active-warning'\n                        role='progressbar'\n                        style={{width:(item.time/item.maxtime)*300,fontWeight:\"bold\",color:\"yellow\",backgroundColor:\"#26695c\"}}\n                    >{item.time}</div>\n                </div>\n\n            </td>\n            <td>\n                <div   className='progress h-20px w-300px'>\n                    <div\n\n                        className='progress-bar bg-active-warning'\n                        role='progressbar'\n                        style={{width:(item.view/item.maxview)*300,fontWeight:\"bold\",color:\"white\",backgroundColor:\"#a83939\"}}\n                    >{item.view}</div>\n                </div>\n\n            </td>\n        </tr>\n    )\n}\n\nexport default HistoryItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\AccountPage.tsx",["2817","2818","2819","2820"],"import React,{useEffect,useState} from 'react'\nimport {UserList} from './UserList'\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\nimport {actions} from './redux/AccountRedux'\nimport {AccountModel} from 'app/modules/users/models/Account'\nimport {RootState} from 'setup'\nimport EditModal  from './modals/EditModal'\nimport {Input} from \"reactstrap\";\nconst AccountPage: React.FC = () => {\n  const dispatch = useDispatch()\n  const [vpstype, setvpstype] = useState('')\n  const accounts: AccountModel[] = useSelector<RootState>(({users}) => users.accounts, shallowEqual) as AccountModel[] || []\n  const currentAccount: AccountModel = useSelector<RootState>(({users}) => users.currentAccount, shallowEqual) as AccountModel || undefined\n\n  useEffect(() => {\n    dispatch(actions.requestAccounts())\n  },[]);\n\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n\n        <div className='col-xl-12'>\n          <UserList accounts={accounts} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n        {\n         currentAccount&&<EditModal key={currentAccount?.username} item={currentAccount} />\n        }\n      </div>\n    </>\n  )\n}\nexport default AccountPage\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountRedux.ts",["2821","2822","2823","2824"],"import { Action } from '@reduxjs/toolkit'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { AccountModel,AccountForm } from '../models/Account'\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  RequestAccounts: '[Users] Requested',\n  AccountsLoadedSuccess: '[Users] Loaded succcess',\n  AccountsLoadedFail: '[Users] load fail',\n  ShowCurrentAccount: '[Users] Show Account',\n  RequestUpdate: '[Users] Requested Update',\n  UpdateSuccess: '[Users] Update Success',\n  UpdateFail: '[Users] Update Fail',\n  ClearSelected:'[Users] Clear selected account',\n  DeleteVpsRequest: '[Users] Delete Account Request',\n  DeleteVpsSuccess: '[Users] Delete Account Success',\n  DeleteMultiVpsRequest: '[Users] Delete Account Request',\n  DeleteMultiVpsSuccess: '[Users] Delete Account Success',\n  CheckedChange: '[Users] Checked Change',\n  CheckedAllChange: '[Users] Checked All Change',\n  UpdateMultiOrderRequest: '[Users] Update Multi Account Request',\n  UpdateRestartMultiOrderRequest: '[Users] Update Restart Multi Account Request',\n  UpdateMultiSuccess: '[Users] Update Multi Success',\n}\n\nconst initialAccountState: IAccountState = {\n  accounts: [],\n  loading: false,\n  adding:false,\n  currentAccount:undefined\n}\n\nexport interface IAccountState {\n  accounts: AccountModel[]\n  loading: boolean\n  adding:boolean\n  currentAccount?:AccountModel\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-accounts', whitelist: [] },\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestAccounts: {\n        return {\n          ...state,\n          accounts: [],\n          loading: true\n        }\n      }\n      case actionTypes.AccountsLoadedSuccess: {\n        return {\n          ...state,\n          accounts: action.payload?.accounts || [],\n          loading: false\n        }\n      }\n      case actionTypes.AccountsLoadedFail: {\n        return {\n          ...state,\n          accounts: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\n          if(item.username===action.payload?.account?.username){\n            return action.payload?.account\n          }else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          accounts: remapAccounts,\n          loading: false,\n          currentAccount: undefined\n        }\n      }\n      case actionTypes.DeleteVpsSuccess: {\n        return {\n          ...state,\n          accounts: state.accounts.filter((item: AccountModel) => {\n            if (action.payload?.username.indexOf(item.username)>=0)  {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.ShowCurrentAccount: {\n        return {\n          ...state,\n          currentAccount: action.payload?.currentAccount\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentAccount: action.payload?.currentAccount\n        }\n      }\n\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          accounts:  state.accounts.map(item=>{\n            if(item.username===action.payload?.data?.username){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          accounts:  state.accounts.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateRestartMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.accounts.map((item:AccountForm) => {\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\n            if(_item.username===item.username){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          accounts: remaporders,\n          loading: false,\n          adding: false,\n          currentAccount: undefined\n        }\n      }\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\n  checkedChange: (data:{username:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\n    const {data: accounts} = yield getListAccount()\n    yield put(actions.fulfillAccounts(accounts.accounts))\n  })\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    //console.log(\"------update account param-----\",param.payload.account)\n    const {data: account} = yield updateAccount(param.payload.account)\n    console.log(\"------update account res-----\",account.account)\n    yield put(actions.updateSuccess(account.account))\n  })\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\n    try {\n      const payload = param.payload.vps\n      const { data: result } = yield deleteVps(payload)\n      if (result&&result.vps!==null) {\n        yield put(actions.deleteVpsSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateAccount(payload)\n      if (result && result.accounts) {\n        yield put(actions.updateMultiSuccess(result.accounts))\n      } else {\n        yield put(actions.updateFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.updateFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateResetVPS(payload)\n      if (result && result.accounts) {\n        yield put(actions.updateMultiSuccess(result.accounts))\n      } else {\n        yield put(actions.updateFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.updateFail(\"\"))\n    }\n  })\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\UserList.tsx",["2825","2826","2827","2828","2829","2830","2831","2832","2833","2834","2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849","2850","2851","2852","2853","2854","2855","2856"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\nimport { AccountModel } from 'app/modules/users/models/Account'\n\nimport UserItem from './components/UserItem'\nimport {actions} from \"./redux/AccountRedux\";\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport {ComputerModel} from \"../history/models/Account\";\nimport {RootState} from \"../../../setup\";\nimport {Input} from \"reactstrap\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n  className: string,\n  accounts: AccountModel[]\n}\n\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\n\n  const dispatch = useDispatch()\n  const API_URL = process.env.REACT_APP_API_URL\n  const [loading, setLoading] = useState(true)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [total_user, settotal_user] = useState(0)\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\n  const [vpstpye, setvpstpye] = useState('')\n  const [keytrue, setKeyTrue] = useState(0)\n  const [keystatus, setKeyStatus] = useState('')\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\n  const [key, setKey] = useState(\"\")\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const isShowFixMulti = accounts.find((item) => {\n    if (item.checked) {\n\n      return true\n    }\n    return false\n  })\n  useEffect(() => {\n  },[]);\n\n\n  return (\n\n    <div className={`card ${className}`}>\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Danh sách User</span>\n              <span  className='ml-2 fw-bold fs-7'>({accounts.length} user)</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Menu */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n\n                <th className='w-5px'>STT</th>\n                <th className='min-w-100px '>Username</th>\n                <th className='min-w-100px'>Role</th>\n                <th className='min-w-100px'>Balance</th>\n                <th className='min-w-100px'>Discount</th>\n                <th className='min-w-100px'>MaxOrder</th>\n                <th className='min-w-100px'>Vip</th>\n                <th className='min-w-100px'>Note</th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n\n            <tbody>\n              {\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\n                      return <UserItem key={item.id+index} item={item} index={index} />\n                    })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n    </div>\n  )\n}\nexport  { UserList }","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountCRUD.ts",["2857"],"import axios from 'axios'\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\nimport { AccountModel } from '../models/Account'\n\n\n\nexport async function getListAccount() {\n  const res:any = await getFunciton(\"auth/list\")\n  return res\n}\n\n\nexport async function updateAccount(account:AccountModel) {\n  const res:any = await postWithoutTokenFunciton(\"auth/update\",account)\n  return res\n}\n\nexport async function updateResetVPS(account:AccountModel) {\n  const res:any = await postWithoutTokenFunciton(\"auth/updaterestart\",account)\n  return res\n}\n\nexport async function deleteVps(vps:string) {\n  const res:any = await deleteFunciton(\"auth/delete?username=\"+vps)\n  return res\n}\n\nexport async function allAccount() {\n  const res:any = await getFunciton(\"auth/gmails/countgmails\")\n  return res\n}","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\modals\\EditModal\\index.tsx",["2858","2859","2860","2861","2862","2863","2864","2865","2866","2867"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/users/models/Account'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\n\n\n\ntype Props = {\n    item: AccountModel\n}\nfunction format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n}\nconst EditModal: React.FC<Props> = ({ item }) => {\n    const dispatch = useDispatch()\n    const API_URL = process.env.REACT_APP_API_URL\n    const [balance, setbalance] = useState(0)\n    const [discount, setdiscount] = useState(item.discount)\n    const [maxorder, setmaxorder] = useState(item.maxorder)\n    const [note, setnote] = useState(item.note)\n    const [vip, setvip] = useState(item.vip)\n\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n    const updateUser = () => {\n        if(balance<100000 && balance!=0){\n            alert(\"Số tiền nhỏ nhất là 100,000đ!\")\n            return\n        }\n        if(discount>100 || discount<0){\n            alert(\"% giảm giá không hợp lệ!\")\n            return\n        }\n        if(maxorder<0){\n            alert(\"Giá trị số đơn max không hợp lệ!\")\n            return\n        }\n        dispatch(actions.requestUpdate({\n            ...item,\n            balance,\n            discount,\n            maxorder,\n            vip,\n            note,\n        }))\n    }\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update:  {item?.username}</h3>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Số tiền nạp</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={balance} type=\"number\" className=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setbalance(parseInt(e.target.value))}\n                        />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đ</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Giảm giá</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={discount} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setdiscount(parseInt(e.target.value))}\n                        />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">%</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Số đơn max</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={maxorder} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setmaxorder(parseInt(e.target.value))}\n                        />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>User Vip</p>\n                    <div className=\"input-group mb-5\">\n                        <Input\n                            onChange={(e) => setvip(parseInt(e.target.value))}\n                            className=\"form-control form-control-solid\"\n                            type=\"select\"\n                            style={{fontWeight:'bold'}}\n                            value={vip}\n                        >\n                            <option key={1} value={1}>\n                                {\"True\"}\n                            </option>\n                            <option key={0} value={0}>\n                                {\"False\"}\n                            </option>\n\n                        </Input>\n                    </div>\n\n                    <p style={{fontWeight:'bold'}}>Note</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={note} type=\"text\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setnote(e.target.value)}\n                        />\n                    </div>\n\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default EditModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\components\\UserItem\\index.tsx",["2868","2869","2870","2871","2872","2873","2874","2875","2876"],"import React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/users/models/Account'\nimport {useDispatch} from 'react-redux'\nimport {actions} from '../../redux/AccountRedux'\nimport moment from 'moment'\nimport {date} from \"yup\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n    item: AccountModel,\n    index:number\n}\nfunction format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n}\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const clickHandler =()=>{\n        dispatch(actions.showCurrentAccount(item))\n    }\n    const clickDeleteHandler = () => {\n        if (window.confirm(\"Bạn chắc chắn muốn xóa VPS IP: \"+item.username!) == true) {\n            dispatch(actions.deleteVpsRequest(item.username))\n        }\n    }\n    return (\n\n        <tr>\n            <td className='w-25px'>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n\n            <td>\n                <span >\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\n                        {item.username}\n                    </text>\n                            </span>\n            </td>\n            <td>\n                <span className='badge badge-dark' style={{fontSize:11, backgroundColor:item.role===\"ROLE_ADMIN\"?'#00b65c':'#396977'}}>\n                    <text >\n                    {item.role}\n                    </text>\n                </span>\n\n            </td>\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {format1(item.balance)}đ\n                                </text>\n                    </span>\n            </td>\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {item.discount}%\n                                </text>\n                    </span>\n            </td>\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {format1(item.maxorder)}\n                                </text>\n                    </span>\n            </td>\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {item.vip}\n                                </text>\n                    </span>\n            </td>\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {item.note}\n                                </text>\n                    </span>\n            </td>\n            <td>\n                <div className='d-flex justify-content-end flex-shrink-0'>\n                    <button\n                        onClick={()=>clickHandler()}\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                    >\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </button>\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default UserItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\AccountPage.tsx",["2877","2878","2879","2880"],"import React,{useEffect,useState} from 'react'\nimport {UserList} from './UserList'\nimport { useDispatch ,useSelector,shallowEqual} from 'react-redux'\nimport {actions} from './redux/AccountRedux'\nimport {AccountModel} from 'app/modules/setting/models/Account'\nimport {RootState} from 'setup'\nimport EditModal  from './modals/EditModal'\nimport {Input} from \"reactstrap\";\nconst AccountPage: React.FC = () => {\n  const dispatch = useDispatch()\n  const [vpstype, setvpstype] = useState('')\n  const accounts: AccountModel[] = useSelector<RootState>(({setting}) => setting.accounts, shallowEqual) as AccountModel[] || []\n  const currentAccount: AccountModel = useSelector<RootState>(({setting}) => setting.currentAccount, shallowEqual) as AccountModel || undefined\n\n  useEffect(() => {\n    dispatch(actions.requestAccounts())\n  },[]);\n\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n\n        <div className='col-xl-12'>\n          <UserList accounts={accounts} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n        {\n         currentAccount&&<EditModal key={currentAccount?.id} item={currentAccount} />\n        }\n      </div>\n    </>\n  )\n}\nexport default AccountPage\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountRedux.ts",["2881","2882","2883","2884"],"import { Action } from '@reduxjs/toolkit'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { AccountModel,AccountForm } from '../models/Account'\nimport {getListAccount, updateAccount, deleteVps, updateResetVPS} from './AccountCRUD'\nimport {OrderForm, OrderModel} from \"../../orders/models/Order\";\nimport {deleteChannel, updateOrder} from \"../../orders/redux/OrdersCRUD\";\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  RequestAccounts: '[Setting] Requested',\n  AccountsLoadedSuccess: '[Setting] Loaded succcess',\n  AccountsLoadedFail: '[Setting] load fail',\n  ShowCurrentAccount: '[Setting] Show Account',\n  RequestUpdate: '[Setting] Requested Update',\n  UpdateSuccess: '[Setting] Update Success',\n  UpdateFail: '[Setting] Update Fail',\n  ClearSelected:'[Setting] Clear selected account',\n  DeleteVpsRequest: '[Setting] Delete Account Request',\n  DeleteVpsSuccess: '[Setting] Delete Account Success',\n  DeleteMultiVpsRequest: '[Setting] Delete Account Request',\n  DeleteMultiVpsSuccess: '[Setting] Delete Account Success',\n  CheckedChange: '[Setting] Checked Change',\n  CheckedAllChange: '[Setting] Checked All Change',\n  UpdateMultiOrderRequest: '[Setting] Update Multi Account Request',\n  UpdateRestartMultiOrderRequest: '[Users] Update Restart Multi Account Request',\n  UpdateMultiSuccess: '[Setting] Update Multi Success',\n}\n\nconst initialAccountState: IAccountState = {\n  accounts: [],\n  loading: false,\n  adding:false,\n  currentAccount:undefined\n}\n\nexport interface IAccountState {\n  accounts: AccountModel[]\n  loading: boolean\n  adding:boolean\n  currentAccount?:AccountModel\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-accounts', whitelist: [] },\n  (state: IAccountState = initialAccountState, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestAccounts: {\n        return {\n          ...state,\n          accounts: [],\n          loading: true\n        }\n      }\n      case actionTypes.AccountsLoadedSuccess: {\n        return {\n          ...state,\n          accounts: action.payload?.accounts || [],\n          loading: false\n        }\n      }\n      case actionTypes.AccountsLoadedFail: {\n        return {\n          ...state,\n          accounts: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n\n        const remapAccounts = state.accounts.map((item: AccountModel)=>{\n          if(item.id===action.payload?.account?.id){\n            return action.payload?.account\n          }else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          accounts: remapAccounts,\n          loading: false,\n          currentAccount: undefined\n        }\n      }\n      case actionTypes.DeleteVpsSuccess: {\n        return {\n          ...state,\n          accounts: state.accounts.filter((item: AccountModel) => {\n            if (action.payload?.id===item.id)  {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.ShowCurrentAccount: {\n        return {\n          ...state,\n          currentAccount: action.payload?.currentAccount\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentAccount: action.payload?.currentAccount\n        }\n      }\n\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          accounts:  state.accounts.map(item=>{\n            if(item.id===action.payload?.data?.id){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          accounts:  state.accounts.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateRestartMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.accounts.map((item:AccountForm) => {\n          const findItem = action.payload?.accounts.find((_item:AccountForm)=>{\n            if(_item.id ===item.id){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          accounts: remaporders,\n          loading: false,\n          adding: false,\n          currentAccount: undefined\n        }\n      }\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestAccounts: () => ({ type: actionTypes.RequestAccounts }),\n  fulfillAccounts: (accounts: AccountModel[]) => ({ type: actionTypes.AccountsLoadedSuccess, payload: { accounts } }),\n  loadAccountsFail: (message: string) => ({ type: actionTypes.AccountsLoadedFail, payload: { message } }),\n  requestUpdate: (account: AccountModel) => ({ type: actionTypes.RequestUpdate, payload: { account } }),\n  updateSuccess: (account: AccountModel) => ({ type: actionTypes.UpdateSuccess, payload: { account } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showCurrentAccount: (currentAccount: AccountModel) => ({ type: actionTypes.ShowCurrentAccount, payload: { currentAccount } }),\n  clearCurrentAccount: () => ({ type: actionTypes.ClearSelected}),\n  deleteVpsRequest: (vps: string) => ({ type: actionTypes.DeleteVpsRequest, payload: { vps } }),\n  deleteVpsSuccess: (vps: string) => ({ type: actionTypes.DeleteVpsSuccess, payload: { vps } }),\n  checkedChange: (data:{username:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n  editMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  editRestartMultiOrderRequest: (data: AccountForm) => ({ type: actionTypes.UpdateRestartMultiOrderRequest, payload: { data } }),\n  updateMultiSuccess: (accounts: AccountForm[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { accounts } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestAccounts, function* userRequested(param: any) {\n    const {data: accounts} = yield getListAccount()\n    yield put(actions.fulfillAccounts(accounts.accounts))\n  })\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    //console.log(\"------update account param-----\",param.payload.account)\n    const {data: account} = yield updateAccount(param.payload.account)\n    console.log(\"------update account res-----\",account.account)\n    yield put(actions.updateSuccess(account.account))\n  })\n  yield takeLatest(actionTypes.DeleteVpsRequest, function* DeleteVpsRequest(param: any) {\n    try {\n      const payload = param.payload.vps\n      const { data: result } = yield deleteVps(payload)\n      if (result&&result.vps!==null) {\n        yield put(actions.deleteVpsSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateAccount(payload)\n      if (result && result.accounts) {\n        yield put(actions.updateMultiSuccess(result.accounts))\n      } else {\n        yield put(actions.updateFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.updateFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateRestartMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateResetVPS(payload)\n      if (result && result.accounts) {\n        yield put(actions.updateMultiSuccess(result.accounts))\n      } else {\n        yield put(actions.updateFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.updateFail(\"\"))\n    }\n  })\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\UserList.tsx",["2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899","2900","2901","2902","2903","2904","2905","2906","2907","2908","2909","2910","2911","2912","2913","2914","2915","2916"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '../../../_metronic/helpers'\nimport { AccountModel } from 'app/modules/setting/models/Account'\n\nimport UserItem from './components/UserItem'\nimport {actions} from \"./redux/AccountRedux\";\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport {ComputerModel} from \"../history/models/Account\";\nimport {RootState} from \"../../../setup\";\nimport {Input} from \"reactstrap\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n  className: string,\n  accounts: AccountModel[]\n}\n\nconst UserList: React.FC<Props> = ({ className, accounts }) => {\n\n  const dispatch = useDispatch()\n  const API_URL = process.env.REACT_APP_API_URL\n  const [loading, setLoading] = useState(true)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  const [showRestartMulti, setShowRestartMulti] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [total_user, settotal_user] = useState(0)\n  const [total_user_endtrial, settotal_user_endtrial] = useState(0)\n  const [vpstpye, setvpstpye] = useState('')\n  const [keytrue, setKeyTrue] = useState(0)\n  const [keystatus, setKeyStatus] = useState('')\n  const [keystatustrue, setKeyStatusTrue] = useState(0)\n  const [key, setKey] = useState(\"\")\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const isShowFixMulti = accounts.find((item) => {\n    if (item.checked) {\n\n      return true\n    }\n    return false\n  })\n  useEffect(() => {\n  },[]);\n\n\n  return (\n\n    <div className={`card ${className}`}>\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-12 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Cài đặt hệ thống</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Body */}\n      <div className='card-body py-3'>\n        {/* begin::Table container */}\n        <div className='table-responsive'>\n          {/* begin::Menu */}\n          <table className='table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='min-w-100px '>Price</th>\n                <th className='min-w-100px'>Bonus</th>\n                <th className='min-w-100px'>Maxorder</th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n\n            <tbody>\n              {\n                  accounts&&accounts?.map((item: AccountModel,index:number) => {\n                      return <UserItem key={item.id+index} item={item} index={index} />\n                    })\n              }\n\n            </tbody>\n            {/* end::Table body */}\n          </table>\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n    </div>\n  )\n}\nexport  { UserList }","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountCRUD.ts",["2917"],"import axios from 'axios'\nimport {postWithoutTokenFunciton, getFunciton, deleteFunciton} from 'utils/ApiHelper'\nimport { AccountModel } from '../models/Account'\n\n\n\nexport async function getListAccount() {\n  const res:any = await getFunciton(\"auth/setting\")\n  return res\n}\n\n\nexport async function updateAccount(account:AccountModel) {\n  const res:any = await postWithoutTokenFunciton(\"auth/updatesetting\",account)\n  return res\n}\n\nexport async function updateResetVPS(account:AccountModel) {\n  const res:any = await postWithoutTokenFunciton(\"auth/updaterestart\",account)\n  return res\n}\n\nexport async function deleteVps(vps:string) {\n  const res:any = await deleteFunciton(\"auth/delete?username=\"+vps)\n  return res\n}\n\nexport async function allAccount() {\n  const res:any = await getFunciton(\"auth/gmails/countgmails\")\n  return res\n}","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\modals\\EditModal\\index.tsx",["2918","2919","2920","2921","2922","2923","2924","2925","2926","2927"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/setting/models/Account'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/AccountRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Button, Modal, ModalFooter,\n    ModalHeader, ModalBody, Input\n} from \"reactstrap\"\n\n\n\ntype Props = {\n    item: AccountModel\n}\nfunction format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n}\nconst EditModal: React.FC<Props> = ({ item }) => {\n    console.log(\"------item------\", item)\n    const dispatch = useDispatch()\n    const API_URL = process.env.REACT_APP_API_URL\n    const [pricerate, setpricerate] = useState(item.pricerate)\n    const [bonus, setbonus] = useState(item.bonus)\n    const [maxorder, setmaxorder] = useState(item.maxorder)\n\n    const dismissModal = () => {\n        dispatch(actions.clearCurrentAccount())\n    }\n    const updateUser = () => {\n        if(pricerate<0){\n            alert(\"Số tiền nhỏ nhất là 0đ!\")\n            return\n        }\n        if(bonus>100 || bonus<0){\n            alert(\"Giá trị bonus không hợp lệ!\")\n            return\n        }\n        if(maxorder<0){\n            alert(\"Giá trị số đơn max không hợp lệ!\")\n            return\n        }\n        dispatch(actions.requestUpdate({\n            ...item,\n            pricerate,\n            bonus,\n            maxorder,\n        }))\n    }\n\n    return (\n        <Modal isOpen={true}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h3 style={{fontWeight:'bold',fontFamily:'monospace'}}  className=\"modal-title\">Update Setting</h3>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\">\n                    <p style={{fontWeight:'bold'}}>Price</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={pricerate} type=\"number\" className=\"form-control\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setpricerate(parseInt(e.target.value))}\n                        />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đ</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Bonus</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={bonus} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setbonus(parseInt(e.target.value))}\n                        />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">%</span>\n                    </div>\n                    <p style={{fontWeight:'bold'}}>Số đơn max</p>\n                    <div className=\"input-group mb-5\">\n                        <input style={{fontWeight:'bold'}} value={maxorder} type=\"number\" className=\"form-control\"  aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\n                               onChange={(e) => setmaxorder(parseInt(e.target.value))}\n                        />\n                        <span className=\"input-group-text\" id=\"basic-addon2\">đơn</span>\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button type=\"button\" onClick={updateUser} style={{backgroundColor:\"#26695c\",color:\"white\"}} className=\"btn \">Lưu</button>\n                </div>\n            </div>\n\n        </Modal>\n    )\n}\n\nexport default EditModal","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\components\\UserItem\\index.tsx",["2928","2929","2930","2931","2932","2933","2934"],"import React, {useEffect, useState} from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { AccountModel } from 'app/modules/setting/models/Account'\nimport {useDispatch} from 'react-redux'\nimport {actions} from '../../redux/AccountRedux'\nimport moment from 'moment'\nimport {date} from \"yup\";\nimport {round} from \"@popperjs/core/lib/utils/math\";\ntype Props = {\n    item: AccountModel,\n    index:number\n}\nfunction format1(n:number) {\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n        return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n}\nconst UserItem : React.FC<Props> = ({ item ,index}) => {\n    const dispatch = useDispatch()\n    const [loading, setLoading] = useState(false)\n    const clickHandler =()=>{\n        dispatch(actions.showCurrentAccount(item))\n    }\n    return (\n\n        <tr>\n            <td>\n                <span >\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\n                        {format1(item.pricerate)}đ\n                    </text>\n                            </span>\n            </td>\n            <td>\n                <span>\n                    <text style={{fontSize:12,fontWeight:\"bold\"}} >\n                    {item.bonus}%\n                    </text>\n                </span>\n\n            </td>\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {item.maxorder}\n                                </text>\n                    </span>\n            </td>\n            <td>\n                <div className='d-flex justify-content-end flex-shrink-0'>\n                    <button\n                        onClick={()=>clickHandler()}\n                        className='btn btn-icon btn-bg-light btn-active-color-primary btn-sm me-1'\n                    >\n                        <KTSVG path='/media/icons/duotune/art/art005.svg' className='svg-icon-3' />\n                    </button>\n                </div>\n            </td>\n        </tr>\n    )\n}\n\nexport default UserItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrdersPage.tsx",["2935","2936","2937","2938","2939"],"import React, { useEffect, useState } from 'react'\nimport { OrderList } from './OrderList'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { OrderModel } from './models/Order'\nimport { RootState } from 'setup'\nimport { actions } from './redux/OrdersRedux'\nimport {FormGroup, Input, Label} from \"reactstrap\";\n\nconst WidgetsPage: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const orders: OrderModel[] = useSelector<RootState>(({ balance }) => balance.orders, shallowEqual) as OrderModel[] || []\n  const role: string =\n      (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  useEffect(() => {\n    if(role.indexOf(\"ROLE_ADMIN\")>=0){\n      dispatch(actions.requestOrders(''))\n    }else{\n      dispatch(actions.requestOrders(user))\n    }\n  }, [])\n\n\n  return (\n    <>\n      <div className='row gy-5 gx-xl-12'>\n        <div className='col-xl-12'>\n          <OrderList done={1} orders={orders} className='card-xxl-stretch mb-5 mb-xl-12' />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default WidgetsPage\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersRedux.ts",["2940","2941","2942","2943","2944","2945","2946"],"import { Action } from '@reduxjs/toolkit'\nimport { App } from 'app/App'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\nimport { getListOrder,getOrderFilter, updateOrder, addOrder, addGroup,addOrderManual, updateSetting, deleteChannel, addOrderMulti } from './OrdersCRUD'\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  ShowOrdersFilter:'[Balance] Filter',\n  RequestOrders: '[Balance] Requested',\n  OrdersLoadedSuccess: '[Balance] Loaded succcess',\n  OrdersLoadedFail: '[Balance] load fail',\n  AddOrderRequest: '[Balance] Add Order Request',\n  AddOrderManualRequest: '[Balance] Add Order Manual Request',\n  AddOrderSuccess: '[Balance] Add Order Success',\n  AddOrdersSuccess: '[Balance] Add Orders Success',\n  AddOrderFail: '[Balance] Add Order Fail',\n  ShowcurrentOrder: '[Balance] Show Order',\n  RequestUpdate: '[Balance] Requested Update',\n  UpdateMultiOrderRequest: '[Balance] Update Multi Order Request',\n  UpdateSuccess: '[Balance] Update Success',\n  UpdateMultiSuccess: '[Balance] Update Multi Success',\n  UpdateFail: '[Balance] Update Fail',\n  ClearSelected: '[Balance] Clear selected account',\n  GroupLoadedRequest: '[Balance] Group Loaded Request',\n  GroupLoadedSuccess: '[Balance] Group Loaded Success',\n  GroupLoadedFail: '[Balance] Group Loaded Fail',\n  GroupAddRequest: '[Balance] GroupAddRequest',\n  GroupAddSuccess: '[Balance] Group Add Success',\n  GroupAddFail: '[Balance] Group Add Fail',\n  GroupDeleteRequest: '[Balance] Group Delete Request',\n  GroupDeleteSuccess: '[Balance] Group Delete Success',\n  SelectGroup: '[Balance] Select Group',\n  DeleteOrderRequest: '[Balance] Delete Order Request',\n  DeleteOrderSuccess: '[Balance] Delete Order Success',\n  CheckedChange: '[Balance] Checked Change',\n  CheckedAllChange: '[Balance] Checked All Change',\n}\n\nconst initialorderstate: Iorderstate = {\n  orders: [],\n  loading: false,\n  adding: false,\n  groups: [],\n  currentOrder: undefined,\n  currentGroup: undefined,\n  channel_prior: 0,\n  \n}\n\nexport interface Iorderstate {\n  orders: OrderModel[]\n  loading: boolean\n  adding: boolean\n  currentOrder?: OrderModel\n  groups: Group[]\n  currentGroup?: Group\n  channel_prior: number\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-orders', whitelist: [] },\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestOrders: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.ShowOrdersFilter: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n\n      case actionTypes.OrdersLoadedSuccess: {\n        return {\n          ...state,\n          orders: action.payload?.orders || [],\n          loading: false\n        }\n      }\n      case actionTypes.GroupLoadedSuccess: {\n        return {\n          ...state,\n          groups: action.payload?.groups\n        }\n      }\n      case actionTypes.SelectGroup: {\n        return {\n          ...state,\n          currentGroup: action.payload?.group\n        }\n      }\n      case actionTypes.GroupDeleteSuccess: {\n        return {\n          ...state,\n          currentGroup: undefined,\n          groups: state.groups.filter((item: Group) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.DeleteOrderSuccess: {\n        return {\n          ...state,\n          orders: state.orders.filter((item: OrderModel) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.OrdersLoadedFail: {\n        return {\n          ...state,\n          orders: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          if (item.id === action.payload?.videobuff?.id) {\n            return action.payload?.videobuff\n          } else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: true,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          const findItem = action.payload?.videobuff.find((_item:OrderModel)=>{\n            if(_item.id===item.id){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          adding: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.AddOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.AddOrderManualRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.GroupAddSuccess: {\n        return {\n          ...state,\n          groups: state.groups.concat(action.payload?.group)\n        }\n      }\n      case actionTypes.AddOrderSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.order)\n        }\n      }\n      case actionTypes.AddOrdersSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.orders)\n        }\n      }\n      case actionTypes.AddOrderFail: {\n        return {\n          ...state,\n          adding: false,\n          message: action.payload?.message\n        }\n      }\n      case actionTypes.ShowcurrentOrder: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            if(item.id===action.payload?.data?.id){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      \n      \n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders ,payload:{user}}),\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\n  requestUpdate: (videobuff: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videobuff } }),\n  updateSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videobuff } }),\n  updateMultiSuccess: (videobuff: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videobuff } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\n  deleteOrderRequest: (videoid: string) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid } }),\n  deleteOrderSuccess: (videoid: string) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid } }),\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\n    const payload = param.payload.user\n    const { data: orders } = yield getListOrder(payload)\n    yield put(actions.fulfillorders(orders.balances))\n  })\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\n    const payload = param.payload\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\n    yield put(actions.fulfillorders(orders.videobuff))\n  })\n\n  http://localhost:8080/Fitnees/\n\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateOrder(param.payload.videobuff)\n    if (result && result.videobuff) {\n      yield put(actions.updateMultiSuccess(result.videobuff))\n    } else {\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n  \n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrderManual(payload)\n        if (result && (result.videobuff)) {\n            yield put(actions.addOrderSuccess(result.videobuff))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrder(payload)\n        if (result && (result.channel||result.channels)) {\n          if(payload.channel_id.includes(\"\\n\")){\n            console.log(\"------channels------\",result.channels)\n            yield put(actions.addOrdersSuccess(result.channels))\n          }else{\n            yield put(actions.addOrderSuccess(result.channel))\n          }\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield updateOrder(payload)\n        if (result && result.videobuff) {\n          yield put(actions.updateMultiSuccess(result.videobuff))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        } \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.GroupAddRequest, function* addOrderRequest(param: any) {\n    try {\n      const payload = param.payload.groupName\n      const { data: result } = yield addGroup(payload)\n      if (result && result.group) {\n        yield put(actions.addGroupSuccess(result.group))\n      } else {\n\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\n    try {\n      const payload = param.payload.videoid\n      const { data: result } = yield deleteChannel(payload)\n      if (result&&result.videobuffh!==null) {\n        yield put(actions.deleteOrderSuccess(payload))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrderList.tsx",["2947","2948","2949","2950","2951","2952","2953","2954","2955","2956","2957","2958","2959","2960","2961","2962","2963","2964","2965","2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977","2978","2979","2980","2981","2982","2983","2984","2985","2986","2987","2988","2989","2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000","3001","3002","3003","3004","3005","3006","3007"],"import {ChevronDownIcon, SortAscendingIcon, UsersIcon} from '@heroicons/react/solid'\nimport {Group, OrderModel,OrderModelChecked} from './models/Order'\nimport {Popover, Transition} from '@headlessui/react'\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Fragment, useEffect, useState} from 'react'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport {KTSVG} from '../../../_metronic/helpers'\nimport OrderItem from './components/OrderItem'\nimport {RootState} from 'setup'\nimport {actions} from './redux/OrdersRedux'\nimport {FormGroup, Input, Label} from \"reactstrap\";\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\nimport * as XLSX from 'xlsx';\nimport * as FileSaver from 'file-saver';\nimport DatePicker from 'react-date-picker';\nimport {DateRangePicker} from \"rsuite\";\ntype Props = {\n  done:number\n  className: string\n  orders: OrderModel[]\n}\nconst OrderList: React.FC<Props> = ({done,className, orders}) => {\n\n  function format1(n:number) {\n    if(n<0){\n      n=-n;\n    }\n    return n.toFixed(0).replace(/./g, function(c, i, a) {\n      return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n    });\n  }\n  const [list_orderhistory,setList_OrderHistory]=useState([{\n    id: 0,\n    balance:0,\n    time:\"\",\n    totalbalance:0,\n    user:\"\",\n    note:\"\",\n  }])\n\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(true)\n  const API_URL = process.env.REACT_APP_API_URL\n  const [showAdd, setShowAdd] = useState(false)\n  const [showAddManual, setShowAddManual] = useState(false)\n  const [showEditMulti, setShowEditMulti] = useState(false)\n  let today=new Date()\n  today.setHours(0,0,0,0)\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(today);\n\n  const [keyuser, setKeyUser] = useState(\"\")\n  let [keydatestart, setKeyDateStart] = useState(startDate!=null?((startDate.getTime())+(startDate.getTimezoneOffset()*60*1000)):0);\n  let [keydate, setKeyDate] = useState(1)\n  const [keydatestarttrue, setKeyDateStartTrue] = useState(1)\n  let [keydateend, setKeyDateEnd] = useState(endDate!=null?((endDate.getTime())+(endDate.getTimezoneOffset()*60*1000)):0);\n  const [keydateendtrue, setKeyDateEndTrue] = useState(1)\n  const [keyusertrue, setKeyUserTrue] = useState(0)\n  const [groupName, setGroupName] = useState('')\n  const [nameExport, setNameExport] = useState('')\n  let [totaltimebuffedorder, setTotalTimeBuffedOrder] = useState(0)\n  let [totaltimebuffedordershow, setTotalTimeBuffedOrderShow] = useState(0)\n  let [totaldorder, setTotalOrder] = useState(0)\n  let [totaldordershow, setTotalOrderShow] = useState(0)\n  let [totaladd, setTotalAdd] = useState(0)\n  let [totaladdshow, setTotalAddShow] = useState(0)\n  let [totalsub, setTotalSub] = useState(0)\n  let [totalsubshow, setTotalSubShow] = useState(0)\n  let [useEff, setuseEff] = useState(0)\n  const role: string =\n    (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n  const user: string =\n      (useSelector<RootState>(({auth}) => auth.user?.username, shallowEqual) as string) || ''\n  const groups: Group[] =\n    (useSelector<RootState>(({orders}) => orders.groups, shallowEqual) as Group[]) || []\n  const currentGroup: Group =\n    (useSelector<RootState>(({orders}) => orders.currentGroup, shallowEqual) as Group) || undefined\n  let sumtimedone=0;\n  let sumorder=0;\n  orders.forEach(item=>{\n    //sumtimedone=sumtimedone+Math.round(Number(item.timebuffhtotal==null?0:item.timebuffhtotal)/3600)\n    sumorder=sumorder+1;\n  })\n  const [list_user,setList_User]=useState([{\n    id:\"0000000000\",\n    user:\"All User\"\n  },])\n\n  async function getcounttimeorder() {\n    let  requestUrl = API_URL+'auth/getalluser';\n    const response = await fetch(requestUrl, {\n      method: 'get',\n      headers: new Headers({\n        'Authorization': '1',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    });\n    const responseJson = await response.json();\n    const {user} = responseJson;\n    let arrlist =user.split(',');\n    for(var i=0;i<arrlist.length;i++){\n      let orderitem = {\n        id: randomString(10),\n        user: arrlist[i]\n      }\n      setList_User([...list_user, orderitem])\n      list_user.push(orderitem)\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true)\n    if(orders.length!=0 || list_orderhistory.length>0){\n      setLoading(false)\n    }\n    setList_OrderHistory([])\n    useEff=useEff+1\n    setuseEff(useEff)\n    if(role===\"ROLE_ADMIN\"){\n      setNameExport((keyuser.length==0?\"AllUser\":keyuser)+'$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\n    }else {\n      setNameExport('$$'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayStart\")+'&&'+(keydatestart!=NaN?new Date(keydatestart).toLocaleDateString('vn-VN'):\"ALLDayEnd\"))\n\n    }\n    totaldordershow=totaldorder\n    setTotalOrderShow(totaldordershow)\n    setTotalOrder(0)\n    if(startDate==null || endDate==null){\n      setKeyDateStartTrue(0)\n      setKeyDateEndTrue(0)\n      keydatestart=0\n      keydateend=0\n    }else if(startDate!=null && endDate!=null){\n      keydatestart=startDate.getTime()\n      setKeyDateStart(keydatestart)\n      keydateend=endDate.getTime()\n      setKeyDateEnd(keydateend)\n      keydate=1\n      setKeyDate(keydate)\n      }\n    totaldordershow=totaldorder\n    setTotalOrderShow(totaldordershow)\n    totaldorder=0\n    totaladdshow=totaladd\n    setTotalAddShow(totaladdshow)\n    totaladd=0\n    totalsubshow=totalsub\n    setTotalSubShow(totalsubshow)\n    totalsub=0\n    setTotalTimeBuffedOrder(0)\n    if(useEff<=1){\n      getcounttimeorder()\n    }\n\n  }, [keydate,keydatestart,keydateend,startDate,endDate,keyuser,orders.length,,])\n\n  const selectGroup = (item: Group) => {\n    dispatch(actions.selectGroup(item))\n  }\n  async function Export(csvData:OrderModelChecked[],fileName:string){\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n    const ws = XLSX.utils.json_to_sheet(csvData);\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n    const data = new Blob([excelBuffer], {type: fileType});\n    FileSaver.saveAs(data, fileName + fileExtension);\n  }\n\n  return (\n    <div className={`card ${className}`}>\n      <div className=\"page-header\" style={{backgroundColor:'#c0e1ce'}}>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{margin:10}}>\n            <div className=\"col-lg-5 col-sm-12 c-order__header\">\n              <span  className='fw-bolder fs-3 mb-1'>Biến động số dư</span>\n              <span  className='ml-2 fw-bold fs-7'>({useEff<=1?sumorder:totaldordershow} giao dịch)</span>\n              <p className=\"fw-bold c-order__list\">\n                <span style={{fontSize:12,marginTop:5}}>\n                  Tiền vào: <span style={{color:\"red\"}}> {totaladdshow.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}đ </span> | Tiền chi: <span style={{color:\"red\"}}>{(-totalsubshow).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}đ </span>\n                  | {totaladdshow>=(-totalsubshow)?\"Tăng \":\"Giảm \"} <span style={{color:\"red\"}}>{totaladdshow>=(-totalsubshow)?(totaladdshow-(-totalsubshow)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"):(-totalsubshow-totaladdshow).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}đ</span>\n                </span>\n\n              </p>\n            </div>\n            <div className=\"col-lg-7 col-sm-12 c-order__header\">\n            </div>\n          </div>\n        </div>\n        <div className=\"page-header__content\">\n          <div className=\"align-items-center row\" style={{backgroundColor:\"white\",fontWeight:\"bold\",margin:10}}>\n            <div style={{width:\"70%\"}}>\n              <div style={{float:\"left\",marginRight:10}}>\n                <DatePicker\n                    value={startDate}\n                    onChange={(date: React.SetStateAction<Date>) =>{ setStartDate(date)\n                    }\n                    }\n\n                />\n                <DatePicker\n                    value={endDate}\n                    onChange={(date: React.SetStateAction<Date>) =>{\n                      setEndDate(date)}\n                    }\n                />\n              </div>\n            </div>\n            <div style={{width:\"30%\"}}>\n              <button style={{height:40,margin:10,float:\"right\"}}\n                      onClick={() => {Export(list_orderhistory,nameExport)\n                      }}\n                      className='btn btn-success'\n              >\n                Export\n              </button>\n              {role==='ROLE_ADMIN'&&<Input style={{margin:10,width:\"auto\",maxWidth:100,height:40,fontSize:12,backgroundColor:'#c0e1ce',color:\"black\",textAlign:\"center\",float:\"right\"}}\n                  //onChange={(e) => setKeyRate(parseInt(e.target.value))}\n                     onChange={(e) => {\n                       setKeyUser(e.target.value)\n                       setKeyUserTrue(1)\n                     }}\n                     className=\"form-control form-control-solid\"\n                     type=\"select\"\n                     value={keyuser}\n              >\n                {\n                  list_user.map((item, index) => {\n                    return(\n                        <option key={item.user.indexOf(\"All User\")>=0?\"\":item.user} value={item.user.indexOf(\"All User\")>=0?\"\":item.user}>\n                          {item.user}</option>)\n                  })\n                }\n\n              </Input>}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='card-body py-3'>\n        <div className='table-responsive'>\n          {/* begin::Table */}\n          <table className='table table-row-bordered table-row-gray-100 align-middle gs-0 gy-3'>\n            {/* begin::Table head */}\n            <thead>\n              <tr className='fw-bolder text-muted'>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>STT</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Time</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Balance Change</span>\n                </th>\n                <th className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Balance</span>\n                </th>\n                {role!=\"ROLE_USER\"&&<th   className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>User</span>\n                </th>}\n                <th   className='min-w-10px text-sm'>\n                  <span style={{fontSize:12,color:\"black\"}} className='text-sm'>Note</span>\n                </th>\n              </tr>\n            </thead>\n            {/* end::Table head */}\n            {/* begin::Table body */}\n            <tbody>\n              {orders &&\n                orders.map((order: OrderModel, index: number) => {\n                  if (keyusertrue==0&&keydate==0) {\n                    if(index===0){\n                      totaldorder=1\n                      if(order.balance>0){\n                        totaladd=order.balance\n                      }else{\n                        totalsub=order.balance\n                      }\n                    }else{\n                      totaldorder=totaldorder+1\n                      if(order.balance>0){\n                        totaladd=totaladd+order.balance\n                      }else{\n                        totalsub=totalsub+order.balance\n                      }\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      balance: order.balance,\n                      totalbalance:order.totalbalance,\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\n                      user:order.user,\n                      note:order.note\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.id+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keydate==0){\n                    if(index===0){\n                      totaldorder=1\n                      if(order.balance>0){\n                        totaladd=order.balance\n                      }else{\n                        totalsub=order.balance\n                      }\n                    }else{\n                      totaldorder=totaldorder+1\n                      if(order.balance>0){\n                        totaladd=totaladd+order.balance\n                      }else{\n                        totalsub=totalsub+order.balance\n                      }\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      balance: order.balance,\n                      totalbalance:order.totalbalance,\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\n                      user:order.user,\n                      note:order.note\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.id+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }else if((keydatestart<=order.time&&order.time<=keydateend+24*60*60*1000-1)&&keyusertrue==0&&keydate==1){\n                    if(index===0){\n                      totaldorder=1\n                      if(order.balance>0){\n                        totaladd=order.balance\n                      }else{\n                        totalsub=order.balance\n                      }\n                    }else{\n                      totaldorder=totaldorder+1\n                      if(order.balance>0){\n                        totaladd=totaladd+order.balance\n                      }else{\n                        totalsub=totalsub+order.balance\n                      }\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      balance: order.balance,\n                      totalbalance:order.totalbalance,\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\n                      user:order.user,\n                      note:order.note\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.id+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }\n                  else if(order.user.indexOf(keyuser)>=0 &&keyusertrue==1&&keydate==1&&\n                      (keydatestart<=order.time&&order.time<=keydateend+24*60*60*1000-1)\n                  ){\n                    if(index===0){\n                      totaldorder=1\n                      if(order.balance>0){\n                        totaladd=order.balance\n                      }else{\n                        totalsub=order.balance\n                      }\n                    }else{\n                      totaldorder=totaldorder+1\n                      if(order.balance>0){\n                        totaladd=totaladd+order.balance\n                      }else{\n                        totalsub=totalsub+order.balance\n                      }\n                    }\n                    let orderitem = {\n                      id: totaldorder,\n                      balance: order.balance,\n                      totalbalance:order.totalbalance,\n                      time: new Date(order.time).toLocaleDateString('vn-VN') +\" \"+ new Date(order.time).toLocaleTimeString('vn-VN'),\n                      user:order.user,\n                      note:order.note\n\n                    }\n                    list_orderhistory.push(orderitem)\n                    return (\n                        <OrderItem\n                            index={index}\n                            showEdit={role === 'ROLE_ADMIN'}\n                            key={order.id+index.toString()}\n                            item={order}\n                        />\n                    )\n                  }\n                    return null\n                })}\n            </tbody>\n            {/* end::Table body */}\n          </table>\n          {loading===true&&<div style={{width:'1%',margin:\"auto\"}}>\n            <div  className=\"spinner-grow text-success\" role=\"status\" style={{}}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>}\n        </div>\n        {/* end::Table container */}\n      </div>\n      {/* begin::Body */}\n\n    </div>\n  )\n}\n\nexport {OrderList}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersCRUD.ts",["3008"],"import axios from 'axios'\nimport { postWithoutTokenFunciton,getFunciton,deleteFunciton } from 'utils/ApiHelper'\nimport {OrderForm, OrderFormManual, OrderModel, OrderPost} from '../models/Order'\n\n\n\nexport async function getListOrder(user:string) {\n  const res:any = await getFunciton(\"auth/balance?user=\"+user)\n  return res\n}\n\nexport async function getOrderFilter(key:string,user:string) {\n  const res:any = await getFunciton(\"videobuffh/getorderfilterbuffhhistory?key=\"+key+'&user='+user)\n  return res\n}\n\nexport async function updateSetting(channel_prior:number) {\n  console.log(\"api/updateSetting?channel_prior=\"+channel_prior)\n  const res:any = await getFunciton(\"api/updateSetting?channel_prior=\"+channel_prior)\n  return res\n}\n\nexport async function updateOrder(order:OrderModel) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/update\",order)\n  return res\n}\n\n\nexport async function addOrder(order:OrderForm) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\nexport async function addOrderManual(order:OrderFormManual) {\n  const res:any = await postWithoutTokenFunciton(\"videobuffh/orderbuffh\",order)\n  return res\n}\n\nexport async function addOrderMulti(order:OrderPost) {\n  const res:any = await postWithoutTokenFunciton(\"\",order)\n  return res\n}\n\n\n\n\nexport async function addGroup(groupName:string) {\n  const res:any = await postWithoutTokenFunciton(\"/group/insert\",{\n    name: groupName\n  })\n  return res\n}\n\nexport async function deleteGroup(id:number) {\n  const res:any = await deleteFunciton(\"/group/delete?id=\"+id)\n  return res\n}\n\nexport async function deleteChannel(videoid:string) {\n  const res:any = await deleteFunciton(\"/videobuffh/delete?videoid=\"+videoid)\n  return res\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\components\\OrderItem\\index.tsx",["3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { OrderModel } from '../../models/Order'\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport { getFunciton } from 'utils/ApiHelper'\nimport {RootState} from \"../../../../../setup\";\ntype Props = {\n    item: OrderModel,\n    showEdit: boolean,\n    index: number,\n    //increase: number\n}\n\nconst OrderItem: React.FC<Props> = ({ item, showEdit, index }) => {\n    const role: string =\n        (useSelector<RootState>(({auth}) => auth.user?.role, shallowEqual) as string) || ''\n    const [running, setRunning] = useState(0)\n    const [success, setSuccess] = useState(0)\n    const [loading, setLoading] = useState(false)\n\n    function format1(n:number) {\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n        });\n    }\n\n\n    const dispatch = useDispatch()\n    const clickUpdateHandler = () => {\n        dispatch(actions.showcurrentOrder(item))\n    }\n\n    //const subNeedRun = item.view_need - (item.current_view - item.start_view)\n    //const increase = item.current_view - item.start_view\n    return (\n        <tr style={{margin:100}}>\n            <td className='w-25px'>\n                <span className='text-muted fw-bold text-muted d-block text-sm'>{index+1}</span>\n            </td>\n            <td>\n                <span  >\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\n                    {new Date(item.time).toLocaleDateString('vn-VN') +\" \"+ new Date(item.time).toLocaleTimeString('vn-VN')}\n                    </text>\n                </span>\n\n            </td>\n            <td>\n                <span >\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\n                        {item.balance>=0?\"+\":\"\"}{item.balance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}đ\n                    </text>\n                            </span>\n            </td>\n            <td>\n                <span >\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\n                        {item.totalbalance.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        }đ\n                    </text>\n                            </span>\n            </td>\n            {role!=\"ROLE_USER\"&&<td>\n                <span >\n                    <text style={{fontSize:12,fontWeight:\"bold\"}}>\n                        {item.user}\n                    </text>\n                            </span>\n            </td>}\n            <td >\n                    <span style={{fontSize:11}} >\n                                <text style={{fontWeight:\"bold\"}} >\n                                        {item.note}\n                                </text>\n                    </span>\n            </td>\n        </tr>\n    )\n}\n\nexport default OrderItem","C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\Buffh\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\BhManualModal\\index.tsx",["3022","3023","3024","3025","3026","3027","3028","3029","3030","3031","3032","3033","3034","3035","3036","3037","3038","3039","3040","3041","3042","3043","3044","3045","3046","3047","3048","3049","3050","3051","3052","3053","3054","3055","3056"],"import React, { useState, useEffect } from 'react'\nimport { KTSVG, toAbsoluteUrl } from '_metronic/helpers'\nimport { useDispatch } from 'react-redux'\nimport { actions } from '../../redux/OrdersRedux'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Modal,\n    Form, FormGroup, Input, Label\n} from \"reactstrap\"\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { RootState } from 'setup'\nimport { Group } from '../../models/Order'\nimport {addorderv2, bhorderv2} from '../../redux/OrdersCRUD'\nimport {randomString} from \"react-inlinesvg/lib/helpers\";\nimport {getUserByToken} from \"../../../auth/redux/AuthCRUD\";\ntype Props = {\n    show: boolean\n    close: () => void\n}\n\nconst BhManualModal: React.FC<Props> = ({ show, close }) => {\n    const role: string = useSelector<RootState>(({ auth }) => auth.user?.role, shallowEqual) as string || \"\"\n    const username: string = useSelector<RootState>(({ auth }) => auth.user?.username, shallowEqual) as string || \"\"\n    const balance: number = useSelector<RootState>(({ auth }) => auth.user?.balance, shallowEqual) as number || 0\n    const discount: number = useSelector<RootState>(({ auth }) => auth.user?.discount, shallowEqual) as number || 0\n    const adding: boolean = useSelector<RootState>(({ orderdone }) => orderdone.adding, shallowEqual) as boolean || false\n    const groups: Group[] = useSelector<RootState>(({ orderdone }) => orderdone.groups, shallowEqual) as Group[] || []\n\n    function format1(n:number) {\n        return n.toFixed(0).replace(/./g, function(c, i, a) {\n            return i > 0 && c !== \".\" && (a.length - i) % 3 === 0 ? \",\" + c : c;\n        });\n    }\n\n    const dispatch = useDispatch()\n    const [maxthreads, setMaxthreads] = useState(50)\n    const [videoid, setVideoid] = useState(\"\")\n    const [homerate,setHome_rate]=useState(0)\n    //\n    const [searchrate,setSearch_rate]=useState(80)\n    const [suggestrate,setSuggest_rate]=useState(0)\n    const [directrate,setDirect_rate]=useState(20)\n    //\n    const [likerate,setLike_rate]=useState(25)\n    const [commentrate,setComment_rate]=useState(25)\n    const [mobilerate,setMobile_rate]=useState(0)\n    //\n    const [note, setNote] = useState(\"\")\n    const [viewstart, setViewstart] = useState(0)\n    const [timebuff, setTimebuff] = useState(4000)\n    const [optionbuff, setOptionbuff] = useState(0)\n    const [enabled,setEnabled]=useState(1)\n    const [user,setUser]=useState(username)\n    const [showorder,setShowOrder]=useState(true)\n    const [orderdonenum,setOrderDoneNum]=useState(0)\n    const [list_order,setList_Todo]=useState([{\n        id:\"0000000000\",\n        videoid:\"\",\n        state:\"\",\n        time:0,\n        price:0\n\n    },])\n    let [sumprice,setSumPrice]=useState(0)\n    let [sumtime,setSumTime]=useState(0)\n    let [sumorder,setSumOrder]=useState(0)\n    const dismissModal = () => {\n        close()\n        setShowOrder(true)\n        setVideoid(\"\")\n        let or={\n            id:\"0000000000\",\n            videoid:\"\",\n            state:\"\",\n            time:0,\n            price:0\n        }\n        setList_Todo([or])\n        if(orderdonenum>0){\n            if(role.indexOf(\"ROLE_ADMIN\")>=0){\n                dispatch(actions.requestOrders(''))\n            }else{\n                dispatch(actions.requestOrders(user))\n            }\n        }\n        setOrderDoneNum(0)\n    }\n    async function order_video_ver2(video: string) {\n            await bhorderv2(video)\n                .then((data: any) => {\n                    if (data.data.videobuffh == \"true\") {\n                        setOrderDoneNum(orderdonenum + 1)\n                        let orderitem = {\n                            id: randomString(10),\n                            videoid: video,\n                            state: \"OK\",\n                            time: data.data.time,\n                            price: data.data.price\n                        }\n\n                        sumprice = sumprice + data.data.price\n                        setSumPrice(sumprice)\n                        sumtime = sumtime + timebuff;\n                        setSumTime(sumtime)\n                        sumorder = sumorder + 1\n                        setSumOrder(sumorder)\n                        console.log(sumprice, sumtime, sumorder)\n                        setList_Todo([...list_order, orderitem])\n                        list_order.push(orderitem)\n                    } else {\n                        let orderitem = {\n                            id: randomString(10),\n                            videoid: video,\n                            time: 0,\n                            state: data.data.videobuffh,\n                            price: 0\n                        }\n                        setList_Todo([...list_order, orderitem])\n                        list_order.push(orderitem)\n                    }\n\n                })\n                .catch(() => {\n                    let orderitem = {\n                        id: randomString(10),\n                        videoid: video,\n                        state: 'Error',\n                        time: 0,\n                        price: 0\n                    }\n                    setList_Todo([...list_order, orderitem])\n                    list_order.push(orderitem)\n                })\n    }\n    const  submit = async () => {\n        setSumOrder(0)\n        setSumTime(0)\n        setSumPrice(0)\n        if (videoid.trim() === \"\") {\n            alert(\"VideoId không để trống!\")\n            return\n        }\n\n        if (timebuff < 100) {\n            alert(\"Số giờ phải lớn hơn 100!\")\n            return\n        }\n\n        if (homerate + searchrate + suggestrate + directrate != 100) {\n            alert(\"Tổng nguồn view không đúng!\")\n            return\n        }\n        setShowOrder(false)\n        const videoidlist = videoid.split('\\n')\n        for (var i = 0; i < videoidlist.length; i++) {\n            let video = videoidlist[i]\n            await order_video_ver2(video)\n            await getUserByToken()\n        }\n    }\n\n    useEffect(() => {\n        if (!adding) {\n            close()\n        }\n    }, [adding])\n\n    return (\n        <Modal isOpen={show}\n            modalTransition={{ timeout: 500 }}>\n            <div className=\"modal-content\">\n                <div className=\"modal-header\" style={{display: showorder == true ? \"true\" : \"true\"}}>\n                    <h5 className=\"modal-title\">{showorder==true?'Check bảo hành với danh sách VideoId':'Bảo hành thành công: '+sumorder+' | Giờ: '+format1(sumtime)+'h | Giá: '+format1(sumprice)+'đ'}</h5>\n                    <div className=\"btn btn-icon btn-sm btn-active-light-primary ms-2\" aria-label=\"Close\">\n                        <span className=\"svg-icon svg-icon-2x\"></span>\n                    </div>\n                </div>\n                <div className=\"modal-body\" style={{display: showorder == true ? \"true\" : \"none\"}}>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"exampleEmail\" className=\"required form-label\">\n                                Danh sách VideoId cần bảo hành\n                            </Label>\n                            <Input style={{minHeight:250}}\n                                id=\"list_id\"\n                                name=\"list_id\"\n                                className=\"form-control form-control-solid\"\n                                placeholder={\"1 VideoId một dòng!\"}\n                                value={videoid}\n                                type={\"textarea\"}\n                                onChange={(e) => setVideoid(e.target.value)}\n                            />\n                        </FormGroup>\n                    </Form>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"card-body\" style={{width: \"100%\"}}>\n                        {/* begin::Table container */}\n\n                        {\n                            list_order.map((item, index) => {\n                                if (item.videoid.length >0) return (\n                                    <ul className=\"list-group list-group-flush\" id={item.videoid} key={item.videoid}>\n                                        <li className=\"list-group-item\" style={{minHeight: 10}}>\n                                            <div className=\"row\">\n                                                <div className=\"col-1 d-flex align-items-center\">{index}.</div>\n                                                <div className=\"col-1 d-flex align-items-center\">\n                                                            <span className='symbol-label'>\n                                                              <img\n\n                                                                  src={toAbsoluteUrl(item.state.indexOf('OK')>=0?'/media/icons/duotune/general/gen048.svg':'/media/icons/duotune/general/gen050.svg')}\n                                                                  className='svg-icon-1'\n                                                                  alt=''\n                                                              />\n                                                            </span>\n                                                </div>\n                                                <div className=\"col-3 d-flex align-items-center\">{item.videoid}</div>\n                                                <div style={{color:item.state.indexOf('OK')>=0?'green':'red'}} className=\"col-3 d-flex align-items-center\">{item.state}</div>\n                                                <div className=\"col-1 d-flex align-items-center\">{item.time}h</div>\n                                                <div className=\"col-2 d-flex justify-content-end align-items-center\">\n                                                    {format1(item.price)}đ\n                                                </div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                )\n                            })\n                        }\n                        {/* end::Table container */}\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={dismissModal} className=\"btn btn-light\" >Thoát</button>\n                    <button disabled={adding} type=\"button\" onClick={submit} style={{backgroundColor:\"#26695c\",color:\"white\",display: showorder == true ? \"true\" : \"none\"}}  className=\"btn\">{adding ? \"Chờ\" : \"Thêm đơn\"}</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default BhManualModal","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\index.tsx",["3057"],["3058","3059"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\redux\\Store.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\App.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\Metronici18n.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\redux\\RootReducer.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\i18n\\i18nProvider.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\routing\\Routes.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthInit.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\setup\\axios\\SetupAxios.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthCRUD.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\redux\\AuthRedux.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterInit.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\MasterLayout.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\routing\\PrivateRoutes.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\ErrorsPage.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutModels.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\DefaultLayoutConfig.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutSetup.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\LayoutProvider.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\PageData.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\core\\MetronicSplashScreen.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\utils\\AxiosConfig.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\AccountPage.tsx",["3060","3061","3062","3063","3064"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\AccountPage.tsx",["3065","3066","3067","3068"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\AccountPage.tsx",["3069","3070","3071","3072"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrdersPage.tsx",["3073","3074","3075","3076","3077"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrdersPage.tsx",["3078","3079","3080","3081","3082"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrdersPage.tsx",["3083","3084","3085","3086","3087"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\ComputerList.tsx",["3088","3089","3090","3091","3092","3093","3094","3095","3096","3097"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\ScrollTop.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Footer.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideDefault.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\Content.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\HeaderWrapper.tsx",["3098"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error500.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\pages\\dashboard\\DashboardWrapper.tsx",["3099"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\errors\\components\\Error404.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\Logout.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\AuthPage.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersRedux.ts",["3100","3101","3102","3103","3104","3105","3106"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountRedux.ts",["3107","3108","3109","3110"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersRedux.ts",["3111","3112","3113","3114","3115","3116"],"import { Action } from '@reduxjs/toolkit'\nimport { App } from 'app/App'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { put, takeLatest } from 'redux-saga/effects'\nimport { OrderModel, OrderPost,OrderFormManual, OrderForm, Group, OrderUpdateForm } from '../models/Order'\nimport {\n  getListOrder,\n  getOrderFilter,\n  updateOrder,\n    updateThread,\n  addOrder,\n  addOrderManual,\n  deleteChannel,\n  addOrderMulti,\n  getOrderPercentFilter\n} from './OrdersCRUD'\nconst sleep = (milliseconds: number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport interface ActionWithPayload<T> extends Action {\n  payload?: T\n}\n\nexport const actionTypes = {\n  ShowOrdersFilter:'[Orderdone] Filter',\n  ShowOrdersPercentFilter:'[Orderdone] Percent Filter',\n  RequestOrders: '[Orderdone] Requested',\n  OrdersLoadedSuccess: '[Orderdone] Loaded succcess',\n  OrdersLoadedFail: '[Orderdone] load fail',\n  AddOrderRequest: '[Orderdone] Add Order Request',\n  AddOrderManualRequest: '[Orderdone] Add Order Manual Request',\n  AddOrderSuccess: '[Orderdone] Add Order Success',\n  AddOrdersSuccess: '[Orderdone] Add Orders Success',\n  AddOrderFail: '[Orderdone] Add Order Fail',\n  ShowcurrentOrder: '[Orderdone] Show Order',\n  RequestUpdate: '[Orderdone] Requested Update',\n  RequestUpdateThread: '[Orderdone] Requested UpdateThread',\n  UpdateMultiOrderRequest: '[Orderdone] Update Multi Order Request',\n  UpdateMultiThreadRequest: '[Orderdone] Update Multi Thread Request',\n  UpdateSuccess: '[Orderdone] Update Success',\n  UpdateMultiSuccess: '[Orderdone] Update Multi Success',\n  UpdateFail: '[Orderdone] Update Fail',\n  ClearSelected: '[Orderdone] Clear selected account',\n  GroupLoadedRequest: '[Orderdone] Group Loaded Request',\n  GroupLoadedSuccess: '[Orderdone] Group Loaded Success',\n  GroupLoadedFail: '[Orderdone] Group Loaded Fail',\n  GroupAddRequest: '[Orderdone] GroupAddRequest',\n  GroupAddSuccess: '[Orderdone] Group Add Success',\n  GroupAddFail: '[Orderdone] Group Add Fail',\n  GroupDeleteRequest: '[Orderdone] Group Delete Request',\n  GroupDeleteSuccess: '[Orderdone] Group Delete Success',\n  SelectGroup: '[Orderdone] Select Group',\n  DeleteOrderRequest: '[Orderdone] Delete Order Request',\n  DeleteOrderSuccess: '[Orderdone] Delete Order Success',\n  CheckedChange: '[Orderdone] Checked Change',\n  CheckedAllChange: '[Orderdone] Checked All Change',\n}\n\nconst initialorderstate: Iorderstate = {\n  orders: [],\n  loading: false,\n  adding: false,\n  groups: [],\n  currentOrder: undefined,\n  currentGroup: undefined,\n  channel_prior: 0,\n  \n}\n\nexport interface Iorderstate {\n  orders: OrderModel[]\n  loading: boolean\n  adding: boolean\n  currentOrder?: OrderModel\n  groups: Group[]\n  currentGroup?: Group\n  channel_prior: number\n}\n\nexport const reducer = persistReducer(\n  { storage, key: 'v1-orders', whitelist: [] },\n  (state: Iorderstate = initialorderstate, action: ActionWithPayload<any>) => {\n    switch (action.type) {\n      case actionTypes.RequestOrders: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.ShowOrdersFilter: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n      case actionTypes.ShowOrdersPercentFilter: {\n        return {\n          ...state,\n          orders: [],\n          loading: true\n        }\n      }\n\n      case actionTypes.OrdersLoadedSuccess: {\n        return {\n          ...state,\n          orders: action.payload?.orders || [],\n          loading: false\n        }\n      }\n      case actionTypes.GroupLoadedSuccess: {\n        return {\n          ...state,\n          groups: action.payload?.groups\n        }\n      }\n      case actionTypes.SelectGroup: {\n        return {\n          ...state,\n          currentGroup: action.payload?.group\n        }\n      }\n      case actionTypes.GroupDeleteSuccess: {\n        return {\n          ...state,\n          currentGroup: undefined,\n          groups: state.groups.filter((item: Group) => {\n            if (item.id === action.payload?.id) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.DeleteOrderSuccess: {\n        return {\n          ...state,\n          orders: state.orders.filter((item: OrderModel) => {\n            if (action.payload?.videoid.indexOf(item.videoid)>=0) {\n              return false\n            }\n            return true\n          })\n        }\n      }\n      case actionTypes.OrdersLoadedFail: {\n        return {\n          ...state,\n          orders: [],\n          loading: false\n        }\n      }\n      case actionTypes.RequestUpdate: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.RequestUpdateThread: {\n        return {\n          ...state,\n          loading: true\n        }\n      }\n      case actionTypes.UpdateMultiOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateMultiThreadRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.UpdateSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          if (item.videoid === action.payload?.videoview?.videoid) {\n            return action.payload?.videoview\n          } else {\n            return item\n          }\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: true,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateMultiSuccess: {\n        const remaporders = state.orders.map((item: OrderModel) => {\n          const findItem = action.payload?.videoview.find((_item:OrderModel)=>{\n            if(_item.videoid===item.videoid){\n              return true\n            }\n            return false\n          })\n          if(findItem){\n            return findItem\n          }\n          return item\n        })\n        return {\n          ...state,\n          orders: remaporders,\n          loading: false,\n          adding: false,\n          currentOrder: undefined\n        }\n      }\n      case actionTypes.UpdateFail: {\n        return {\n          ...state,\n          loading: false\n        }\n      }\n      case actionTypes.AddOrderRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.AddOrderManualRequest: {\n        return {\n          ...state,\n          adding: true\n        }\n      }\n      case actionTypes.GroupAddSuccess: {\n        return {\n          ...state,\n          groups: state.groups.concat(action.payload?.group)\n        }\n      }\n      case actionTypes.AddOrderSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.order)\n        }\n      }\n      case actionTypes.AddOrdersSuccess: {\n        return {\n          ...state,\n          adding: false,\n          orders: state.orders.concat(action.payload?.orders)\n        }\n      }\n\n      case actionTypes.AddOrderFail: {\n        return {\n          ...state,\n          adding: false,\n          message: action.payload?.message\n        }\n      }\n      case actionTypes.ShowcurrentOrder: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.ClearSelected: {\n        return {\n          ...state,\n          currentOrder: action.payload?.currentOrder\n        }\n      }\n      case actionTypes.CheckedChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            if(item.videoid===action.payload?.data?.videoid){\n              return {\n                ...item,\n                checked:action?.payload?.data?.checked\n              }\n            }\n            return item\n          })\n        }\n      }\n      case actionTypes.CheckedAllChange: {\n        return {\n          ...state,\n          orders:  state.orders.map(item=>{\n            return {\n              ...item,\n              checked:action?.payload?.checked\n            }\n          })\n        }\n      }\n      \n      \n\n      default:\n        return state\n    }\n  }\n)\n\nexport const actions = {\n  requestOrders: (user:string) => ({ type: actionTypes.RequestOrders,payload: { user } }),\n  showordersfilter: (key: string,user:string) => ({ type: actionTypes.ShowOrdersFilter ,payload: { key,user }} ),\n  showorderspercentfilter: (key: number,user:string) => ({ type: actionTypes.ShowOrdersPercentFilter ,payload: { key ,user}} ),\n  fulfillorders: (orders: OrderModel[]) => ({ type: actionTypes.OrdersLoadedSuccess, payload: { orders } }),\n  loadordersFail: (message: string) => ({ type: actionTypes.OrdersLoadedFail, payload: { message } }),\n  addOrderRequest: (data: OrderForm) => ({ type: actionTypes.AddOrderRequest, payload: { data } }),\n  addOrderManualRequest: (data: OrderFormManual) => ({ type: actionTypes.AddOrderManualRequest, payload: { data } }),\n  editMultiOrderRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiOrderRequest, payload: { data } }),\n  editMultiThreadRequest: (data: OrderForm) => ({ type: actionTypes.UpdateMultiThreadRequest, payload: { data } }),\n  addOrderSuccess: (order: OrderModel) => ({ type: actionTypes.AddOrderSuccess, payload: { order } }),\n  addOrdersSuccess: (orders: OrderModel[]) => ({ type: actionTypes.AddOrdersSuccess, payload: { orders } }),\n  addOrderFail: (message: string) => ({ type: actionTypes.AddOrderFail, payload: { message } }),\n  requestUpdate: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdate, payload: { videoview } }),\n  requestUpdateThread: (videoview: OrderUpdateForm) => ({ type: actionTypes.RequestUpdateThread, payload: { videoview } }),\n  updateSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateSuccess, payload: { videoview } }),\n  updateMultiSuccess: (videoview: OrderModel[]) => ({ type: actionTypes.UpdateMultiSuccess, payload: { videoview } }),\n  updateFail: (message: string) => ({ type: actionTypes.UpdateFail, payload: { message } }),\n  showcurrentOrder: (currentOrder: OrderModel) => ({ type: actionTypes.ShowcurrentOrder, payload: { currentOrder } }),\n  clearcurrentOrder: () => ({ type: actionTypes.ClearSelected }),\n  requestGroups: () => ({ type: actionTypes.GroupLoadedRequest }),\n  fulfillGroups: (groups: Group[]) => ({ type: actionTypes.GroupLoadedSuccess, payload: { groups } }),\n  addGroupRequest: (groupName: string) => ({ type: actionTypes.GroupAddRequest, payload: { groupName } }),\n  addGroupSuccess: (group: Group) => ({ type: actionTypes.GroupAddSuccess, payload: { group } }),\n  deleteGroupRequest: (id: number) => ({ type: actionTypes.GroupDeleteRequest, payload: { id } }),\n  deleteGroupSuccess: (id: number) => ({ type: actionTypes.GroupDeleteSuccess, payload: { id } }),\n  selectGroup: (group: Group) => ({ type: actionTypes.SelectGroup, payload: { group } }),\n  deleteOrderRequest: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderRequest, payload: { videoid,cancel } }),\n  deleteOrderSuccess: (videoid: string,cancel:number) => ({ type: actionTypes.DeleteOrderSuccess, payload: { videoid,cancel } }),\n  checkedChange: (data:{videoid:string,checked:boolean}) => ({ type: actionTypes.CheckedChange, payload: { data } }),\n  checkedAllChange: (checked:boolean) => ({ type: actionTypes.CheckedAllChange, payload: { checked } }),\n}\n\nexport function* saga() {\n  yield takeLatest(actionTypes.RequestOrders, function* userRequested(param: any) {\n    const payload = param.payload.user\n    const { data: orders } = yield getListOrder(payload)\n    yield put(actions.fulfillorders(orders.videoview))\n  })\n  yield takeLatest(actionTypes.ShowOrdersFilter, function* userRequestedd(param: any) {\n    const payload = param.payload\n    const { data: orders } = yield getOrderFilter(payload.key,payload.user)\n    yield put(actions.fulfillorders(orders.videoview))\n  })\n\n  yield takeLatest(actionTypes.ShowOrdersPercentFilter, function* userRequestedd(param: any) {\n    const payload = param.payload\n    const { data: orders } = yield getOrderPercentFilter(payload.key,payload.user)\n    yield put(actions.fulfillorders(orders.videoview))\n  })\n\n\n  http://localhost:8080/Fitnees/\n\n\n\n\n\n\n  yield takeLatest(actionTypes.RequestUpdate, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateOrder(param.payload.videoview)\n    if (result && result.videoview) {\n      yield put(actions.updateMultiSuccess(result.videoview))\n    } else {\n      alert(result.message)\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n\n  yield takeLatest(actionTypes.RequestUpdateThread, function* updateUserRequested(param: any) {\n    const { data: result } = yield updateThread(param.payload.videoview)\n    if (result && result.videoview) {\n      yield put(actions.updateMultiSuccess(result.videoview))\n    } else {\n      alert(result.message)\n      yield put(actions.addOrderFail(result.message))\n    }\n\n  })\n  \n  yield takeLatest(actionTypes.AddOrderManualRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrderManual(payload)\n        if (result && (result.videoview)) {\n            yield put(actions.addOrderSuccess(result.videoview))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n  yield takeLatest(actionTypes.AddOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield addOrder(payload)\n        if (result && (result.channel||result.channels)) {\n          if(payload.channel_id.includes(\"\\n\")){\n            console.log(\"------channels------\",result.channels)\n            yield put(actions.addOrdersSuccess(result.channels))\n          }else{\n            yield put(actions.addOrderSuccess(result.channel))\n          }\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        }\n      \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiOrderRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n        const { data: result } = yield updateOrder(payload)\n        if (result && result.videoview) {\n          yield put(actions.updateMultiSuccess(result.videoview))\n        } else {\n          yield put(actions.addOrderFail(result.message))\n        } \n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.UpdateMultiThreadRequest, function* addOrderRequest(param: any) {\n    const payload = param.payload.data\n    try {\n      const { data: result } = yield updateThread(payload)\n      if (result && result.videoview) {\n        yield put(actions.updateMultiSuccess(result.videoview))\n      } else {\n        yield put(actions.addOrderFail(result.message))\n      }\n    } catch (error) {\n      yield put(actions.addOrderFail(\"\"))\n    }\n  })\n\n  yield takeLatest(actionTypes.DeleteOrderRequest, function* DeleteOrderRequest(param: any) {\n    try {\n      const payload = param.payload\n      const { data: result } = yield deleteChannel(payload.videoid,payload.cancel)\n      if (result&&result.videoview!==null) {\n        yield put(actions.deleteOrderSuccess(payload.videoid,payload.cancel))\n      } else {\n\n      }\n    } catch (error) {\n\n    }\n  })\n\n\n}\n","C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountRedux.ts",["3117","3118","3119","3120"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountRedux.ts",["3121","3122","3123","3124"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountRedux.ts",["3125","3126","3127"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersRedux.ts",["3128","3129","3130","3131","3132","3133","3134"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersRedux.ts",["3135","3136","3137","3138","3139","3140","3141"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrdersPage.tsx",["3142","3143"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\utils\\ApiHelper.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\UserList.tsx",["3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\UserList.tsx",["3164","3165","3166","3167","3168","3169","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\OrderList.tsx",["3196","3197","3198","3199","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255","3256"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\UserList.tsx",["3257","3258","3259","3260","3261","3262","3263","3264","3265","3266","3267","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\OrderList.tsx",["3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304","3305","3306","3307","3308","3309","3310","3311","3312","3313","3314","3315","3316","3317","3318","3319","3320","3321","3322","3323","3324","3325","3326","3327","3328","3329","3330","3331","3332","3333","3334","3335","3336","3337","3338","3339","3340","3341","3342","3343"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\OrderList.tsx",["3344","3345","3346","3347","3348","3349","3350","3351","3352","3353","3354","3355","3356","3357","3358","3359","3360","3361","3362","3363","3364","3365","3366","3367","3368","3369","3370","3371","3372","3373","3374","3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385","3386","3387","3388","3389","3390","3391","3392","3393","3394","3395","3396","3397","3398","3399","3400","3401","3402","3403","3404"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenu.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\Topbar.tsx",["3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\header\\page-title\\DefaultTitle.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\redux\\AccountCRUD.ts",["3417"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\redux\\OrdersCRUD.ts",["3418"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\redux\\OrdersCRUD.ts",["3419"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\redux\\AccountCRUD.ts",["3420"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\redux\\AccountCRUD.ts",["3421"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\redux\\AccountCRUD.ts",["3422"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\redux\\OrdersCRUD.ts",["3423"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\redux\\OrdersCRUD.ts",["3424"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Login.tsx",["3425"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\Registration.tsx",["3426"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\auth\\components\\ForgotPassword.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\OrderList.tsx",["3427","3428","3429","3430","3431","3432"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\SearchComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\MenuComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_SwapperComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ToggleComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_PasswordMeterComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\dataExamples.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\chat\\ChatInner.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\components\\KTSVG.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditModal\\index.tsx",["3433","3434","3435","3436","3437","3438","3439","3440"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\modals\\EditModal\\index.tsx",["3441","3442","3443","3444","3445","3446","3447","3448","3449","3450"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditModal\\index.tsx",["3451","3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465","3466","3467"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\modals\\EditModal\\index.tsx",["3468","3469","3470","3471","3472","3473","3474","3475","3476","3477"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditModal\\index.tsx",["3478","3479","3480","3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491","3492","3493","3494","3495","3496","3497"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\ComputerItem\\index.tsx",["3498","3499","3500","3501","3502","3503","3504","3505","3506","3507","3508"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuMain.tsx",["3509","3510","3511"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\StaticList.tsx",["3512","3513","3514"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditModal\\index.tsx",["3515","3516","3517","3518","3519","3520","3521","3522","3523","3524"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_CookieComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\index.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\AssetHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\BhManualModal\\index.tsx",["3525","3526","3527","3528","3529","3530","3531","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3558","3559"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\users\\components\\UserItem\\index.tsx",["3560","3561","3562","3563","3564","3565","3566","3567","3568"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\setting\\components\\UserItem\\index.tsx",["3569","3570","3571","3572","3573","3574","3575"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\layout\\components\\aside\\AsideMenuItem.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\EditMulti\\index.tsx",["3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddModal\\index.tsx",["3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\modals\\AddManualModal\\index.tsx",["3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\balance\\components\\OrderItem\\index.tsx",["3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderdone\\components\\OrderItem\\index.tsx",["3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\components\\OrderItem\\index.tsx",["3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\EditMulti\\index.tsx",["3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695","3696","3697","3698","3699","3700","3701","3702"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\EventHandlerUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\ElementAnimateUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_ElementStyleUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddModal\\index.tsx",["3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713","3714","3715","3716","3717","3718","3719","3720","3721","3722","3723"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DataUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_DOMEventHandlerUtil.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\_TypesHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\DomHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\ViewPortModel.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\_utils\\models\\OffsetModel.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\helpers\\RouterHelpers.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StickyComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_StepperComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollTopComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ScrollComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_ImageInputComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_FeedbackComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\assets\\ts\\components\\_DrawerComponent.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\editor\\EditorToolbar.ts",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\history\\components\\HistoryItem\\index.tsx",["3724","3725","3726"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\fallback-view\\FallbackView.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown2.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\code-highlight\\CodeBlock.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\portal\\Portal.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\dropdown\\Dropdown1.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\InboxCompose.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\MenuModal.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\user-menu\\UserMenu.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\create-app\\CreateApp.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarUser.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\activity-drawer\\ActivityDrawer.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\sidebar-partials\\SidebarGeneral.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\ExploreMain.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderUserMenu.tsx",["3727","3728","3729"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\header-menus\\HeaderNotificationsMenu.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\modals\\create-app\\Main.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orders\\modals\\AddManualModal\\index.tsx",["3730","3731","3732","3733","3734","3735","3736","3737","3738","3739","3740","3741","3742","3743","3744","3745","3746","3747","3748","3749","3750","3751","3752","3753","3754","3755","3756","3757","3758","3759","3760","3761","3762","3763","3764"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\EditMulti\\index.tsx",["3765","3766","3767","3768","3769","3770","3771","3772","3773","3774","3775","3776","3777","3778","3779","3780","3781","3782","3783"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddManualModal\\index.tsx",["3784","3785","3786","3787","3788","3789","3790","3791","3792"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\RestartMulti\\index.tsx",["3793","3794","3795","3796","3797","3798","3799","3800","3801","3802","3803","3804","3805","3806"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\modals\\AddModal\\index.tsx",["3807","3808","3809","3810","3811","3812","3813","3814","3815","3816","3817","3818","3819","3820","3821","3822","3823"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\modals\\EditMulti\\index.tsx",["3824","3825","3826","3827","3828","3829","3830","3831","3832","3833","3834"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\orderhistory\\components\\OrderItem\\index.tsx",["3835","3836","3837","3838","3839","3840","3841","3842","3843","3844","3845","3846","3847","3848","3849","3850","3851","3852","3853","3854","3855"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\app\\modules\\accounts\\components\\UserItem\\index.tsx",["3856","3857","3858","3859","3860","3861","3862","3863","3864","3865","3866","3867","3868","3869","3870","3871"],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\SearchModal.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\search\\Search.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Demos.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\explore\\Toggle.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item8.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item7.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item1.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item5.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item2.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item3.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item4.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\content\\activity\\Item6.tsx",[],"C:\\Users\\KT2\\OneDrive\\Documents\\View\\ssc.fe.cheatview-main\\src\\_metronic\\partials\\layout\\quick-links\\QuicLinks.tsx",[],{"ruleId":"3872","severity":1,"message":"3873","line":29,"column":8,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":13},{"ruleId":"3876","replacedBy":"3877"},{"ruleId":"3878","replacedBy":"3879"},{"ruleId":"3880","severity":1,"message":"3881","line":20,"column":6,"nodeType":"3882","endLine":20,"endColumn":8,"suggestions":"3883"},{"ruleId":"3872","severity":1,"message":"3884","line":26,"column":9,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3885","line":30,"column":9,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3886","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3887","line":26,"column":9,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":150,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":163},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":321,"column":3,"nodeType":"3894","messageId":"3895","endLine":328,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":321,"column":3,"nodeType":"3874","messageId":"3898","endLine":321,"endColumn":7},{"ruleId":"3880","severity":1,"message":"3881","line":18,"column":6,"nodeType":"3882","endLine":18,"endColumn":8,"suggestions":"3899"},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"3902","line":5,"column":26,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3903","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3904","severity":1,"message":"3905","line":106,"column":29,"nodeType":"3906","endLine":106,"endColumn":81},{"ruleId":"3907","severity":1,"message":"3908","line":121,"column":96,"nodeType":"3909","messageId":"3910","endLine":121,"endColumn":98},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":10,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":10,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3912","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3920","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3907","severity":1,"message":"3921","line":47,"column":59,"nodeType":"3909","messageId":"3910","endLine":47,"endColumn":61},{"ruleId":"3872","severity":1,"message":"3903","line":4,"column":10,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3922","line":5,"column":10,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":30},{"ruleId":"3880","severity":1,"message":"3881","line":18,"column":6,"nodeType":"3882","endLine":18,"endColumn":8,"suggestions":"3923"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3924","severity":1,"message":"3925","line":24,"column":17,"nodeType":"3906","endLine":24,"endColumn":102},{"ruleId":"3924","severity":1,"message":"3925","line":32,"column":17,"nodeType":"3906","endLine":32,"endColumn":102},{"ruleId":"3876","replacedBy":"3926"},{"ruleId":"3878","replacedBy":"3927"},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":5,"column":8,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":14},{"ruleId":"3907","severity":1,"message":"3908","line":14,"column":78,"nodeType":"3909","messageId":"3910","endLine":14,"endColumn":80},{"ruleId":"3872","severity":1,"message":"3929","line":15,"column":19,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":26},{"ruleId":"3924","severity":1,"message":"3925","line":28,"column":17,"nodeType":"3906","endLine":28,"endColumn":150},{"ruleId":"3907","severity":1,"message":"3908","line":37,"column":111,"nodeType":"3909","messageId":"3910","endLine":37,"endColumn":113},{"ruleId":"3924","severity":1,"message":"3925","line":41,"column":21,"nodeType":"3906","endLine":41,"endColumn":120},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":15,"column":12,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":15,"column":21,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3935","line":17,"column":21,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":31},{"ruleId":"3907","severity":1,"message":"3908","line":27,"column":92,"nodeType":"3909","messageId":"3910","endLine":27,"endColumn":94},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":103,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":105},{"ruleId":"3924","severity":1,"message":"3925","line":87,"column":21,"nodeType":"3906","endLine":87,"endColumn":137},{"ruleId":"3924","severity":1,"message":"3925","line":90,"column":21,"nodeType":"3906","endLine":90,"endColumn":132},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":11,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3938","line":29,"column":23,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":30,"column":12,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":30,"column":25,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":40},{"ruleId":"3872","severity":1,"message":"3941","line":40,"column":12,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3942","line":40,"column":24,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3943","line":42,"column":12,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":42,"column":18,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3945","line":43,"column":12,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3946","line":43,"column":21,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3947","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3948","line":44,"column":26,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3949","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3950","line":45,"column":22,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3951","line":50,"column":11,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":57,"column":28,"nodeType":"3909","messageId":"3910","endLine":57,"endColumn":30},{"ruleId":"3907","severity":1,"message":"3908","line":61,"column":48,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":65,"column":59,"nodeType":"3909","messageId":"3910","endLine":65,"endColumn":61},{"ruleId":"3880","severity":1,"message":"3952","line":99,"column":8,"nodeType":"3882","endLine":99,"endColumn":16,"suggestions":"3953"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":22,"column":9,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":31,"column":23,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3941","line":41,"column":10,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3942","line":41,"column":22,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3943","line":43,"column":10,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3944","line":43,"column":16,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3945","line":44,"column":10,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3946","line":44,"column":19,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3947","line":45,"column":10,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3948","line":45,"column":24,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":39},{"ruleId":"3872","severity":1,"message":"3949","line":46,"column":10,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3950","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":28},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":9,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":61,"column":55,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":95,"column":6,"nodeType":"3882","endLine":95,"endColumn":14,"suggestions":"3955"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":20,"column":11,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":22,"column":11,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3954","line":30,"column":12,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":30,"column":23,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":31,"column":12,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":31,"column":25,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":40},{"ruleId":"3872","severity":1,"message":"3941","line":41,"column":12,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3942","line":41,"column":24,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3943","line":43,"column":12,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":43,"column":18,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3945","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3946","line":44,"column":21,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3947","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3948","line":45,"column":26,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3949","line":46,"column":12,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3950","line":46,"column":22,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":11,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":61,"column":59,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":61},{"ruleId":"3880","severity":1,"message":"3952","line":97,"column":8,"nodeType":"3882","endLine":97,"endColumn":16,"suggestions":"3956"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3957","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3928","line":5,"column":8,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":14},{"ruleId":"3924","severity":1,"message":"3925","line":21,"column":17,"nodeType":"3906","endLine":21,"endColumn":102},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"3960"},{"ruleId":"3907","severity":1,"message":"3908","line":25,"column":45,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":47},{"ruleId":"3907","severity":1,"message":"3921","line":25,"column":103,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":105},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3964","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3965","line":8,"column":36,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3967","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3968","line":23,"column":10,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":23,"column":25,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3970","line":26,"column":19,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":29,"column":6,"nodeType":"3882","endLine":29,"endColumn":8,"suggestions":"3971"},{"ruleId":"3907","severity":1,"message":"3908","line":94,"column":22,"nodeType":"3909","messageId":"3910","endLine":94,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":98,"column":70,"nodeType":"3909","messageId":"3910","endLine":98,"endColumn":72},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3973","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3907","severity":1,"message":"3908","line":21,"column":73,"nodeType":"3909","messageId":"3910","endLine":21,"endColumn":75},{"ruleId":"3924","severity":1,"message":"3925","line":53,"column":25,"nodeType":"3906","endLine":53,"endColumn":129},{"ruleId":"3907","severity":1,"message":"3921","line":66,"column":44,"nodeType":"3909","messageId":"3910","endLine":66,"endColumn":46},{"ruleId":"3907","severity":1,"message":"3908","line":77,"column":88,"nodeType":"3909","messageId":"3910","endLine":77,"endColumn":90},{"ruleId":"3907","severity":1,"message":"3908","line":77,"column":134,"nodeType":"3909","messageId":"3910","endLine":77,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":79,"column":36,"nodeType":"3909","messageId":"3910","endLine":79,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3908","line":86,"column":43,"nodeType":"3909","messageId":"3910","endLine":86,"endColumn":45},{"ruleId":"3907","severity":1,"message":"3921","line":96,"column":42,"nodeType":"3909","messageId":"3910","endLine":96,"endColumn":44},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3962","line":12,"column":16,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3974","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3951","line":32,"column":11,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":39,"column":28,"nodeType":"3909","messageId":"3910","endLine":39,"endColumn":30},{"ruleId":"3880","severity":1,"message":"3952","line":56,"column":8,"nodeType":"3882","endLine":56,"endColumn":16,"suggestions":"3975"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3962","line":12,"column":16,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3974","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3976","line":29,"column":23,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3977","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3951","line":32,"column":11,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":39,"column":28,"nodeType":"3909","messageId":"3910","endLine":39,"endColumn":30},{"ruleId":"3880","severity":1,"message":"3952","line":56,"column":8,"nodeType":"3882","endLine":56,"endColumn":16,"suggestions":"3978"},{"ruleId":"3872","severity":1,"message":"3873","line":29,"column":8,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":13},{"ruleId":"3876","replacedBy":"3979"},{"ruleId":"3878","replacedBy":"3980"},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"3981"},{"ruleId":"3907","severity":1,"message":"3908","line":25,"column":47,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":49},{"ruleId":"3907","severity":1,"message":"3921","line":25,"column":105,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":107},{"ruleId":"3872","severity":1,"message":"3982","line":9,"column":16,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3983","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3908","line":29,"column":26,"nodeType":"3909","messageId":"3910","endLine":29,"endColumn":28},{"ruleId":"3880","severity":1,"message":"3881","line":37,"column":6,"nodeType":"3882","endLine":37,"endColumn":14,"suggestions":"3984"},{"ruleId":"3907","severity":1,"message":"3908","line":80,"column":70,"nodeType":"3909","messageId":"3910","endLine":80,"endColumn":72},{"ruleId":"3907","severity":1,"message":"3908","line":104,"column":21,"nodeType":"3909","messageId":"3910","endLine":104,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":135,"column":17,"nodeType":"3909","messageId":"3910","endLine":135,"endColumn":19},{"ruleId":"3907","severity":1,"message":"3908","line":147,"column":23,"nodeType":"3909","messageId":"3910","endLine":147,"endColumn":25},{"ruleId":"3907","severity":1,"message":"3908","line":173,"column":23,"nodeType":"3909","messageId":"3910","endLine":173,"endColumn":25},{"ruleId":"3907","severity":1,"message":"3908","line":207,"column":15,"nodeType":"3909","messageId":"3910","endLine":207,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3985","line":14,"column":10,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":22},{"ruleId":"3880","severity":1,"message":"3881","line":20,"column":6,"nodeType":"3882","endLine":20,"endColumn":8,"suggestions":"3986"},{"ruleId":"3872","severity":1,"message":"3886","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3887","line":26,"column":9,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3987","line":7,"column":64,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":77},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":94,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":107},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":303,"column":3,"nodeType":"3894","messageId":"3895","endLine":317,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":303,"column":3,"nodeType":"3874","messageId":"3898","endLine":303,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3963","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3962","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3988","line":163,"column":21,"nodeType":"3874","messageId":"3875","endLine":163,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3968","line":27,"column":10,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":27,"column":25,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3970","line":30,"column":19,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3921","line":104,"column":23,"nodeType":"3909","messageId":"3910","endLine":104,"endColumn":25},{"ruleId":"3880","severity":1,"message":"3989","line":108,"column":12,"nodeType":"3909","endLine":108,"endColumn":20},{"ruleId":"3880","severity":1,"message":"3990","line":110,"column":19,"nodeType":"3874","endLine":110,"endColumn":27},{"ruleId":"3991","severity":1,"message":"3992","line":118,"column":5,"nodeType":"3882","messageId":"3993","endLine":118,"endColumn":54},{"ruleId":"3907","severity":1,"message":"3908","line":129,"column":70,"nodeType":"3909","messageId":"3910","endLine":129,"endColumn":72},{"ruleId":"3994","severity":1,"message":"3995","line":261,"column":77,"nodeType":"3996","messageId":"3997","endLine":261,"endColumn":79},{"ruleId":"3907","severity":1,"message":"3908","line":262,"column":38,"nodeType":"3909","messageId":"3910","endLine":262,"endColumn":40},{"ruleId":"3907","severity":1,"message":"3908","line":262,"column":50,"nodeType":"3909","messageId":"3910","endLine":262,"endColumn":52},{"ruleId":"3907","severity":1,"message":"3908","line":275,"column":193,"nodeType":"3909","messageId":"3910","endLine":275,"endColumn":195},{"ruleId":"3907","severity":1,"message":"3908","line":275,"column":205,"nodeType":"3909","messageId":"3910","endLine":275,"endColumn":207},{"ruleId":"3907","severity":1,"message":"3908","line":288,"column":43,"nodeType":"3909","messageId":"3910","endLine":288,"endColumn":45},{"ruleId":"3907","severity":1,"message":"3908","line":288,"column":55,"nodeType":"3909","messageId":"3910","endLine":288,"endColumn":57},{"ruleId":"3907","severity":1,"message":"3908","line":329,"column":43,"nodeType":"3909","messageId":"3910","endLine":329,"endColumn":45},{"ruleId":"3907","severity":1,"message":"3908","line":329,"column":55,"nodeType":"3909","messageId":"3910","endLine":329,"endColumn":57},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"3902","line":5,"column":26,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3903","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3904","severity":1,"message":"3905","line":107,"column":29,"nodeType":"3906","endLine":107,"endColumn":81},{"ruleId":"3907","severity":1,"message":"3908","line":122,"column":96,"nodeType":"3909","messageId":"3910","endLine":122,"endColumn":98},{"ruleId":"3872","severity":1,"message":"3903","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3998","line":6,"column":9,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3999","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":12},{"ruleId":"3872","severity":1,"message":"3902","line":2,"column":20,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4000","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4001","line":4,"column":50,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":60},{"ruleId":"3872","severity":1,"message":"4002","line":4,"column":62,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":68},{"ruleId":"3872","severity":1,"message":"4003","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4004","line":11,"column":7,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4005","line":12,"column":3,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4006","line":13,"column":3,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4007","line":14,"column":3,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4008","line":22,"column":10,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":10,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":10,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4009","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3912","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"4010","line":18,"column":12,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3907","severity":1,"message":"3908","line":42,"column":20,"nodeType":"3909","messageId":"3910","endLine":42,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3966","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3928","line":5,"column":8,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4011","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4012","line":15,"column":11,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3908","line":16,"column":78,"nodeType":"3909","messageId":"3910","endLine":16,"endColumn":80},{"ruleId":"3872","severity":1,"message":"3929","line":17,"column":19,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":26},{"ruleId":"3907","severity":1,"message":"3908","line":41,"column":36,"nodeType":"3909","messageId":"3910","endLine":41,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3908","line":45,"column":69,"nodeType":"3909","messageId":"3910","endLine":45,"endColumn":71},{"ruleId":"3907","severity":1,"message":"3908","line":46,"column":32,"nodeType":"3909","messageId":"3910","endLine":46,"endColumn":34},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3920","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3907","severity":1,"message":"3921","line":47,"column":59,"nodeType":"3909","messageId":"3910","endLine":47,"endColumn":61},{"ruleId":"3872","severity":1,"message":"3903","line":4,"column":10,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3922","line":5,"column":10,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3887","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4013","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4014","line":4,"column":8,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":25},{"ruleId":"3880","severity":1,"message":"3989","line":79,"column":12,"nodeType":"3909","endLine":79,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3962","line":12,"column":16,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3974","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3936","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3977","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3951","line":34,"column":11,"nodeType":"3874","messageId":"3875","endLine":34,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":58,"column":20,"nodeType":"3909","messageId":"3910","endLine":58,"endColumn":22},{"ruleId":"3880","severity":1,"message":"3952","line":78,"column":8,"nodeType":"3882","endLine":78,"endColumn":16,"suggestions":"4015"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":22,"column":9,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":31,"column":23,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3941","line":41,"column":10,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3942","line":41,"column":22,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3943","line":43,"column":10,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3944","line":43,"column":16,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3945","line":44,"column":10,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3946","line":44,"column":19,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3947","line":45,"column":10,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3948","line":45,"column":24,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":39},{"ruleId":"3872","severity":1,"message":"3949","line":46,"column":10,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3950","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":28},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":9,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":61,"column":55,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":95,"column":6,"nodeType":"3882","endLine":95,"endColumn":14,"suggestions":"4016"},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":11,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3938","line":29,"column":23,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":30,"column":12,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":30,"column":25,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":40},{"ruleId":"3872","severity":1,"message":"3941","line":40,"column":12,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3942","line":40,"column":24,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3943","line":42,"column":12,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":42,"column":18,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3945","line":43,"column":12,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3946","line":43,"column":21,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3947","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3948","line":44,"column":26,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3949","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3950","line":45,"column":22,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3951","line":50,"column":11,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":57,"column":28,"nodeType":"3909","messageId":"3910","endLine":57,"endColumn":30},{"ruleId":"3907","severity":1,"message":"3908","line":61,"column":48,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":65,"column":59,"nodeType":"3909","messageId":"3910","endLine":65,"endColumn":61},{"ruleId":"3880","severity":1,"message":"3952","line":99,"column":8,"nodeType":"3882","endLine":99,"endColumn":16,"suggestions":"4017"},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":15,"column":12,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":15,"column":21,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3935","line":17,"column":21,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":31},{"ruleId":"3907","severity":1,"message":"3908","line":27,"column":92,"nodeType":"3909","messageId":"3910","endLine":27,"endColumn":94},{"ruleId":"3907","severity":1,"message":"3908","line":73,"column":129,"nodeType":"3909","messageId":"3910","endLine":73,"endColumn":131},{"ruleId":"3924","severity":1,"message":"3925","line":91,"column":21,"nodeType":"3906","endLine":91,"endColumn":137},{"ruleId":"3924","severity":1,"message":"3925","line":94,"column":21,"nodeType":"3906","endLine":94,"endColumn":132},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3962","line":13,"column":16,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4018","line":14,"column":8,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4019","line":15,"column":8,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4020","line":16,"column":9,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":15},{"ruleId":"3872","severity":1,"message":"4021","line":17,"column":9,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4022","line":18,"column":13,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4023","line":19,"column":9,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3936","line":28,"column":11,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":30,"column":11,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4024","line":31,"column":12,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":18},{"ruleId":"3872","severity":1,"message":"4025","line":31,"column":19,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":28},{"ruleId":"3872","severity":1,"message":"3954","line":43,"column":12,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":43,"column":23,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":44,"column":25,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":40},{"ruleId":"3872","severity":1,"message":"3941","line":54,"column":12,"nodeType":"3874","messageId":"3875","endLine":54,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3942","line":54,"column":24,"nodeType":"3874","messageId":"3875","endLine":54,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3943","line":56,"column":12,"nodeType":"3874","messageId":"3875","endLine":56,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":56,"column":18,"nodeType":"3874","messageId":"3875","endLine":56,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3945","line":57,"column":12,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3946","line":57,"column":21,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3947","line":58,"column":12,"nodeType":"3874","messageId":"3875","endLine":58,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3948","line":58,"column":26,"nodeType":"3874","messageId":"3875","endLine":58,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3949","line":59,"column":12,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3950","line":59,"column":22,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3973","line":63,"column":12,"nodeType":"3874","messageId":"3875","endLine":63,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3951","line":65,"column":11,"nodeType":"3874","messageId":"3875","endLine":65,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":79,"column":59,"nodeType":"3909","messageId":"3910","endLine":79,"endColumn":61},{"ruleId":"3907","severity":1,"message":"3908","line":97,"column":45,"nodeType":"3909","messageId":"3910","endLine":97,"endColumn":47},{"ruleId":"3880","severity":1,"message":"4026","line":131,"column":7,"nodeType":"3882","endLine":131,"endColumn":13,"suggestions":"4027"},{"ruleId":"3907","severity":1,"message":"3908","line":137,"column":70,"nodeType":"3909","messageId":"3910","endLine":137,"endColumn":72},{"ruleId":"3907","severity":1,"message":"3908","line":143,"column":68,"nodeType":"3909","messageId":"3910","endLine":143,"endColumn":70},{"ruleId":"3994","severity":1,"message":"3995","line":344,"column":54,"nodeType":"3996","messageId":"3997","endLine":344,"endColumn":56},{"ruleId":"3907","severity":1,"message":"3908","line":364,"column":89,"nodeType":"3909","messageId":"3910","endLine":364,"endColumn":91},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3974","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3951","line":33,"column":11,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":57,"column":20,"nodeType":"3909","messageId":"3910","endLine":57,"endColumn":22},{"ruleId":"3880","severity":1,"message":"3952","line":77,"column":8,"nodeType":"3882","endLine":77,"endColumn":16,"suggestions":"4028"},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3973","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3907","severity":1,"message":"3908","line":21,"column":73,"nodeType":"3909","messageId":"3910","endLine":21,"endColumn":75},{"ruleId":"3907","severity":1,"message":"3921","line":54,"column":100,"nodeType":"3909","messageId":"3910","endLine":54,"endColumn":102},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":117,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":119},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":151,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":153},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":187,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":189},{"ruleId":"3907","severity":1,"message":"3908","line":77,"column":36,"nodeType":"3909","messageId":"3910","endLine":77,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3908","line":83,"column":44,"nodeType":"3909","messageId":"3910","endLine":83,"endColumn":46},{"ruleId":"3907","severity":1,"message":"3908","line":83,"column":81,"nodeType":"3909","messageId":"3910","endLine":83,"endColumn":83},{"ruleId":"3907","severity":1,"message":"3921","line":93,"column":42,"nodeType":"3909","messageId":"3910","endLine":93,"endColumn":44},{"ruleId":"3907","severity":1,"message":"3921","line":102,"column":42,"nodeType":"3909","messageId":"3910","endLine":102,"endColumn":44},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4013","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3957","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3928","line":5,"column":8,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":14},{"ruleId":"3924","severity":1,"message":"3925","line":21,"column":17,"nodeType":"3906","endLine":21,"endColumn":102},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3890","line":15,"column":3,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3891","line":18,"column":7,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":360,"column":3,"nodeType":"3894","messageId":"3895","endLine":376,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":360,"column":3,"nodeType":"3874","messageId":"3898","endLine":360,"endColumn":7},{"ruleId":"3872","severity":1,"message":"4029","line":1,"column":28,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"4030","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3982","line":8,"column":27,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4031","line":24,"column":6,"nodeType":"3882","endLine":24,"endColumn":8,"suggestions":"4032"},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4033","line":1,"column":26,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":43},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"4034","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4035","line":3,"column":18,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4036","line":5,"column":16,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3903","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":16,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4030","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3982","line":14,"column":27,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4037","line":16,"column":9,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3936","line":50,"column":9,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4038","line":57,"column":9,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3937","line":59,"column":9,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4039","line":61,"column":9,"nodeType":"3874","messageId":"3875","endLine":61,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4040","line":65,"column":9,"nodeType":"3874","messageId":"3875","endLine":65,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4041","line":104,"column":5,"nodeType":"3874","messageId":"3875","endLine":104,"endColumn":11},{"ruleId":"3907","severity":1,"message":"3921","line":107,"column":21,"nodeType":"3909","messageId":"3910","endLine":107,"endColumn":23},{"ruleId":"3880","severity":1,"message":"3989","line":111,"column":12,"nodeType":"3909","endLine":111,"endColumn":20},{"ruleId":"3880","severity":1,"message":"4042","line":113,"column":21,"nodeType":"3874","endLine":113,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4043","line":117,"column":24,"nodeType":"3874","endLine":117,"endColumn":38},{"ruleId":"3880","severity":1,"message":"4044","line":119,"column":20,"nodeType":"4045","endLine":119,"endColumn":21},{"ruleId":"3880","severity":1,"message":"4046","line":122,"column":30,"nodeType":"3874","endLine":122,"endColumn":50},{"ruleId":"3880","severity":1,"message":"4047","line":124,"column":26,"nodeType":"4045","endLine":124,"endColumn":27},{"ruleId":"3991","severity":1,"message":"3992","line":132,"column":6,"nodeType":"3882","messageId":"3993","endLine":132,"endColumn":51},{"ruleId":"3872","severity":1,"message":"4048","line":133,"column":9,"nodeType":"3874","messageId":"3875","endLine":133,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3908","line":147,"column":70,"nodeType":"3909","messageId":"3910","endLine":147,"endColumn":72},{"ruleId":"3907","severity":1,"message":"3908","line":161,"column":77,"nodeType":"3909","messageId":"3910","endLine":161,"endColumn":79},{"ruleId":"3907","severity":1,"message":"3921","line":373,"column":150,"nodeType":"3909","messageId":"3910","endLine":373,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3921","line":373,"column":257,"nodeType":"3909","messageId":"3910","endLine":373,"endColumn":259},{"ruleId":"3907","severity":1,"message":"3921","line":410,"column":22,"nodeType":"3909","messageId":"3910","endLine":410,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3921","line":416,"column":22,"nodeType":"3909","messageId":"3910","endLine":416,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":429,"column":34,"nodeType":"3909","messageId":"3910","endLine":429,"endColumn":36},{"ruleId":"3907","severity":1,"message":"3908","line":429,"column":63,"nodeType":"3909","messageId":"3910","endLine":429,"endColumn":65},{"ruleId":"3907","severity":1,"message":"3908","line":453,"column":72,"nodeType":"3909","messageId":"3910","endLine":453,"endColumn":74},{"ruleId":"3907","severity":1,"message":"3908","line":453,"column":88,"nodeType":"3909","messageId":"3910","endLine":453,"endColumn":90},{"ruleId":"3907","severity":1,"message":"3908","line":453,"column":100,"nodeType":"3909","messageId":"3910","endLine":453,"endColumn":102},{"ruleId":"3907","severity":1,"message":"3908","line":477,"column":157,"nodeType":"3909","messageId":"3910","endLine":477,"endColumn":159},{"ruleId":"3907","severity":1,"message":"3908","line":477,"column":173,"nodeType":"3909","messageId":"3910","endLine":477,"endColumn":175},{"ruleId":"3907","severity":1,"message":"3908","line":477,"column":185,"nodeType":"3909","messageId":"3910","endLine":477,"endColumn":187},{"ruleId":"3907","severity":1,"message":"3908","line":501,"column":99,"nodeType":"3909","messageId":"3910","endLine":501,"endColumn":101},{"ruleId":"3907","severity":1,"message":"3908","line":501,"column":115,"nodeType":"3909","messageId":"3910","endLine":501,"endColumn":117},{"ruleId":"3907","severity":1,"message":"3908","line":501,"column":131,"nodeType":"3909","messageId":"3910","endLine":501,"endColumn":133},{"ruleId":"3907","severity":1,"message":"3908","line":525,"column":221,"nodeType":"3909","messageId":"3910","endLine":525,"endColumn":223},{"ruleId":"3907","severity":1,"message":"3908","line":525,"column":237,"nodeType":"3909","messageId":"3910","endLine":525,"endColumn":239},{"ruleId":"3907","severity":1,"message":"3908","line":525,"column":253,"nodeType":"3909","messageId":"3910","endLine":525,"endColumn":255},{"ruleId":"3907","severity":1,"message":"3908","line":549,"column":190,"nodeType":"3909","messageId":"3910","endLine":549,"endColumn":192},{"ruleId":"3907","severity":1,"message":"3908","line":549,"column":206,"nodeType":"3909","messageId":"3910","endLine":549,"endColumn":208},{"ruleId":"3907","severity":1,"message":"3908","line":549,"column":222,"nodeType":"3909","messageId":"3910","endLine":549,"endColumn":224},{"ruleId":"3907","severity":1,"message":"3908","line":574,"column":134,"nodeType":"3909","messageId":"3910","endLine":574,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":574,"column":150,"nodeType":"3909","messageId":"3910","endLine":574,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3908","line":574,"column":166,"nodeType":"3909","messageId":"3910","endLine":574,"endColumn":168},{"ruleId":"3907","severity":1,"message":"3908","line":598,"column":254,"nodeType":"3909","messageId":"3910","endLine":598,"endColumn":256},{"ruleId":"3907","severity":1,"message":"3908","line":598,"column":270,"nodeType":"3909","messageId":"3910","endLine":598,"endColumn":272},{"ruleId":"3907","severity":1,"message":"3908","line":598,"column":286,"nodeType":"3909","messageId":"3910","endLine":598,"endColumn":288},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":9,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":32,"column":23,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3942","line":42,"column":21,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4049","line":43,"column":22,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3944","line":44,"column":16,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4050","line":45,"column":21,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4051","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4052","line":49,"column":15,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3951","line":52,"column":9,"nodeType":"3874","messageId":"3875","endLine":52,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":62,"column":51,"nodeType":"3909","messageId":"3910","endLine":62,"endColumn":53},{"ruleId":"3880","severity":1,"message":"3952","line":95,"column":6,"nodeType":"3882","endLine":95,"endColumn":14,"suggestions":"4053"},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":17,"column":12,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":17,"column":21,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3935","line":18,"column":21,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4054","line":20,"column":11,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":27},{"ruleId":"3907","severity":1,"message":"3908","line":34,"column":7,"nodeType":"3909","messageId":"3910","endLine":34,"endColumn":9},{"ruleId":"4055","severity":1,"message":"4056","line":67,"column":17,"nodeType":"3906","messageId":"4057","endLine":67,"endColumn":242,"fix":"4058"},{"ruleId":"3907","severity":1,"message":"3908","line":70,"column":22,"nodeType":"3909","messageId":"3910","endLine":70,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":72,"column":170,"nodeType":"3909","messageId":"3910","endLine":72,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3908","line":72,"column":195,"nodeType":"3909","messageId":"3910","endLine":72,"endColumn":197},{"ruleId":"3907","severity":1,"message":"3908","line":72,"column":220,"nodeType":"3909","messageId":"3910","endLine":72,"endColumn":222},{"ruleId":"3907","severity":1,"message":"3908","line":72,"column":245,"nodeType":"3909","messageId":"3910","endLine":72,"endColumn":247},{"ruleId":"3907","severity":1,"message":"3908","line":83,"column":22,"nodeType":"3909","messageId":"3910","endLine":83,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3921","line":94,"column":18,"nodeType":"3909","messageId":"3910","endLine":94,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3921","line":98,"column":87,"nodeType":"3909","messageId":"3910","endLine":98,"endColumn":89},{"ruleId":"3907","severity":1,"message":"3908","line":98,"column":153,"nodeType":"3909","messageId":"3910","endLine":98,"endColumn":155},{"ruleId":"3907","severity":1,"message":"3921","line":121,"column":18,"nodeType":"3909","messageId":"3910","endLine":121,"endColumn":20},{"ruleId":"3924","severity":1,"message":"3925","line":130,"column":21,"nodeType":"3906","endLine":130,"endColumn":137},{"ruleId":"3924","severity":1,"message":"3925","line":133,"column":44,"nodeType":"3906","endLine":133,"endColumn":155},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3911","line":15,"column":9,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3920","line":34,"column":11,"nodeType":"3874","messageId":"3875","endLine":34,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3954","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":44,"column":23,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":45,"column":25,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":46,"column":25,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4050","line":58,"column":23,"nodeType":"3874","messageId":"3875","endLine":58,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4052","line":62,"column":17,"nodeType":"3874","messageId":"3875","endLine":62,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4060","line":66,"column":10,"nodeType":"3874","messageId":"3875","endLine":66,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4061","line":66,"column":23,"nodeType":"3874","messageId":"3875","endLine":66,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3921","line":69,"column":55,"nodeType":"3909","messageId":"3910","endLine":69,"endColumn":57},{"ruleId":"3907","severity":1,"message":"3921","line":376,"column":203,"nodeType":"3909","messageId":"3910","endLine":376,"endColumn":205},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4054","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3937","line":27,"column":11,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4050","line":49,"column":23,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4052","line":53,"column":17,"nodeType":"3874","messageId":"3875","endLine":53,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":91,"column":46,"nodeType":"3909","messageId":"3910","endLine":91,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3921","line":149,"column":62,"nodeType":"3909","messageId":"3910","endLine":149,"endColumn":64},{"ruleId":"3880","severity":1,"message":"3952","line":166,"column":8,"nodeType":"3882","endLine":166,"endColumn":16,"suggestions":"4062"},{"ruleId":"3907","severity":1,"message":"3908","line":172,"column":74,"nodeType":"3909","messageId":"3910","endLine":172,"endColumn":76},{"ruleId":"3907","severity":1,"message":"3908","line":173,"column":59,"nodeType":"3909","messageId":"3910","endLine":173,"endColumn":61},{"ruleId":"3907","severity":1,"message":"3908","line":178,"column":72,"nodeType":"3909","messageId":"3910","endLine":178,"endColumn":74},{"ruleId":"3994","severity":1,"message":"3995","line":437,"column":58,"nodeType":"3996","messageId":"3997","endLine":437,"endColumn":60},{"ruleId":"3907","severity":1,"message":"3908","line":470,"column":145,"nodeType":"3909","messageId":"3910","endLine":470,"endColumn":147},{"ruleId":"3872","severity":1,"message":"4063","line":1,"column":37,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":26,"column":11,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4064","line":31,"column":12,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4065","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3938","line":34,"column":23,"nodeType":"3874","messageId":"3875","endLine":34,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":35,"column":12,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":35,"column":25,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":36,"column":25,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4050","line":48,"column":23,"nodeType":"3874","messageId":"3875","endLine":48,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4052","line":50,"column":17,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3951","line":54,"column":11,"nodeType":"3874","messageId":"3875","endLine":54,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":48,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":79,"column":55,"nodeType":"3909","messageId":"3910","endLine":79,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":120,"column":8,"nodeType":"3882","endLine":120,"endColumn":16,"suggestions":"4066"},{"ruleId":"3872","severity":1,"message":"4029","line":1,"column":28,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"4030","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3982","line":8,"column":27,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4031","line":25,"column":6,"nodeType":"3882","endLine":25,"endColumn":8,"suggestions":"4067"},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3987","line":7,"column":87,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":100},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":117,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":130},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":317,"column":3,"nodeType":"3894","messageId":"3895","endLine":327,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":317,"column":3,"nodeType":"3874","messageId":"3898","endLine":317,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4033","line":1,"column":26,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":43},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"4034","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4035","line":3,"column":18,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4036","line":5,"column":16,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3903","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4030","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3982","line":14,"column":27,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4068","line":18,"column":10,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":25},{"ruleId":"3872","severity":1,"message":"4069","line":66,"column":10,"nodeType":"3874","messageId":"3875","endLine":66,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4070","line":68,"column":10,"nodeType":"3874","messageId":"3875","endLine":68,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4038","line":82,"column":9,"nodeType":"3874","messageId":"3875","endLine":82,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3937","line":84,"column":9,"nodeType":"3874","messageId":"3875","endLine":84,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4039","line":86,"column":9,"nodeType":"3874","messageId":"3875","endLine":86,"endColumn":28},{"ruleId":"3907","severity":1,"message":"3921","line":124,"column":21,"nodeType":"3909","messageId":"3910","endLine":124,"endColumn":23},{"ruleId":"3880","severity":1,"message":"3989","line":128,"column":12,"nodeType":"3909","endLine":128,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3908","line":131,"column":36,"nodeType":"3909","messageId":"3910","endLine":131,"endColumn":38},{"ruleId":"4071","severity":1,"message":"4072","line":131,"column":65,"nodeType":"3909","messageId":"4073","endLine":131,"endColumn":82},{"ruleId":"3907","severity":1,"message":"3921","line":131,"column":77,"nodeType":"3909","messageId":"3910","endLine":131,"endColumn":79},{"ruleId":"4071","severity":1,"message":"4072","line":131,"column":155,"nodeType":"3909","messageId":"4073","endLine":131,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3921","line":131,"column":167,"nodeType":"3909","messageId":"3910","endLine":131,"endColumn":169},{"ruleId":"4071","severity":1,"message":"4072","line":133,"column":27,"nodeType":"3909","messageId":"4073","endLine":133,"endColumn":44},{"ruleId":"3907","severity":1,"message":"3921","line":133,"column":39,"nodeType":"3909","messageId":"3910","endLine":133,"endColumn":41},{"ruleId":"4071","severity":1,"message":"4072","line":133,"column":117,"nodeType":"3909","messageId":"4073","endLine":133,"endColumn":134},{"ruleId":"3907","severity":1,"message":"3921","line":133,"column":129,"nodeType":"3909","messageId":"3910","endLine":133,"endColumn":131},{"ruleId":"3880","severity":1,"message":"4074","line":139,"column":20,"nodeType":"4045","endLine":139,"endColumn":21},{"ruleId":"3880","severity":1,"message":"4075","line":140,"column":18,"nodeType":"4045","endLine":140,"endColumn":19},{"ruleId":"3880","severity":1,"message":"4076","line":146,"column":15,"nodeType":"4045","endLine":146,"endColumn":16},{"ruleId":"3880","severity":1,"message":"4042","line":150,"column":21,"nodeType":"3874","endLine":150,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4046","line":154,"column":30,"nodeType":"3874","endLine":154,"endColumn":50},{"ruleId":"3880","severity":1,"message":"4047","line":156,"column":26,"nodeType":"4045","endLine":156,"endColumn":27},{"ruleId":"3991","severity":1,"message":"3992","line":162,"column":6,"nodeType":"3882","messageId":"3993","endLine":162,"endColumn":105},{"ruleId":"3872","severity":1,"message":"4048","line":164,"column":9,"nodeType":"3874","messageId":"3875","endLine":164,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4077","line":178,"column":9,"nodeType":"3874","messageId":"3875","endLine":178,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4078","line":188,"column":9,"nodeType":"3874","messageId":"3875","endLine":188,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":299,"column":22,"nodeType":"3909","messageId":"3910","endLine":299,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":312,"column":34,"nodeType":"3909","messageId":"3910","endLine":312,"endColumn":36},{"ruleId":"3907","severity":1,"message":"3908","line":312,"column":46,"nodeType":"3909","messageId":"3910","endLine":312,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3908","line":312,"column":58,"nodeType":"3909","messageId":"3910","endLine":312,"endColumn":60},{"ruleId":"3907","severity":1,"message":"3908","line":345,"column":72,"nodeType":"3909","messageId":"3910","endLine":345,"endColumn":74},{"ruleId":"3907","severity":1,"message":"3908","line":345,"column":84,"nodeType":"3909","messageId":"3910","endLine":345,"endColumn":86},{"ruleId":"3907","severity":1,"message":"3908","line":345,"column":96,"nodeType":"3909","messageId":"3910","endLine":345,"endColumn":98},{"ruleId":"3907","severity":1,"message":"3908","line":378,"column":99,"nodeType":"3909","messageId":"3910","endLine":378,"endColumn":101},{"ruleId":"3907","severity":1,"message":"3908","line":378,"column":115,"nodeType":"3909","messageId":"3910","endLine":378,"endColumn":117},{"ruleId":"3907","severity":1,"message":"3908","line":378,"column":127,"nodeType":"3909","messageId":"3910","endLine":378,"endColumn":129},{"ruleId":"3907","severity":1,"message":"3908","line":411,"column":109,"nodeType":"3909","messageId":"3910","endLine":411,"endColumn":111},{"ruleId":"3907","severity":1,"message":"3908","line":411,"column":125,"nodeType":"3909","messageId":"3910","endLine":411,"endColumn":127},{"ruleId":"3907","severity":1,"message":"3908","line":411,"column":137,"nodeType":"3909","messageId":"3910","endLine":411,"endColumn":139},{"ruleId":"3907","severity":1,"message":"3908","line":445,"column":66,"nodeType":"3909","messageId":"3910","endLine":445,"endColumn":68},{"ruleId":"3907","severity":1,"message":"3908","line":445,"column":82,"nodeType":"3909","messageId":"3910","endLine":445,"endColumn":84},{"ruleId":"3907","severity":1,"message":"3908","line":445,"column":94,"nodeType":"3909","messageId":"3910","endLine":445,"endColumn":96},{"ruleId":"3907","severity":1,"message":"3908","line":481,"column":99,"nodeType":"3909","messageId":"3910","endLine":481,"endColumn":101},{"ruleId":"3907","severity":1,"message":"3908","line":481,"column":115,"nodeType":"3909","messageId":"3910","endLine":481,"endColumn":117},{"ruleId":"3907","severity":1,"message":"3908","line":481,"column":127,"nodeType":"3909","messageId":"3910","endLine":481,"endColumn":129},{"ruleId":"3907","severity":1,"message":"3908","line":517,"column":134,"nodeType":"3909","messageId":"3910","endLine":517,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":517,"column":150,"nodeType":"3909","messageId":"3910","endLine":517,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3908","line":517,"column":162,"nodeType":"3909","messageId":"3910","endLine":517,"endColumn":164},{"ruleId":"3907","severity":1,"message":"3908","line":550,"column":134,"nodeType":"3909","messageId":"3910","endLine":550,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":550,"column":150,"nodeType":"3909","messageId":"3910","endLine":550,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3908","line":550,"column":162,"nodeType":"3909","messageId":"3910","endLine":550,"endColumn":164},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3920","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3954","line":35,"column":12,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":35,"column":23,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":36,"column":12,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":36,"column":25,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":37,"column":25,"nodeType":"3874","messageId":"3875","endLine":37,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4052","line":47,"column":17,"nodeType":"3874","messageId":"3875","endLine":47,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4050","line":49,"column":23,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":35},{"ruleId":"3907","severity":1,"message":"3921","line":60,"column":55,"nodeType":"3909","messageId":"3910","endLine":60,"endColumn":57},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":11,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4064","line":28,"column":12,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4065","line":28,"column":21,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3938","line":31,"column":23,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":32,"column":12,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":32,"column":25,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":33,"column":25,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4052","line":39,"column":17,"nodeType":"3874","messageId":"3875","endLine":39,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4050","line":45,"column":23,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":11,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":58,"column":28,"nodeType":"3909","messageId":"3910","endLine":58,"endColumn":30},{"ruleId":"3907","severity":1,"message":"3908","line":62,"column":48,"nodeType":"3909","messageId":"3910","endLine":62,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":66,"column":55,"nodeType":"3909","messageId":"3910","endLine":66,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":107,"column":8,"nodeType":"3882","endLine":107,"endColumn":16,"suggestions":"4079"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3937","line":22,"column":11,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4052","line":36,"column":17,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4050","line":38,"column":23,"nodeType":"3874","messageId":"3875","endLine":38,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3951","line":44,"column":11,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":55,"column":55,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":57},{"ruleId":"3872","severity":1,"message":"4080","line":60,"column":24,"nodeType":"3874","messageId":"3875","endLine":60,"endColumn":33},{"ruleId":"3880","severity":1,"message":"3952","line":106,"column":8,"nodeType":"3882","endLine":106,"endColumn":16,"suggestions":"4081"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":9,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":32,"column":23,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":38},{"ruleId":"3872","severity":1,"message":"4052","line":39,"column":15,"nodeType":"3874","messageId":"3875","endLine":39,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3942","line":42,"column":21,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4049","line":43,"column":22,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3944","line":44,"column":16,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4050","line":45,"column":21,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4051","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":9,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":61,"column":51,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":53},{"ruleId":"3880","severity":1,"message":"3952","line":93,"column":6,"nodeType":"3882","endLine":93,"endColumn":14,"suggestions":"4082"},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":18,"column":12,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":18,"column":21,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":19,"column":12,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":19,"column":21,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4083","line":30,"column":11,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4012","line":33,"column":11,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3908","line":34,"column":78,"nodeType":"3909","messageId":"3910","endLine":34,"endColumn":80},{"ruleId":"4055","severity":1,"message":"4056","line":50,"column":17,"nodeType":"3906","messageId":"4057","endLine":50,"endColumn":242,"fix":"4084"},{"ruleId":"3907","severity":1,"message":"3908","line":53,"column":22,"nodeType":"3909","messageId":"3910","endLine":53,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":170,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":198,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":200},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":223,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":225},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":248,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":250},{"ruleId":"3907","severity":1,"message":"3908","line":62,"column":22,"nodeType":"3909","messageId":"3910","endLine":62,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3921","line":95,"column":18,"nodeType":"3909","messageId":"3910","endLine":95,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":4,"column":8,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4085","line":11,"column":10,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"4086"},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4011","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3958","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4087","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4088","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3973","line":22,"column":10,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3935","line":22,"column":19,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4090","line":23,"column":10,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4091","line":23,"column":25,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4092","line":24,"column":10,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4093","line":24,"column":28,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3968","line":25,"column":10,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":25,"column":25,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4094","line":26,"column":10,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4095","line":26,"column":22,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4096","line":27,"column":10,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4097","line":27,"column":31,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":53},{"ruleId":"3872","severity":1,"message":"4098","line":28,"column":10,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3970","line":28,"column":19,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4099","line":29,"column":10,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4100","line":29,"column":19,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4101","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4102","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4103","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4104","line":31,"column":25,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4105","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4106","line":32,"column":15,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3974","line":33,"column":9,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4078","line":35,"column":9,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4010","line":17,"column":10,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":18},{"ruleId":"3907","severity":1,"message":"3921","line":35,"column":37,"nodeType":"3909","messageId":"3910","endLine":35,"endColumn":39},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4087","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4012","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3908","line":25,"column":78,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":80},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4085","line":11,"column":10,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"4107"},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4011","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3958","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4087","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4088","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3973","line":22,"column":10,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3935","line":22,"column":19,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4090","line":23,"column":10,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4091","line":23,"column":25,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4092","line":24,"column":10,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4093","line":24,"column":28,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3968","line":25,"column":10,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":25,"column":25,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4094","line":26,"column":10,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4095","line":26,"column":22,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4096","line":27,"column":10,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4097","line":27,"column":31,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":53},{"ruleId":"3872","severity":1,"message":"4098","line":28,"column":10,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3970","line":28,"column":19,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4099","line":29,"column":10,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4100","line":29,"column":19,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4101","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4102","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4103","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4104","line":31,"column":25,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4105","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4106","line":32,"column":15,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3974","line":33,"column":9,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4078","line":35,"column":9,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3958","line":9,"column":29,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":34},{"ruleId":"3872","severity":1,"message":"4010","line":17,"column":10,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4087","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4029","line":1,"column":28,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"4030","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3958","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3982","line":7,"column":27,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4031","line":23,"column":6,"nodeType":"3882","endLine":23,"endColumn":8,"suggestions":"4108"},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3987","line":7,"column":87,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":100},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":117,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":130},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":317,"column":3,"nodeType":"3894","messageId":"3895","endLine":327,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":317,"column":3,"nodeType":"3874","messageId":"3898","endLine":317,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4033","line":1,"column":26,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":43},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"4034","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4035","line":3,"column":18,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4036","line":5,"column":16,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3903","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4030","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3982","line":11,"column":27,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4068","line":16,"column":9,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4010","line":24,"column":12,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4109","line":44,"column":10,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4110","line":44,"column":19,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3968","line":45,"column":10,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":45,"column":25,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4090","line":46,"column":10,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4091","line":46,"column":25,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4069","line":55,"column":10,"nodeType":"3874","messageId":"3875","endLine":55,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4070","line":57,"column":10,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4111","line":59,"column":10,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4112","line":59,"column":21,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4113","line":61,"column":8,"nodeType":"3874","messageId":"3875","endLine":61,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4114","line":62,"column":8,"nodeType":"3874","messageId":"3875","endLine":62,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4115","line":62,"column":34,"nodeType":"3874","messageId":"3875","endLine":62,"endColumn":61},{"ruleId":"3872","severity":1,"message":"4116","line":65,"column":18,"nodeType":"3874","messageId":"3875","endLine":65,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4117","line":67,"column":18,"nodeType":"3874","messageId":"3875","endLine":67,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4038","line":72,"column":9,"nodeType":"3874","messageId":"3875","endLine":72,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3937","line":74,"column":9,"nodeType":"3874","messageId":"3875","endLine":74,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4039","line":76,"column":9,"nodeType":"3874","messageId":"3875","endLine":76,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4118","line":78,"column":7,"nodeType":"3874","messageId":"3875","endLine":78,"endColumn":18},{"ruleId":"3907","severity":1,"message":"3921","line":113,"column":21,"nodeType":"3909","messageId":"3910","endLine":113,"endColumn":23},{"ruleId":"3880","severity":1,"message":"3989","line":117,"column":12,"nodeType":"3909","endLine":117,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3908","line":120,"column":36,"nodeType":"3909","messageId":"3910","endLine":120,"endColumn":38},{"ruleId":"4071","severity":1,"message":"4072","line":120,"column":65,"nodeType":"3909","messageId":"4073","endLine":120,"endColumn":82},{"ruleId":"3907","severity":1,"message":"3921","line":120,"column":77,"nodeType":"3909","messageId":"3910","endLine":120,"endColumn":79},{"ruleId":"4071","severity":1,"message":"4072","line":120,"column":155,"nodeType":"3909","messageId":"4073","endLine":120,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3921","line":120,"column":167,"nodeType":"3909","messageId":"3910","endLine":120,"endColumn":169},{"ruleId":"4071","severity":1,"message":"4072","line":122,"column":27,"nodeType":"3909","messageId":"4073","endLine":122,"endColumn":44},{"ruleId":"3907","severity":1,"message":"3921","line":122,"column":39,"nodeType":"3909","messageId":"3910","endLine":122,"endColumn":41},{"ruleId":"4071","severity":1,"message":"4072","line":122,"column":117,"nodeType":"3909","messageId":"4073","endLine":122,"endColumn":134},{"ruleId":"3907","severity":1,"message":"3921","line":122,"column":129,"nodeType":"3909","messageId":"3910","endLine":122,"endColumn":131},{"ruleId":"3880","severity":1,"message":"4042","line":125,"column":21,"nodeType":"3874","endLine":125,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4074","line":131,"column":20,"nodeType":"4045","endLine":131,"endColumn":21},{"ruleId":"3880","severity":1,"message":"4075","line":132,"column":18,"nodeType":"4045","endLine":132,"endColumn":19},{"ruleId":"3880","severity":1,"message":"4076","line":138,"column":15,"nodeType":"4045","endLine":138,"endColumn":16},{"ruleId":"3880","severity":1,"message":"4119","line":143,"column":17,"nodeType":"4045","endLine":143,"endColumn":18},{"ruleId":"3880","severity":1,"message":"4120","line":144,"column":18,"nodeType":"3874","endLine":144,"endColumn":26},{"ruleId":"3880","severity":1,"message":"4121","line":146,"column":14,"nodeType":"4045","endLine":146,"endColumn":15},{"ruleId":"3880","severity":1,"message":"4122","line":147,"column":18,"nodeType":"3874","endLine":147,"endColumn":26},{"ruleId":"3880","severity":1,"message":"4123","line":149,"column":14,"nodeType":"4045","endLine":149,"endColumn":15},{"ruleId":"3991","severity":1,"message":"3992","line":155,"column":6,"nodeType":"3882","messageId":"3993","endLine":155,"endColumn":81},{"ruleId":"3872","severity":1,"message":"4048","line":157,"column":9,"nodeType":"3874","messageId":"3875","endLine":157,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3921","line":259,"column":22,"nodeType":"3909","messageId":"3910","endLine":259,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":272,"column":34,"nodeType":"3909","messageId":"3910","endLine":272,"endColumn":36},{"ruleId":"3907","severity":1,"message":"3908","line":272,"column":46,"nodeType":"3909","messageId":"3910","endLine":272,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3908","line":306,"column":72,"nodeType":"3909","messageId":"3910","endLine":306,"endColumn":74},{"ruleId":"3907","severity":1,"message":"3908","line":306,"column":84,"nodeType":"3909","messageId":"3910","endLine":306,"endColumn":86},{"ruleId":"3907","severity":1,"message":"3908","line":339,"column":107,"nodeType":"3909","messageId":"3910","endLine":339,"endColumn":109},{"ruleId":"3907","severity":1,"message":"3908","line":339,"column":119,"nodeType":"3909","messageId":"3910","endLine":339,"endColumn":121},{"ruleId":"3907","severity":1,"message":"3908","line":374,"column":71,"nodeType":"3909","messageId":"3910","endLine":374,"endColumn":73},{"ruleId":"3907","severity":1,"message":"3908","line":374,"column":83,"nodeType":"3909","messageId":"3910","endLine":374,"endColumn":85},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":18,"column":12,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":18,"column":21,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":19,"column":12,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":19,"column":21,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4010","line":22,"column":14,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4083","line":30,"column":11,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3921","line":64,"column":18,"nodeType":"3909","messageId":"3910","endLine":64,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"4124","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4054","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3937","line":27,"column":11,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4125","line":36,"column":12,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4126","line":36,"column":24,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4127","line":38,"column":21,"nodeType":"3874","messageId":"3875","endLine":38,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4128","line":40,"column":23,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4129","line":41,"column":24,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":39},{"ruleId":"3872","severity":1,"message":"4130","line":42,"column":23,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4131","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4132","line":44,"column":21,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4133","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4134","line":45,"column":24,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":39},{"ruleId":"3872","severity":1,"message":"4135","line":46,"column":12,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3942","line":46,"column":23,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":37},{"ruleId":"3872","severity":1,"message":"3943","line":48,"column":12,"nodeType":"3874","messageId":"3875","endLine":48,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":48,"column":18,"nodeType":"3874","messageId":"3875","endLine":48,"endColumn":25},{"ruleId":"3872","severity":1,"message":"4136","line":49,"column":12,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4050","line":49,"column":23,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4051","line":50,"column":22,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4137","line":51,"column":12,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4049","line":51,"column":24,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4138","line":52,"column":12,"nodeType":"3874","messageId":"3875","endLine":52,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4139","line":52,"column":20,"nodeType":"3874","messageId":"3875","endLine":52,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4052","line":53,"column":17,"nodeType":"3874","messageId":"3875","endLine":53,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":91,"column":46,"nodeType":"3909","messageId":"3910","endLine":91,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3921","line":149,"column":62,"nodeType":"3909","messageId":"3910","endLine":149,"endColumn":64},{"ruleId":"3880","severity":1,"message":"3952","line":166,"column":8,"nodeType":"3882","endLine":166,"endColumn":16,"suggestions":"4140"},{"ruleId":"3907","severity":1,"message":"3908","line":172,"column":74,"nodeType":"3909","messageId":"3910","endLine":172,"endColumn":76},{"ruleId":"3907","severity":1,"message":"3908","line":173,"column":59,"nodeType":"3909","messageId":"3910","endLine":173,"endColumn":61},{"ruleId":"3907","severity":1,"message":"3908","line":178,"column":72,"nodeType":"3909","messageId":"3910","endLine":178,"endColumn":74},{"ruleId":"3994","severity":1,"message":"3995","line":201,"column":58,"nodeType":"3996","messageId":"3997","endLine":201,"endColumn":60},{"ruleId":"3907","severity":1,"message":"3908","line":234,"column":145,"nodeType":"3909","messageId":"3910","endLine":234,"endColumn":147},{"ruleId":"3872","severity":1,"message":"3873","line":29,"column":8,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":13},{"ruleId":"3876","replacedBy":"4141"},{"ruleId":"3878","replacedBy":"4142"},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"4143"},{"ruleId":"3907","severity":1,"message":"3908","line":25,"column":47,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":49},{"ruleId":"3907","severity":1,"message":"3921","line":25,"column":105,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":107},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4085","line":11,"column":10,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"4144"},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4085","line":11,"column":10,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3959","line":11,"column":19,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":29},{"ruleId":"3880","severity":1,"message":"3881","line":17,"column":5,"nodeType":"3882","endLine":17,"endColumn":7,"suggestions":"4145"},{"ruleId":"3872","severity":1,"message":"4029","line":1,"column":28,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"4030","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3982","line":8,"column":27,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4031","line":25,"column":6,"nodeType":"3882","endLine":25,"endColumn":8,"suggestions":"4146"},{"ruleId":"3872","severity":1,"message":"4029","line":1,"column":28,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"4030","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3958","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3982","line":8,"column":27,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4031","line":24,"column":6,"nodeType":"3882","endLine":24,"endColumn":8,"suggestions":"4147"},{"ruleId":"3872","severity":1,"message":"4029","line":1,"column":28,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"4030","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3958","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3982","line":7,"column":27,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4031","line":23,"column":6,"nodeType":"3882","endLine":23,"endColumn":8,"suggestions":"4148"},{"ruleId":"3872","severity":1,"message":"3982","line":9,"column":16,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3983","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3908","line":29,"column":26,"nodeType":"3909","messageId":"3910","endLine":29,"endColumn":28},{"ruleId":"3880","severity":1,"message":"3881","line":37,"column":6,"nodeType":"3882","endLine":37,"endColumn":14,"suggestions":"4149"},{"ruleId":"3907","severity":1,"message":"3908","line":80,"column":70,"nodeType":"3909","messageId":"3910","endLine":80,"endColumn":72},{"ruleId":"3907","severity":1,"message":"3908","line":104,"column":21,"nodeType":"3909","messageId":"3910","endLine":104,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":135,"column":17,"nodeType":"3909","messageId":"3910","endLine":135,"endColumn":19},{"ruleId":"3907","severity":1,"message":"3908","line":147,"column":23,"nodeType":"3909","messageId":"3910","endLine":147,"endColumn":25},{"ruleId":"3907","severity":1,"message":"3908","line":173,"column":23,"nodeType":"3909","messageId":"3910","endLine":173,"endColumn":25},{"ruleId":"3907","severity":1,"message":"3908","line":207,"column":15,"nodeType":"3909","messageId":"3910","endLine":207,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3886","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3887","line":26,"column":9,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3987","line":7,"column":87,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":100},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":117,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":130},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":317,"column":3,"nodeType":"3894","messageId":"3895","endLine":327,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":317,"column":3,"nodeType":"3874","messageId":"3898","endLine":317,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3890","line":15,"column":3,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3891","line":18,"column":7,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":360,"column":3,"nodeType":"3894","messageId":"3895","endLine":376,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":360,"column":3,"nodeType":"3874","messageId":"3898","endLine":360,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3961","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3962","line":7,"column":20,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3963","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":8,"column":24,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3963","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3962","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3988","line":163,"column":21,"nodeType":"3874","messageId":"3875","endLine":163,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3987","line":7,"column":64,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":77},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":94,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":107},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":303,"column":3,"nodeType":"3894","messageId":"3895","endLine":317,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":303,"column":3,"nodeType":"3874","messageId":"3898","endLine":303,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3888","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3889","line":6,"column":22,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3987","line":7,"column":87,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":100},{"ruleId":"3872","severity":1,"message":"3890","line":7,"column":117,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":130},{"ruleId":"3872","severity":1,"message":"3891","line":8,"column":7,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":12},{"ruleId":"3892","severity":1,"message":"3893","line":317,"column":3,"nodeType":"3894","messageId":"3895","endLine":327,"endColumn":5},{"ruleId":"3896","severity":1,"message":"3897","line":317,"column":3,"nodeType":"3874","messageId":"3898","endLine":317,"endColumn":7},{"ruleId":"3872","severity":1,"message":"3985","line":14,"column":10,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":22},{"ruleId":"3880","severity":1,"message":"3881","line":20,"column":6,"nodeType":"3882","endLine":20,"endColumn":8,"suggestions":"4150"},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3968","line":27,"column":10,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":27,"column":25,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3970","line":30,"column":19,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3921","line":104,"column":23,"nodeType":"3909","messageId":"3910","endLine":104,"endColumn":25},{"ruleId":"3880","severity":1,"message":"3989","line":108,"column":12,"nodeType":"3909","endLine":108,"endColumn":20},{"ruleId":"3880","severity":1,"message":"3990","line":110,"column":19,"nodeType":"3874","endLine":110,"endColumn":27},{"ruleId":"3991","severity":1,"message":"3992","line":118,"column":5,"nodeType":"3882","messageId":"3993","endLine":118,"endColumn":54},{"ruleId":"3907","severity":1,"message":"3908","line":129,"column":70,"nodeType":"3909","messageId":"3910","endLine":129,"endColumn":72},{"ruleId":"3994","severity":1,"message":"3995","line":261,"column":77,"nodeType":"3996","messageId":"3997","endLine":261,"endColumn":79},{"ruleId":"3907","severity":1,"message":"3908","line":262,"column":38,"nodeType":"3909","messageId":"3910","endLine":262,"endColumn":40},{"ruleId":"3907","severity":1,"message":"3908","line":262,"column":50,"nodeType":"3909","messageId":"3910","endLine":262,"endColumn":52},{"ruleId":"3907","severity":1,"message":"3908","line":275,"column":193,"nodeType":"3909","messageId":"3910","endLine":275,"endColumn":195},{"ruleId":"3907","severity":1,"message":"3908","line":275,"column":205,"nodeType":"3909","messageId":"3910","endLine":275,"endColumn":207},{"ruleId":"3907","severity":1,"message":"3908","line":288,"column":43,"nodeType":"3909","messageId":"3910","endLine":288,"endColumn":45},{"ruleId":"3907","severity":1,"message":"3908","line":288,"column":55,"nodeType":"3909","messageId":"3910","endLine":288,"endColumn":57},{"ruleId":"3907","severity":1,"message":"3908","line":329,"column":43,"nodeType":"3909","messageId":"3910","endLine":329,"endColumn":45},{"ruleId":"3907","severity":1,"message":"3908","line":329,"column":55,"nodeType":"3909","messageId":"3910","endLine":329,"endColumn":57},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4011","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3958","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4087","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4088","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3973","line":22,"column":10,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3935","line":22,"column":19,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4090","line":23,"column":10,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4091","line":23,"column":25,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4092","line":24,"column":10,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4093","line":24,"column":28,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3968","line":25,"column":10,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":25,"column":25,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4094","line":26,"column":10,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4095","line":26,"column":22,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4096","line":27,"column":10,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4097","line":27,"column":31,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":53},{"ruleId":"3872","severity":1,"message":"4098","line":28,"column":10,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3970","line":28,"column":19,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4099","line":29,"column":10,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4100","line":29,"column":19,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4101","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4102","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4103","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4104","line":31,"column":25,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4105","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4106","line":32,"column":15,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3974","line":33,"column":9,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4078","line":35,"column":9,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4033","line":1,"column":26,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":43},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"4034","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4035","line":3,"column":18,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4036","line":5,"column":16,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3903","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4030","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3982","line":14,"column":27,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4068","line":18,"column":10,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":25},{"ruleId":"3872","severity":1,"message":"4069","line":66,"column":10,"nodeType":"3874","messageId":"3875","endLine":66,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4070","line":68,"column":10,"nodeType":"3874","messageId":"3875","endLine":68,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4038","line":82,"column":9,"nodeType":"3874","messageId":"3875","endLine":82,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3937","line":84,"column":9,"nodeType":"3874","messageId":"3875","endLine":84,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4039","line":86,"column":9,"nodeType":"3874","messageId":"3875","endLine":86,"endColumn":28},{"ruleId":"3907","severity":1,"message":"3921","line":124,"column":21,"nodeType":"3909","messageId":"3910","endLine":124,"endColumn":23},{"ruleId":"3880","severity":1,"message":"3989","line":128,"column":12,"nodeType":"3909","endLine":128,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3908","line":131,"column":36,"nodeType":"3909","messageId":"3910","endLine":131,"endColumn":38},{"ruleId":"4071","severity":1,"message":"4072","line":131,"column":65,"nodeType":"3909","messageId":"4073","endLine":131,"endColumn":82},{"ruleId":"3907","severity":1,"message":"3921","line":131,"column":77,"nodeType":"3909","messageId":"3910","endLine":131,"endColumn":79},{"ruleId":"4071","severity":1,"message":"4072","line":131,"column":155,"nodeType":"3909","messageId":"4073","endLine":131,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3921","line":131,"column":167,"nodeType":"3909","messageId":"3910","endLine":131,"endColumn":169},{"ruleId":"4071","severity":1,"message":"4072","line":133,"column":27,"nodeType":"3909","messageId":"4073","endLine":133,"endColumn":44},{"ruleId":"3907","severity":1,"message":"3921","line":133,"column":39,"nodeType":"3909","messageId":"3910","endLine":133,"endColumn":41},{"ruleId":"4071","severity":1,"message":"4072","line":133,"column":117,"nodeType":"3909","messageId":"4073","endLine":133,"endColumn":134},{"ruleId":"3907","severity":1,"message":"3921","line":133,"column":129,"nodeType":"3909","messageId":"3910","endLine":133,"endColumn":131},{"ruleId":"3880","severity":1,"message":"4074","line":139,"column":20,"nodeType":"4045","endLine":139,"endColumn":21},{"ruleId":"3880","severity":1,"message":"4075","line":140,"column":18,"nodeType":"4045","endLine":140,"endColumn":19},{"ruleId":"3880","severity":1,"message":"4076","line":146,"column":15,"nodeType":"4045","endLine":146,"endColumn":16},{"ruleId":"3880","severity":1,"message":"4042","line":150,"column":21,"nodeType":"3874","endLine":150,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4046","line":154,"column":30,"nodeType":"3874","endLine":154,"endColumn":50},{"ruleId":"3880","severity":1,"message":"4047","line":156,"column":26,"nodeType":"4045","endLine":156,"endColumn":27},{"ruleId":"3991","severity":1,"message":"3992","line":162,"column":6,"nodeType":"3882","messageId":"3993","endLine":162,"endColumn":105},{"ruleId":"3872","severity":1,"message":"4048","line":164,"column":9,"nodeType":"3874","messageId":"3875","endLine":164,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4077","line":178,"column":9,"nodeType":"3874","messageId":"3875","endLine":178,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4078","line":188,"column":9,"nodeType":"3874","messageId":"3875","endLine":188,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":299,"column":22,"nodeType":"3909","messageId":"3910","endLine":299,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":312,"column":34,"nodeType":"3909","messageId":"3910","endLine":312,"endColumn":36},{"ruleId":"3907","severity":1,"message":"3908","line":312,"column":46,"nodeType":"3909","messageId":"3910","endLine":312,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3908","line":312,"column":58,"nodeType":"3909","messageId":"3910","endLine":312,"endColumn":60},{"ruleId":"3907","severity":1,"message":"3908","line":345,"column":72,"nodeType":"3909","messageId":"3910","endLine":345,"endColumn":74},{"ruleId":"3907","severity":1,"message":"3908","line":345,"column":84,"nodeType":"3909","messageId":"3910","endLine":345,"endColumn":86},{"ruleId":"3907","severity":1,"message":"3908","line":345,"column":96,"nodeType":"3909","messageId":"3910","endLine":345,"endColumn":98},{"ruleId":"3907","severity":1,"message":"3908","line":378,"column":99,"nodeType":"3909","messageId":"3910","endLine":378,"endColumn":101},{"ruleId":"3907","severity":1,"message":"3908","line":378,"column":115,"nodeType":"3909","messageId":"3910","endLine":378,"endColumn":117},{"ruleId":"3907","severity":1,"message":"3908","line":378,"column":127,"nodeType":"3909","messageId":"3910","endLine":378,"endColumn":129},{"ruleId":"3907","severity":1,"message":"3908","line":411,"column":109,"nodeType":"3909","messageId":"3910","endLine":411,"endColumn":111},{"ruleId":"3907","severity":1,"message":"3908","line":411,"column":125,"nodeType":"3909","messageId":"3910","endLine":411,"endColumn":127},{"ruleId":"3907","severity":1,"message":"3908","line":411,"column":137,"nodeType":"3909","messageId":"3910","endLine":411,"endColumn":139},{"ruleId":"3907","severity":1,"message":"3908","line":445,"column":66,"nodeType":"3909","messageId":"3910","endLine":445,"endColumn":68},{"ruleId":"3907","severity":1,"message":"3908","line":445,"column":82,"nodeType":"3909","messageId":"3910","endLine":445,"endColumn":84},{"ruleId":"3907","severity":1,"message":"3908","line":445,"column":94,"nodeType":"3909","messageId":"3910","endLine":445,"endColumn":96},{"ruleId":"3907","severity":1,"message":"3908","line":481,"column":99,"nodeType":"3909","messageId":"3910","endLine":481,"endColumn":101},{"ruleId":"3907","severity":1,"message":"3908","line":481,"column":115,"nodeType":"3909","messageId":"3910","endLine":481,"endColumn":117},{"ruleId":"3907","severity":1,"message":"3908","line":481,"column":127,"nodeType":"3909","messageId":"3910","endLine":481,"endColumn":129},{"ruleId":"3907","severity":1,"message":"3908","line":517,"column":134,"nodeType":"3909","messageId":"3910","endLine":517,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":517,"column":150,"nodeType":"3909","messageId":"3910","endLine":517,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3908","line":517,"column":162,"nodeType":"3909","messageId":"3910","endLine":517,"endColumn":164},{"ruleId":"3907","severity":1,"message":"3908","line":550,"column":134,"nodeType":"3909","messageId":"3910","endLine":550,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":550,"column":150,"nodeType":"3909","messageId":"3910","endLine":550,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3908","line":550,"column":162,"nodeType":"3909","messageId":"3910","endLine":550,"endColumn":164},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":10,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":3,"column":17,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4011","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3966","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3958","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4087","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4088","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3973","line":22,"column":10,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3935","line":22,"column":19,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4090","line":23,"column":10,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4091","line":23,"column":25,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4092","line":24,"column":10,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4093","line":24,"column":28,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3968","line":25,"column":10,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":25,"column":25,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4094","line":26,"column":10,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4095","line":26,"column":22,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4096","line":27,"column":10,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4097","line":27,"column":31,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":53},{"ruleId":"3872","severity":1,"message":"4098","line":28,"column":10,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3970","line":28,"column":19,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4099","line":29,"column":10,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4100","line":29,"column":19,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4101","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4102","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4103","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4104","line":31,"column":25,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4105","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4106","line":32,"column":15,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3974","line":33,"column":9,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4078","line":35,"column":9,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4033","line":1,"column":26,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":43},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"4034","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4035","line":3,"column":18,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4036","line":5,"column":16,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3903","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":16,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4030","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3982","line":14,"column":27,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4037","line":16,"column":9,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3936","line":50,"column":9,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4038","line":57,"column":9,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3937","line":59,"column":9,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4039","line":61,"column":9,"nodeType":"3874","messageId":"3875","endLine":61,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4040","line":65,"column":9,"nodeType":"3874","messageId":"3875","endLine":65,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4041","line":104,"column":5,"nodeType":"3874","messageId":"3875","endLine":104,"endColumn":11},{"ruleId":"3907","severity":1,"message":"3921","line":107,"column":21,"nodeType":"3909","messageId":"3910","endLine":107,"endColumn":23},{"ruleId":"3880","severity":1,"message":"3989","line":111,"column":12,"nodeType":"3909","endLine":111,"endColumn":20},{"ruleId":"3880","severity":1,"message":"4042","line":113,"column":21,"nodeType":"3874","endLine":113,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4043","line":117,"column":24,"nodeType":"3874","endLine":117,"endColumn":38},{"ruleId":"3880","severity":1,"message":"4044","line":119,"column":20,"nodeType":"4045","endLine":119,"endColumn":21},{"ruleId":"3880","severity":1,"message":"4046","line":122,"column":30,"nodeType":"3874","endLine":122,"endColumn":50},{"ruleId":"3880","severity":1,"message":"4047","line":124,"column":26,"nodeType":"4045","endLine":124,"endColumn":27},{"ruleId":"3991","severity":1,"message":"3992","line":132,"column":6,"nodeType":"3882","messageId":"3993","endLine":132,"endColumn":51},{"ruleId":"3872","severity":1,"message":"4048","line":133,"column":9,"nodeType":"3874","messageId":"3875","endLine":133,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3908","line":147,"column":70,"nodeType":"3909","messageId":"3910","endLine":147,"endColumn":72},{"ruleId":"3907","severity":1,"message":"3908","line":161,"column":77,"nodeType":"3909","messageId":"3910","endLine":161,"endColumn":79},{"ruleId":"3907","severity":1,"message":"3921","line":373,"column":150,"nodeType":"3909","messageId":"3910","endLine":373,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3921","line":373,"column":257,"nodeType":"3909","messageId":"3910","endLine":373,"endColumn":259},{"ruleId":"3907","severity":1,"message":"3921","line":413,"column":22,"nodeType":"3909","messageId":"3910","endLine":413,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3921","line":419,"column":22,"nodeType":"3909","messageId":"3910","endLine":419,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":432,"column":34,"nodeType":"3909","messageId":"3910","endLine":432,"endColumn":36},{"ruleId":"3907","severity":1,"message":"3908","line":432,"column":63,"nodeType":"3909","messageId":"3910","endLine":432,"endColumn":65},{"ruleId":"3907","severity":1,"message":"3908","line":456,"column":72,"nodeType":"3909","messageId":"3910","endLine":456,"endColumn":74},{"ruleId":"3907","severity":1,"message":"3908","line":456,"column":88,"nodeType":"3909","messageId":"3910","endLine":456,"endColumn":90},{"ruleId":"3907","severity":1,"message":"3908","line":456,"column":100,"nodeType":"3909","messageId":"3910","endLine":456,"endColumn":102},{"ruleId":"3907","severity":1,"message":"3908","line":480,"column":148,"nodeType":"3909","messageId":"3910","endLine":480,"endColumn":150},{"ruleId":"3907","severity":1,"message":"3908","line":480,"column":164,"nodeType":"3909","messageId":"3910","endLine":480,"endColumn":166},{"ruleId":"3907","severity":1,"message":"3908","line":480,"column":176,"nodeType":"3909","messageId":"3910","endLine":480,"endColumn":178},{"ruleId":"3907","severity":1,"message":"3908","line":504,"column":99,"nodeType":"3909","messageId":"3910","endLine":504,"endColumn":101},{"ruleId":"3907","severity":1,"message":"3908","line":504,"column":115,"nodeType":"3909","messageId":"3910","endLine":504,"endColumn":117},{"ruleId":"3907","severity":1,"message":"3908","line":504,"column":131,"nodeType":"3909","messageId":"3910","endLine":504,"endColumn":133},{"ruleId":"3907","severity":1,"message":"3908","line":528,"column":212,"nodeType":"3909","messageId":"3910","endLine":528,"endColumn":214},{"ruleId":"3907","severity":1,"message":"3908","line":528,"column":228,"nodeType":"3909","messageId":"3910","endLine":528,"endColumn":230},{"ruleId":"3907","severity":1,"message":"3908","line":528,"column":244,"nodeType":"3909","messageId":"3910","endLine":528,"endColumn":246},{"ruleId":"3907","severity":1,"message":"3908","line":552,"column":181,"nodeType":"3909","messageId":"3910","endLine":552,"endColumn":183},{"ruleId":"3907","severity":1,"message":"3908","line":552,"column":197,"nodeType":"3909","messageId":"3910","endLine":552,"endColumn":199},{"ruleId":"3907","severity":1,"message":"3908","line":552,"column":213,"nodeType":"3909","messageId":"3910","endLine":552,"endColumn":215},{"ruleId":"3907","severity":1,"message":"3908","line":577,"column":134,"nodeType":"3909","messageId":"3910","endLine":577,"endColumn":136},{"ruleId":"3907","severity":1,"message":"3908","line":577,"column":150,"nodeType":"3909","messageId":"3910","endLine":577,"endColumn":152},{"ruleId":"3907","severity":1,"message":"3908","line":577,"column":166,"nodeType":"3909","messageId":"3910","endLine":577,"endColumn":168},{"ruleId":"3907","severity":1,"message":"3908","line":601,"column":245,"nodeType":"3909","messageId":"3910","endLine":601,"endColumn":247},{"ruleId":"3907","severity":1,"message":"3908","line":601,"column":261,"nodeType":"3909","messageId":"3910","endLine":601,"endColumn":263},{"ruleId":"3907","severity":1,"message":"3908","line":601,"column":277,"nodeType":"3909","messageId":"3910","endLine":601,"endColumn":279},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4033","line":1,"column":26,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":43},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"4034","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4035","line":3,"column":18,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4036","line":5,"column":16,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3903","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4030","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3982","line":11,"column":27,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4068","line":16,"column":9,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4010","line":24,"column":12,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4109","line":44,"column":10,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4110","line":44,"column":19,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3968","line":45,"column":10,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3969","line":45,"column":25,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4090","line":46,"column":10,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4091","line":46,"column":25,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":41},{"ruleId":"3872","severity":1,"message":"4069","line":55,"column":10,"nodeType":"3874","messageId":"3875","endLine":55,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4070","line":57,"column":10,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4111","line":59,"column":10,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4112","line":59,"column":21,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4113","line":61,"column":8,"nodeType":"3874","messageId":"3875","endLine":61,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4114","line":62,"column":8,"nodeType":"3874","messageId":"3875","endLine":62,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4115","line":62,"column":34,"nodeType":"3874","messageId":"3875","endLine":62,"endColumn":61},{"ruleId":"3872","severity":1,"message":"4116","line":65,"column":18,"nodeType":"3874","messageId":"3875","endLine":65,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4117","line":67,"column":18,"nodeType":"3874","messageId":"3875","endLine":67,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4038","line":72,"column":9,"nodeType":"3874","messageId":"3875","endLine":72,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3937","line":74,"column":9,"nodeType":"3874","messageId":"3875","endLine":74,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4039","line":76,"column":9,"nodeType":"3874","messageId":"3875","endLine":76,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4118","line":78,"column":7,"nodeType":"3874","messageId":"3875","endLine":78,"endColumn":18},{"ruleId":"3907","severity":1,"message":"3921","line":113,"column":21,"nodeType":"3909","messageId":"3910","endLine":113,"endColumn":23},{"ruleId":"3880","severity":1,"message":"3989","line":117,"column":12,"nodeType":"3909","endLine":117,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3908","line":120,"column":36,"nodeType":"3909","messageId":"3910","endLine":120,"endColumn":38},{"ruleId":"4071","severity":1,"message":"4072","line":120,"column":65,"nodeType":"3909","messageId":"4073","endLine":120,"endColumn":82},{"ruleId":"3907","severity":1,"message":"3921","line":120,"column":77,"nodeType":"3909","messageId":"3910","endLine":120,"endColumn":79},{"ruleId":"4071","severity":1,"message":"4072","line":120,"column":155,"nodeType":"3909","messageId":"4073","endLine":120,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3921","line":120,"column":167,"nodeType":"3909","messageId":"3910","endLine":120,"endColumn":169},{"ruleId":"4071","severity":1,"message":"4072","line":122,"column":27,"nodeType":"3909","messageId":"4073","endLine":122,"endColumn":44},{"ruleId":"3907","severity":1,"message":"3921","line":122,"column":39,"nodeType":"3909","messageId":"3910","endLine":122,"endColumn":41},{"ruleId":"4071","severity":1,"message":"4072","line":122,"column":117,"nodeType":"3909","messageId":"4073","endLine":122,"endColumn":134},{"ruleId":"3907","severity":1,"message":"3921","line":122,"column":129,"nodeType":"3909","messageId":"3910","endLine":122,"endColumn":131},{"ruleId":"3880","severity":1,"message":"4042","line":125,"column":21,"nodeType":"3874","endLine":125,"endColumn":32},{"ruleId":"3880","severity":1,"message":"4074","line":131,"column":20,"nodeType":"4045","endLine":131,"endColumn":21},{"ruleId":"3880","severity":1,"message":"4075","line":132,"column":18,"nodeType":"4045","endLine":132,"endColumn":19},{"ruleId":"3880","severity":1,"message":"4076","line":138,"column":15,"nodeType":"4045","endLine":138,"endColumn":16},{"ruleId":"3880","severity":1,"message":"4119","line":143,"column":17,"nodeType":"4045","endLine":143,"endColumn":18},{"ruleId":"3880","severity":1,"message":"4120","line":144,"column":18,"nodeType":"3874","endLine":144,"endColumn":26},{"ruleId":"3880","severity":1,"message":"4121","line":146,"column":14,"nodeType":"4045","endLine":146,"endColumn":15},{"ruleId":"3880","severity":1,"message":"4122","line":147,"column":18,"nodeType":"3874","endLine":147,"endColumn":26},{"ruleId":"3880","severity":1,"message":"4123","line":149,"column":14,"nodeType":"4045","endLine":149,"endColumn":15},{"ruleId":"3991","severity":1,"message":"3992","line":155,"column":6,"nodeType":"3882","messageId":"3993","endLine":155,"endColumn":81},{"ruleId":"3872","severity":1,"message":"4048","line":157,"column":9,"nodeType":"3874","messageId":"3875","endLine":157,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3921","line":259,"column":22,"nodeType":"3909","messageId":"3910","endLine":259,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":272,"column":34,"nodeType":"3909","messageId":"3910","endLine":272,"endColumn":36},{"ruleId":"3907","severity":1,"message":"3908","line":272,"column":46,"nodeType":"3909","messageId":"3910","endLine":272,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3908","line":306,"column":72,"nodeType":"3909","messageId":"3910","endLine":306,"endColumn":74},{"ruleId":"3907","severity":1,"message":"3908","line":306,"column":84,"nodeType":"3909","messageId":"3910","endLine":306,"endColumn":86},{"ruleId":"3907","severity":1,"message":"3908","line":339,"column":107,"nodeType":"3909","messageId":"3910","endLine":339,"endColumn":109},{"ruleId":"3907","severity":1,"message":"3908","line":339,"column":119,"nodeType":"3909","messageId":"3910","endLine":339,"endColumn":121},{"ruleId":"3907","severity":1,"message":"3908","line":374,"column":71,"nodeType":"3909","messageId":"3910","endLine":374,"endColumn":73},{"ruleId":"3907","severity":1,"message":"3908","line":374,"column":83,"nodeType":"3909","messageId":"3910","endLine":374,"endColumn":85},{"ruleId":"3872","severity":1,"message":"3999","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":12},{"ruleId":"3872","severity":1,"message":"3902","line":2,"column":20,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3903","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4000","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4001","line":4,"column":50,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":60},{"ruleId":"3872","severity":1,"message":"4002","line":4,"column":62,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":68},{"ruleId":"3872","severity":1,"message":"4003","line":9,"column":9,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4004","line":11,"column":7,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4005","line":12,"column":3,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4006","line":13,"column":3,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4007","line":14,"column":3,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4008","line":22,"column":10,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3873","line":1,"column":8,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":10,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3911","line":10,"column":10,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3900","line":1,"column":9,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3901","line":1,"column":45,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":54},{"ruleId":"3872","severity":1,"message":"3902","line":5,"column":26,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3903","line":11,"column":9,"nodeType":"3874","messageId":"3875","endLine":11,"endColumn":14},{"ruleId":"3904","severity":1,"message":"3905","line":107,"column":29,"nodeType":"3906","endLine":107,"endColumn":81},{"ruleId":"3907","severity":1,"message":"3908","line":122,"column":96,"nodeType":"3909","messageId":"3910","endLine":122,"endColumn":98},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3907","severity":1,"message":"3908","line":42,"column":20,"nodeType":"3909","messageId":"3910","endLine":42,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3958","line":9,"column":29,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":34},{"ruleId":"3872","severity":1,"message":"4010","line":17,"column":10,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3920","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3954","line":35,"column":12,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":35,"column":23,"nodeType":"3874","messageId":"3875","endLine":35,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":36,"column":12,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":36,"column":25,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":37,"column":25,"nodeType":"3874","messageId":"3875","endLine":37,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4052","line":47,"column":17,"nodeType":"3874","messageId":"3875","endLine":47,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4050","line":49,"column":23,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":35},{"ruleId":"3907","severity":1,"message":"3921","line":60,"column":55,"nodeType":"3909","messageId":"3910","endLine":60,"endColumn":57},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4010","line":17,"column":10,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4089","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":18},{"ruleId":"3907","severity":1,"message":"3921","line":35,"column":37,"nodeType":"3909","messageId":"3910","endLine":35,"endColumn":39},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3911","line":15,"column":9,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3920","line":34,"column":11,"nodeType":"3874","messageId":"3875","endLine":34,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3954","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":44,"column":23,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":45,"column":25,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":46,"column":25,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4050","line":49,"column":23,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4052","line":51,"column":17,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4060","line":55,"column":10,"nodeType":"3874","messageId":"3875","endLine":55,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4061","line":55,"column":23,"nodeType":"3874","messageId":"3875","endLine":55,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3921","line":134,"column":211,"nodeType":"3909","messageId":"3910","endLine":134,"endColumn":213},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3966","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3928","line":5,"column":8,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4011","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4012","line":15,"column":11,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3908","line":16,"column":78,"nodeType":"3909","messageId":"3910","endLine":16,"endColumn":80},{"ruleId":"3872","severity":1,"message":"3929","line":17,"column":19,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":26},{"ruleId":"3907","severity":1,"message":"3908","line":41,"column":36,"nodeType":"3909","messageId":"3910","endLine":41,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3908","line":45,"column":69,"nodeType":"3909","messageId":"3910","endLine":45,"endColumn":71},{"ruleId":"3907","severity":1,"message":"3908","line":46,"column":32,"nodeType":"3909","messageId":"3910","endLine":46,"endColumn":34},{"ruleId":"3872","severity":1,"message":"3903","line":4,"column":10,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3922","line":5,"column":10,"nodeType":"3874","messageId":"3875","endLine":5,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3887","line":10,"column":9,"nodeType":"3874","messageId":"3875","endLine":10,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4013","line":3,"column":9,"nodeType":"3874","messageId":"3875","endLine":3,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4014","line":4,"column":8,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":25},{"ruleId":"3880","severity":1,"message":"3989","line":79,"column":12,"nodeType":"3909","endLine":79,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":10,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3918","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3919","line":14,"column":9,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3920","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3907","severity":1,"message":"3921","line":47,"column":59,"nodeType":"3909","messageId":"3910","endLine":47,"endColumn":61},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"4124","line":13,"column":9,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4054","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3937","line":27,"column":11,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4125","line":36,"column":12,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4126","line":36,"column":24,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4127","line":38,"column":21,"nodeType":"3874","messageId":"3875","endLine":38,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4128","line":40,"column":23,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4129","line":41,"column":24,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":39},{"ruleId":"3872","severity":1,"message":"4130","line":42,"column":23,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4131","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4132","line":44,"column":21,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4133","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4134","line":45,"column":24,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":39},{"ruleId":"3872","severity":1,"message":"4135","line":46,"column":12,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3942","line":46,"column":23,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":37},{"ruleId":"3872","severity":1,"message":"3943","line":48,"column":12,"nodeType":"3874","messageId":"3875","endLine":48,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":48,"column":18,"nodeType":"3874","messageId":"3875","endLine":48,"endColumn":25},{"ruleId":"3872","severity":1,"message":"4136","line":49,"column":12,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4050","line":49,"column":23,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4051","line":50,"column":22,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4137","line":51,"column":12,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4049","line":51,"column":24,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4138","line":52,"column":12,"nodeType":"3874","messageId":"3875","endLine":52,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4139","line":52,"column":20,"nodeType":"3874","messageId":"3875","endLine":52,"endColumn":30},{"ruleId":"3872","severity":1,"message":"4052","line":53,"column":17,"nodeType":"3874","messageId":"3875","endLine":53,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":91,"column":46,"nodeType":"3909","messageId":"3910","endLine":91,"endColumn":48},{"ruleId":"3907","severity":1,"message":"3921","line":149,"column":62,"nodeType":"3909","messageId":"3910","endLine":149,"endColumn":64},{"ruleId":"3880","severity":1,"message":"3952","line":166,"column":8,"nodeType":"3882","endLine":166,"endColumn":16,"suggestions":"4151"},{"ruleId":"3907","severity":1,"message":"3908","line":172,"column":74,"nodeType":"3909","messageId":"3910","endLine":172,"endColumn":76},{"ruleId":"3907","severity":1,"message":"3908","line":173,"column":59,"nodeType":"3909","messageId":"3910","endLine":173,"endColumn":61},{"ruleId":"3907","severity":1,"message":"3908","line":178,"column":72,"nodeType":"3909","messageId":"3910","endLine":178,"endColumn":74},{"ruleId":"3994","severity":1,"message":"3995","line":201,"column":58,"nodeType":"3996","messageId":"3997","endLine":201,"endColumn":60},{"ruleId":"3907","severity":1,"message":"3908","line":234,"column":145,"nodeType":"3909","messageId":"3910","endLine":234,"endColumn":147},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4087","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4012","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3908","line":25,"column":78,"nodeType":"3909","messageId":"3910","endLine":25,"endColumn":80},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"4087","line":8,"column":9,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4063","line":1,"column":37,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":26,"column":11,"nodeType":"3874","messageId":"3875","endLine":26,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4064","line":31,"column":12,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4065","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3938","line":34,"column":23,"nodeType":"3874","messageId":"3875","endLine":34,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4059","line":36,"column":25,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4127","line":38,"column":21,"nodeType":"3874","messageId":"3875","endLine":38,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4128","line":39,"column":23,"nodeType":"3874","messageId":"3875","endLine":39,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4129","line":40,"column":24,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":39},{"ruleId":"3872","severity":1,"message":"4130","line":41,"column":23,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4132","line":43,"column":21,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4134","line":44,"column":24,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":39},{"ruleId":"3872","severity":1,"message":"4135","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3942","line":45,"column":23,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4137","line":46,"column":12,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":22},{"ruleId":"3872","severity":1,"message":"4049","line":46,"column":24,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":37},{"ruleId":"3872","severity":1,"message":"4050","line":48,"column":23,"nodeType":"3874","messageId":"3875","endLine":48,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4051","line":49,"column":22,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4052","line":50,"column":17,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4152","line":51,"column":20,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3951","line":53,"column":11,"nodeType":"3874","messageId":"3875","endLine":53,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":74,"column":48,"nodeType":"3909","messageId":"3910","endLine":74,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":78,"column":55,"nodeType":"3909","messageId":"3910","endLine":78,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":112,"column":8,"nodeType":"3882","endLine":112,"endColumn":16,"suggestions":"4153"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":9,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":32,"column":23,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":38},{"ruleId":"3872","severity":1,"message":"4154","line":40,"column":20,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":32},{"ruleId":"3872","severity":1,"message":"4152","line":42,"column":18,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":28},{"ruleId":"3872","severity":1,"message":"4137","line":43,"column":10,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":20},{"ruleId":"3872","severity":1,"message":"4049","line":43,"column":22,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3944","line":44,"column":16,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4050","line":45,"column":21,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4051","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4052","line":49,"column":15,"nodeType":"3874","messageId":"3875","endLine":49,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3951","line":52,"column":9,"nodeType":"3874","messageId":"3875","endLine":52,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":62,"column":51,"nodeType":"3909","messageId":"3910","endLine":62,"endColumn":53},{"ruleId":"3880","severity":1,"message":"3952","line":88,"column":6,"nodeType":"3882","endLine":88,"endColumn":14,"suggestions":"4155"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4054","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3937","line":27,"column":11,"nodeType":"3874","messageId":"3875","endLine":27,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4052","line":41,"column":17,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":79,"column":45,"nodeType":"3909","messageId":"3910","endLine":79,"endColumn":47},{"ruleId":"3880","severity":1,"message":"3952","line":150,"column":8,"nodeType":"3882","endLine":150,"endColumn":16,"suggestions":"4156"},{"ruleId":"3907","severity":1,"message":"3908","line":156,"column":74,"nodeType":"3909","messageId":"3910","endLine":156,"endColumn":76},{"ruleId":"3907","severity":1,"message":"3908","line":157,"column":59,"nodeType":"3909","messageId":"3910","endLine":157,"endColumn":61},{"ruleId":"3907","severity":1,"message":"3908","line":162,"column":72,"nodeType":"3909","messageId":"3910","endLine":162,"endColumn":74},{"ruleId":"3994","severity":1,"message":"3995","line":243,"column":58,"nodeType":"3996","messageId":"3997","endLine":243,"endColumn":60},{"ruleId":"3907","severity":1,"message":"3908","line":276,"column":145,"nodeType":"3909","messageId":"3910","endLine":276,"endColumn":147},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":18,"column":12,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":18,"column":21,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":19,"column":12,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":19,"column":21,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4010","line":22,"column":14,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":21},{"ruleId":"3872","severity":1,"message":"4083","line":30,"column":11,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3921","line":64,"column":18,"nodeType":"3909","messageId":"3910","endLine":64,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":17,"column":12,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":17,"column":21,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3935","line":18,"column":21,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4054","line":20,"column":11,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":27},{"ruleId":"3872","severity":1,"message":"4010","line":22,"column":14,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3908","line":34,"column":7,"nodeType":"3909","messageId":"3910","endLine":34,"endColumn":9},{"ruleId":"4055","severity":1,"message":"4056","line":70,"column":17,"nodeType":"3906","messageId":"4057","endLine":70,"endColumn":242,"fix":"4157"},{"ruleId":"3907","severity":1,"message":"3921","line":83,"column":18,"nodeType":"3909","messageId":"3910","endLine":83,"endColumn":20},{"ruleId":"3907","severity":1,"message":"3921","line":87,"column":87,"nodeType":"3909","messageId":"3910","endLine":87,"endColumn":89},{"ruleId":"3907","severity":1,"message":"3908","line":87,"column":153,"nodeType":"3909","messageId":"3910","endLine":87,"endColumn":155},{"ruleId":"3907","severity":1,"message":"3921","line":97,"column":18,"nodeType":"3909","messageId":"3910","endLine":97,"endColumn":20},{"ruleId":"3924","severity":1,"message":"3925","line":106,"column":21,"nodeType":"3906","endLine":106,"endColumn":137},{"ruleId":"3924","severity":1,"message":"3925","line":109,"column":44,"nodeType":"3906","endLine":109,"endColumn":155},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":15,"column":12,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":15,"column":21,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3935","line":17,"column":21,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":31},{"ruleId":"3907","severity":1,"message":"3908","line":27,"column":92,"nodeType":"3909","messageId":"3910","endLine":27,"endColumn":94},{"ruleId":"3907","severity":1,"message":"3908","line":73,"column":129,"nodeType":"3909","messageId":"3910","endLine":73,"endColumn":131},{"ruleId":"3924","severity":1,"message":"3925","line":91,"column":21,"nodeType":"3906","endLine":91,"endColumn":137},{"ruleId":"3924","severity":1,"message":"3925","line":94,"column":21,"nodeType":"3906","endLine":94,"endColumn":132},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":11,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3938","line":29,"column":23,"nodeType":"3874","messageId":"3875","endLine":29,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":30,"column":12,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":30,"column":25,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":40},{"ruleId":"3872","severity":1,"message":"3941","line":40,"column":12,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3942","line":40,"column":24,"nodeType":"3874","messageId":"3875","endLine":40,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3943","line":42,"column":12,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":42,"column":18,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3945","line":43,"column":12,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3946","line":43,"column":21,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3947","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3948","line":44,"column":26,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3949","line":45,"column":12,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3950","line":45,"column":22,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3951","line":50,"column":11,"nodeType":"3874","messageId":"3875","endLine":50,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":57,"column":28,"nodeType":"3909","messageId":"3910","endLine":57,"endColumn":30},{"ruleId":"3907","severity":1,"message":"3908","line":61,"column":48,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":65,"column":59,"nodeType":"3909","messageId":"3910","endLine":65,"endColumn":61},{"ruleId":"3880","severity":1,"message":"3952","line":99,"column":8,"nodeType":"3882","endLine":99,"endColumn":16,"suggestions":"4158"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":20,"column":9,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":22,"column":9,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":30,"column":10,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":30,"column":21,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":31,"column":23,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3941","line":41,"column":10,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3942","line":41,"column":22,"nodeType":"3874","messageId":"3875","endLine":41,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3943","line":43,"column":10,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3944","line":43,"column":16,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3945","line":44,"column":10,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":17},{"ruleId":"3872","severity":1,"message":"3946","line":44,"column":19,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":29},{"ruleId":"3872","severity":1,"message":"3947","line":45,"column":10,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3948","line":45,"column":24,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":39},{"ruleId":"3872","severity":1,"message":"3949","line":46,"column":10,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3950","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":28},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":9,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":61,"column":55,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":95,"column":6,"nodeType":"3882","endLine":95,"endColumn":14,"suggestions":"4159"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":4,"column":8,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":14},{"ruleId":"3872","severity":1,"message":"4009","line":4,"column":9,"nodeType":"3874","messageId":"3875","endLine":4,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3912","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":18},{"ruleId":"3872","severity":1,"message":"4010","line":18,"column":12,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3962","line":13,"column":16,"nodeType":"3874","messageId":"3875","endLine":13,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4018","line":14,"column":8,"nodeType":"3874","messageId":"3875","endLine":14,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4019","line":15,"column":8,"nodeType":"3874","messageId":"3875","endLine":15,"endColumn":16},{"ruleId":"3872","severity":1,"message":"4020","line":16,"column":9,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":15},{"ruleId":"3872","severity":1,"message":"4021","line":17,"column":9,"nodeType":"3874","messageId":"3875","endLine":17,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4022","line":18,"column":13,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":17},{"ruleId":"3872","severity":1,"message":"4023","line":19,"column":9,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":18},{"ruleId":"3872","severity":1,"message":"3936","line":28,"column":11,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":30,"column":11,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4024","line":31,"column":12,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":18},{"ruleId":"3872","severity":1,"message":"4025","line":31,"column":19,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":28},{"ruleId":"3872","severity":1,"message":"3954","line":43,"column":12,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3938","line":43,"column":23,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":44,"column":12,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":44,"column":25,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":40},{"ruleId":"3872","severity":1,"message":"3941","line":54,"column":12,"nodeType":"3874","messageId":"3875","endLine":54,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3942","line":54,"column":24,"nodeType":"3874","messageId":"3875","endLine":54,"endColumn":38},{"ruleId":"3872","severity":1,"message":"3943","line":56,"column":12,"nodeType":"3874","messageId":"3875","endLine":56,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3944","line":56,"column":18,"nodeType":"3874","messageId":"3875","endLine":56,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3945","line":57,"column":12,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3946","line":57,"column":21,"nodeType":"3874","messageId":"3875","endLine":57,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3947","line":58,"column":12,"nodeType":"3874","messageId":"3875","endLine":58,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3948","line":58,"column":26,"nodeType":"3874","messageId":"3875","endLine":58,"endColumn":41},{"ruleId":"3872","severity":1,"message":"3949","line":59,"column":12,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3950","line":59,"column":22,"nodeType":"3874","messageId":"3875","endLine":59,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3973","line":63,"column":12,"nodeType":"3874","messageId":"3875","endLine":63,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3951","line":65,"column":11,"nodeType":"3874","messageId":"3875","endLine":65,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":79,"column":59,"nodeType":"3909","messageId":"3910","endLine":79,"endColumn":61},{"ruleId":"3907","severity":1,"message":"3908","line":97,"column":45,"nodeType":"3909","messageId":"3910","endLine":97,"endColumn":47},{"ruleId":"3880","severity":1,"message":"4026","line":131,"column":7,"nodeType":"3882","endLine":131,"endColumn":13,"suggestions":"4160"},{"ruleId":"3907","severity":1,"message":"3908","line":137,"column":70,"nodeType":"3909","messageId":"3910","endLine":137,"endColumn":72},{"ruleId":"3907","severity":1,"message":"3908","line":143,"column":68,"nodeType":"3909","messageId":"3910","endLine":143,"endColumn":70},{"ruleId":"3994","severity":1,"message":"3995","line":344,"column":54,"nodeType":"3996","messageId":"3997","endLine":344,"endColumn":56},{"ruleId":"3907","severity":1,"message":"3908","line":364,"column":89,"nodeType":"3909","messageId":"3910","endLine":364,"endColumn":91},{"ruleId":"3872","severity":1,"message":"3913","line":6,"column":5,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":7,"column":36,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":47},{"ruleId":"3872","severity":1,"message":"3915","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":8,"column":18,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":11,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4064","line":28,"column":12,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":19},{"ruleId":"3872","severity":1,"message":"4065","line":28,"column":21,"nodeType":"3874","messageId":"3875","endLine":28,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3938","line":31,"column":23,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3939","line":32,"column":12,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3940","line":32,"column":25,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4059","line":33,"column":25,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":40},{"ruleId":"3872","severity":1,"message":"4052","line":39,"column":17,"nodeType":"3874","messageId":"3875","endLine":39,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4050","line":45,"column":23,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":11,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":58,"column":28,"nodeType":"3909","messageId":"3910","endLine":58,"endColumn":30},{"ruleId":"3907","severity":1,"message":"3908","line":62,"column":48,"nodeType":"3909","messageId":"3910","endLine":62,"endColumn":50},{"ruleId":"3907","severity":1,"message":"3921","line":66,"column":55,"nodeType":"3909","messageId":"3910","endLine":66,"endColumn":57},{"ruleId":"3880","severity":1,"message":"3952","line":107,"column":8,"nodeType":"3882","endLine":107,"endColumn":16,"suggestions":"4161"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3937","line":22,"column":11,"nodeType":"3874","messageId":"3875","endLine":22,"endColumn":26},{"ruleId":"3872","severity":1,"message":"4052","line":36,"column":17,"nodeType":"3874","messageId":"3875","endLine":36,"endColumn":24},{"ruleId":"3872","severity":1,"message":"4050","line":38,"column":23,"nodeType":"3874","messageId":"3875","endLine":38,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3951","line":44,"column":11,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3921","line":55,"column":55,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":57},{"ruleId":"3872","severity":1,"message":"4080","line":60,"column":24,"nodeType":"3874","messageId":"3875","endLine":60,"endColumn":33},{"ruleId":"3880","severity":1,"message":"3952","line":106,"column":8,"nodeType":"3882","endLine":106,"endColumn":16,"suggestions":"4162"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3917","line":12,"column":9,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3962","line":12,"column":16,"nodeType":"3874","messageId":"3875","endLine":12,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3974","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3936","line":25,"column":11,"nodeType":"3874","messageId":"3875","endLine":25,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3977","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3951","line":34,"column":11,"nodeType":"3874","messageId":"3875","endLine":34,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":58,"column":20,"nodeType":"3909","messageId":"3910","endLine":58,"endColumn":22},{"ruleId":"3880","severity":1,"message":"3952","line":78,"column":8,"nodeType":"3882","endLine":78,"endColumn":16,"suggestions":"4163"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3936","line":21,"column":9,"nodeType":"3874","messageId":"3875","endLine":21,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3937","line":23,"column":9,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":24},{"ruleId":"3872","severity":1,"message":"3954","line":31,"column":10,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3938","line":31,"column":21,"nodeType":"3874","messageId":"3875","endLine":31,"endColumn":33},{"ruleId":"3872","severity":1,"message":"3939","line":32,"column":10,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3940","line":32,"column":23,"nodeType":"3874","messageId":"3875","endLine":32,"endColumn":38},{"ruleId":"3872","severity":1,"message":"4052","line":39,"column":15,"nodeType":"3874","messageId":"3875","endLine":39,"endColumn":22},{"ruleId":"3872","severity":1,"message":"3942","line":42,"column":21,"nodeType":"3874","messageId":"3875","endLine":42,"endColumn":35},{"ruleId":"3872","severity":1,"message":"4049","line":43,"column":22,"nodeType":"3874","messageId":"3875","endLine":43,"endColumn":35},{"ruleId":"3872","severity":1,"message":"3944","line":44,"column":16,"nodeType":"3874","messageId":"3875","endLine":44,"endColumn":23},{"ruleId":"3872","severity":1,"message":"4050","line":45,"column":21,"nodeType":"3874","messageId":"3875","endLine":45,"endColumn":33},{"ruleId":"3872","severity":1,"message":"4051","line":46,"column":20,"nodeType":"3874","messageId":"3875","endLine":46,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3951","line":51,"column":9,"nodeType":"3874","messageId":"3875","endLine":51,"endColumn":21},{"ruleId":"3907","severity":1,"message":"3921","line":61,"column":51,"nodeType":"3909","messageId":"3910","endLine":61,"endColumn":53},{"ruleId":"3880","severity":1,"message":"3952","line":93,"column":6,"nodeType":"3882","endLine":93,"endColumn":14,"suggestions":"4164"},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3913","line":8,"column":5,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":11},{"ruleId":"3872","severity":1,"message":"3914","line":8,"column":20,"nodeType":"3874","messageId":"3875","endLine":8,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3915","line":9,"column":5,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":16},{"ruleId":"3872","severity":1,"message":"3916","line":9,"column":18,"nodeType":"3874","messageId":"3875","endLine":9,"endColumn":27},{"ruleId":"3872","severity":1,"message":"3974","line":23,"column":11,"nodeType":"3874","messageId":"3875","endLine":23,"endColumn":23},{"ruleId":"3872","severity":1,"message":"3936","line":24,"column":11,"nodeType":"3874","messageId":"3875","endLine":24,"endColumn":26},{"ruleId":"3872","severity":1,"message":"3951","line":33,"column":11,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":23},{"ruleId":"3907","severity":1,"message":"3908","line":57,"column":20,"nodeType":"3909","messageId":"3910","endLine":57,"endColumn":22},{"ruleId":"3880","severity":1,"message":"3952","line":77,"column":8,"nodeType":"3882","endLine":77,"endColumn":16,"suggestions":"4165"},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":27,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":36},{"ruleId":"3872","severity":1,"message":"3903","line":2,"column":10,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":15},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3930","line":6,"column":10,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":21},{"ruleId":"3872","severity":1,"message":"3931","line":18,"column":12,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3932","line":18,"column":21,"nodeType":"3874","messageId":"3875","endLine":18,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3933","line":19,"column":12,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3934","line":19,"column":21,"nodeType":"3874","messageId":"3875","endLine":19,"endColumn":31},{"ruleId":"3872","severity":1,"message":"3973","line":20,"column":12,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":20,"column":21,"nodeType":"3874","messageId":"3875","endLine":20,"endColumn":31},{"ruleId":"3872","severity":1,"message":"4083","line":30,"column":11,"nodeType":"3874","messageId":"3875","endLine":30,"endColumn":29},{"ruleId":"3872","severity":1,"message":"4012","line":33,"column":11,"nodeType":"3874","messageId":"3875","endLine":33,"endColumn":29},{"ruleId":"3907","severity":1,"message":"3908","line":34,"column":78,"nodeType":"3909","messageId":"3910","endLine":34,"endColumn":80},{"ruleId":"4055","severity":1,"message":"4056","line":50,"column":17,"nodeType":"3906","messageId":"4057","endLine":50,"endColumn":242,"fix":"4166"},{"ruleId":"3907","severity":1,"message":"3908","line":53,"column":22,"nodeType":"3909","messageId":"3910","endLine":53,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":170,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":172},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":198,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":200},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":223,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":225},{"ruleId":"3907","severity":1,"message":"3908","line":55,"column":248,"nodeType":"3909","messageId":"3910","endLine":55,"endColumn":250},{"ruleId":"3907","severity":1,"message":"3908","line":62,"column":22,"nodeType":"3909","messageId":"3910","endLine":62,"endColumn":24},{"ruleId":"3907","severity":1,"message":"3921","line":95,"column":18,"nodeType":"3909","messageId":"3910","endLine":95,"endColumn":20},{"ruleId":"3872","severity":1,"message":"3902","line":1,"column":16,"nodeType":"3874","messageId":"3875","endLine":1,"endColumn":25},{"ruleId":"3872","severity":1,"message":"3911","line":2,"column":17,"nodeType":"3874","messageId":"3875","endLine":2,"endColumn":30},{"ruleId":"3872","severity":1,"message":"3928","line":6,"column":8,"nodeType":"3874","messageId":"3875","endLine":6,"endColumn":14},{"ruleId":"3872","severity":1,"message":"3972","line":7,"column":9,"nodeType":"3874","messageId":"3875","endLine":7,"endColumn":13},{"ruleId":"3872","severity":1,"message":"3973","line":16,"column":12,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":19},{"ruleId":"3872","severity":1,"message":"3935","line":16,"column":21,"nodeType":"3874","messageId":"3875","endLine":16,"endColumn":31},{"ruleId":"3907","severity":1,"message":"3908","line":21,"column":73,"nodeType":"3909","messageId":"3910","endLine":21,"endColumn":75},{"ruleId":"3907","severity":1,"message":"3921","line":54,"column":100,"nodeType":"3909","messageId":"3910","endLine":54,"endColumn":102},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":117,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":119},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":151,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":153},{"ruleId":"3907","severity":1,"message":"3908","line":75,"column":187,"nodeType":"3909","messageId":"3910","endLine":75,"endColumn":189},{"ruleId":"3907","severity":1,"message":"3908","line":77,"column":36,"nodeType":"3909","messageId":"3910","endLine":77,"endColumn":38},{"ruleId":"3907","severity":1,"message":"3908","line":83,"column":44,"nodeType":"3909","messageId":"3910","endLine":83,"endColumn":46},{"ruleId":"3907","severity":1,"message":"3908","line":83,"column":81,"nodeType":"3909","messageId":"3910","endLine":83,"endColumn":83},{"ruleId":"3907","severity":1,"message":"3921","line":93,"column":42,"nodeType":"3909","messageId":"3910","endLine":93,"endColumn":44},{"ruleId":"3907","severity":1,"message":"3921","line":102,"column":42,"nodeType":"3909","messageId":"3910","endLine":102,"endColumn":44},"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["4167"],"no-negated-in-lhs",["4168"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["4169"],"'updateSetting' is assigned a value but never used.","'requestRemoveError' is assigned a value but never used.","'Header' is defined but never used.","'intl' is assigned a value but never used.","'App' is defined but never used.","'OrderPost' is defined but never used.","'addOrderMulti' is defined but never used.","'sleep' is assigned a value but never used.","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'http:' is defined but never used.","unused",["4170"],"'ChevronDownIcon' is defined but never used.","'UsersIcon' is defined but never used.","'useEffect' is defined but never used.","'KTSVG' is defined but never used.","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'toAbsoluteUrl' is defined but never used.","'Languages' is defined but never used.","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Group' is defined but never used.","'updateAccount' is defined but never used.","'updateOrder' is defined but never used.","'adding' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'AsideMenuItemWithSub' is defined but never used.",["4171"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",["4167"],["4168"],"'moment' is defined but never used.","'res' is assigned a value but never used.","'getFunciton' is defined but never used.","'running' is assigned a value but never used.","'setRunning' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'balance' is assigned a value but never used.","'groups' is assigned a value but never used.","'setView_need' is assigned a value but never used.","'premium_rate' is assigned a value but never used.","'setPremium_rate' is assigned a value but never used.","'mobile_rate' is assigned a value but never used.","'setMobile_rate' is assigned a value but never used.","'note' is assigned a value but never used.","'setNote' is assigned a value but never used.","'keyword' is assigned a value but never used.","'setKeyword' is assigned a value but never used.","'comment_list' is assigned a value but never used.","'setComment_list' is assigned a value but never used.","'group_id' is assigned a value but never used.","'setGroup' is assigned a value but never used.","'dismissModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'close'. Either include it or remove the dependency array. If 'close' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["4172"],"'view_need' is assigned a value but never used.",["4173"],["4174"],"'resetComputer' is defined but never used.","'Input' is defined but never used.","'setvpstype' is assigned a value but never used.",["4175"],"'OrderForm' is defined but never used.","'OrderModel' is defined but never used.","'deleteChannel' is defined but never used.","'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","'ComputerModel' is defined but never used.","'RootState' is defined but never used.","'showAddManual' is assigned a value but never used.","'setShowAddManual' is assigned a value but never used.","'setvpstpye' is assigned a value but never used.",["4176"],"'date' is defined but never used.","'loading' is assigned a value but never used.","'role' is assigned a value but never used.",["4177"],"'setvpsoption' is assigned a value but never used.","'setthreads' is assigned a value but never used.",["4178"],["4167"],["4168"],["4179"],"'Label' is defined but never used.","'randomString' is defined but never used.",["4180"],"'channelPrior' is assigned a value but never used.",["4181"],"'updateSetting' is defined but never used.","'result' is assigned a value but never used.","Assignments to the 'useEff' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaldvpsshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'DefaultTitle' is defined but never used.","'clsx' is defined but never used.","'HeaderNotificationsMenu' is defined but never used.","'QuickLinks' is defined but never used.","'Search' is defined but never used.","'auto' is defined but never used.","'toolbarButtonMarginClass' is assigned a value but never used.","'toolbarButtonHeightClass' is assigned a value but never used.","'toolbarUserAvatarHeightClass' is assigned a value but never used.","'toolbarButtonIconSizeClass' is assigned a value but never used.","'config' is assigned a value but never used.","'Link' is defined but never used.","'format1' is defined but never used.","'actions' is defined but never used.","'clickDeleteHandler' is assigned a value but never used.","'ChannelStaticModel' is defined but never used.","'ChannelStaticItem' is defined but never used.",["4182"],["4183"],["4184"],"'OrderItem' is defined but never used.","'AddModal' is defined but never used.","'string' is defined but never used.","'register' is defined but never used.","'auth' is defined but never used.","'randomInt' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'adding'. Either include it or remove the dependency array.",["4185"],["4186"],"'useState' is defined but never used.","'FormGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'role', and 'user'. Either include them or remove the dependency array.",["4187"],"'SortAscendingIcon' is defined but never used.","'Popover' is defined but never used.","'Transition' is defined but never used.","'Fragment' is defined but never used.","'Spinner' is defined but never used.","'user' is assigned a value but never used.","'currentGroup' is assigned a value but never used.","'arr' is assigned a value but never used.","'videos' is assigned a value but never used.","Assignments to the 'totaldordershow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeordershow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimeorder' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'totaltimebuffedordershow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaltimebuffedorder' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'selectGroup' is assigned a value but never used.","'setOptionbuff' is assigned a value but never used.","'setViewstart' is assigned a value but never used.","'setTimebuff' is assigned a value but never used.","'setUser' is assigned a value but never used.",["4188"],"'discount' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"4189","text":"4190"},"'setView_percent' is assigned a value but never used.","'timebuff_old' is assigned a value but never used.","'setTimebuff_Old' is assigned a value but never used.",["4191"],"'ReactChild' is defined but never used.","'videoid' is assigned a value but never used.","'setVideoid' is assigned a value but never used.",["4192"],["4193"],"'DateRangePicker' is defined but never used.","'keydatestarttrue' is assigned a value but never used.","'keydateendtrue' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","Assignments to the 'keydatestart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'keydateend' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'keydate' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'addGroup' is assigned a value but never used.","'isShowFixMulti' is assigned a value but never used.",["4194"],"'getcounts' is defined but never used.",["4195"],["4196"],"'clickUpdateHandler' is assigned a value but never used.",{"range":"4197","text":"4190"},"'vpstype' is assigned a value but never used.",["4198"],"'round' is defined but never used.","'dispatch' is assigned a value but never used.","'API_URL' is assigned a value but never used.","'showEditMulti' is assigned a value but never used.","'setShowEditMulti' is assigned a value but never used.","'showRestartMulti' is assigned a value but never used.","'setShowRestartMulti' is assigned a value but never used.","'total_user' is assigned a value but never used.","'settotal_user' is assigned a value but never used.","'total_user_endtrial' is assigned a value but never used.","'settotal_user_endtrial' is assigned a value but never used.","'vpstpye' is assigned a value but never used.","'keytrue' is assigned a value but never used.","'setKeyTrue' is assigned a value but never used.","'keystatus' is assigned a value but never used.","'setKeyStatus' is assigned a value but never used.","'keystatustrue' is assigned a value but never used.","'setKeyStatusTrue' is assigned a value but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.",["4199"],["4200"],"'showAdd' is assigned a value but never used.","'setShowAdd' is assigned a value but never used.","'groupName' is assigned a value but never used.","'setGroupName' is assigned a value but never used.","'totaltimebuffedorder' is assigned a value but never used.","'totaltimebuffedordershow' is assigned a value but never used.","'setTotalTimeBuffedOrderShow' is assigned a value but never used.","'setTotalAdd' is assigned a value but never used.","'setTotalSub' is assigned a value but never used.","'sumtimedone' is assigned a value but never used.","Assignments to the 'totaldorder' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaladdshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totaladd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalsubshow' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'totalsub' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'addorderv2' is defined but never used.","'maxthreads' is assigned a value but never used.","'setMaxthreads' is assigned a value but never used.","'setHome_rate' is assigned a value but never used.","'setSearch_rate' is assigned a value but never used.","'setSuggest_rate' is assigned a value but never used.","'setDirect_rate' is assigned a value but never used.","'likerate' is assigned a value but never used.","'setLike_rate' is assigned a value but never used.","'commentrate' is assigned a value but never used.","'setComment_rate' is assigned a value but never used.","'mobilerate' is assigned a value but never used.","'viewstart' is assigned a value but never used.","'optionbuff' is assigned a value but never used.","'enabled' is assigned a value but never used.","'setEnabled' is assigned a value but never used.",["4201"],["4167"],["4168"],["4202"],["4203"],["4204"],["4205"],["4206"],["4207"],["4208"],["4209"],["4210"],"'setservice' is assigned a value but never used.",["4211"],"'setvieworder' is assigned a value but never used.",["4212"],["4213"],{"range":"4214","text":"4190"},["4215"],["4216"],["4217"],["4218"],["4219"],["4220"],["4221"],["4222"],{"range":"4223","text":"4190"},"no-global-assign","no-unsafe-negation",{"desc":"4224","fix":"4225"},{"desc":"4224","fix":"4226"},{"desc":"4224","fix":"4227"},{"desc":"4228","fix":"4229"},{"desc":"4228","fix":"4230"},{"desc":"4228","fix":"4231"},{"desc":"4224","fix":"4232"},{"desc":"4224","fix":"4233"},{"desc":"4228","fix":"4234"},{"desc":"4228","fix":"4235"},{"desc":"4224","fix":"4236"},{"desc":"4237","fix":"4238"},{"desc":"4224","fix":"4239"},{"desc":"4228","fix":"4240"},{"desc":"4228","fix":"4241"},{"desc":"4228","fix":"4242"},{"desc":"4243","fix":"4244"},{"desc":"4228","fix":"4245"},{"desc":"4246","fix":"4247"},{"desc":"4228","fix":"4248"},[2862,2862]," rel=\"noreferrer\"",{"desc":"4228","fix":"4249"},{"desc":"4228","fix":"4250"},{"desc":"4246","fix":"4251"},{"desc":"4228","fix":"4252"},{"desc":"4228","fix":"4253"},{"desc":"4228","fix":"4254"},[1971,1971],{"desc":"4224","fix":"4255"},{"desc":"4224","fix":"4256"},{"desc":"4246","fix":"4257"},{"desc":"4228","fix":"4258"},{"desc":"4224","fix":"4259"},{"desc":"4224","fix":"4260"},{"desc":"4224","fix":"4261"},{"desc":"4246","fix":"4262"},{"desc":"4246","fix":"4263"},{"desc":"4246","fix":"4264"},{"desc":"4237","fix":"4265"},{"desc":"4224","fix":"4266"},{"desc":"4228","fix":"4267"},{"desc":"4228","fix":"4268"},{"desc":"4228","fix":"4269"},{"desc":"4228","fix":"4270"},[3067,3067],{"desc":"4228","fix":"4271"},{"desc":"4228","fix":"4272"},{"desc":"4243","fix":"4273"},{"desc":"4228","fix":"4274"},{"desc":"4228","fix":"4275"},{"desc":"4228","fix":"4276"},{"desc":"4228","fix":"4277"},{"desc":"4228","fix":"4278"},[1971,1971],"Update the dependencies array to be: [dispatch]",{"range":"4279","text":"4280"},{"range":"4281","text":"4280"},{"range":"4282","text":"4280"},"Update the dependencies array to be: [adding, close]",{"range":"4283","text":"4284"},{"range":"4285","text":"4284"},{"range":"4286","text":"4284"},{"range":"4287","text":"4280"},{"range":"4288","text":"4280"},{"range":"4289","text":"4284"},{"range":"4290","text":"4284"},{"range":"4291","text":"4280"},"Update the dependencies array to be: [dispatch, status]",{"range":"4292","text":"4293"},{"range":"4294","text":"4280"},{"range":"4295","text":"4284"},{"range":"4296","text":"4284"},{"range":"4297","text":"4284"},"Update the dependencies array to be: [adding, show]",{"range":"4298","text":"4299"},{"range":"4300","text":"4284"},"Update the dependencies array to be: [dispatch, role, user]",{"range":"4301","text":"4302"},{"range":"4303","text":"4284"},{"range":"4304","text":"4284"},{"range":"4305","text":"4284"},{"range":"4306","text":"4302"},{"range":"4307","text":"4284"},{"range":"4308","text":"4284"},{"range":"4309","text":"4284"},{"range":"4310","text":"4280"},{"range":"4311","text":"4280"},{"range":"4312","text":"4302"},{"range":"4313","text":"4284"},{"range":"4314","text":"4280"},{"range":"4315","text":"4280"},{"range":"4316","text":"4280"},{"range":"4317","text":"4302"},{"range":"4318","text":"4302"},{"range":"4319","text":"4302"},{"range":"4320","text":"4293"},{"range":"4321","text":"4280"},{"range":"4322","text":"4284"},{"range":"4323","text":"4284"},{"range":"4324","text":"4284"},{"range":"4325","text":"4284"},{"range":"4326","text":"4284"},{"range":"4327","text":"4284"},{"range":"4328","text":"4299"},{"range":"4329","text":"4284"},{"range":"4330","text":"4284"},{"range":"4331","text":"4284"},{"range":"4332","text":"4284"},{"range":"4333","text":"4284"},[987,989],"[dispatch]",[551,553],[564,566],[3344,3352],"[adding, close]",[2858,2866],[3115,3123],[828,830],[1159,1161],[1900,1908],[1910,1918],[828,830],[1188,1196],"[dispatch, status]",[987,989],[2816,2824],[2863,2871],[3349,3357],[4774,4780],"[adding, show]",[2742,2750],[1117,1119],"[dispatch, role, user]",[2876,2884],[6223,6231],[4186,4194],[1130,1132],[3765,3773],[3543,3551],[2888,2896],[813,815],[823,825],[929,931],[6082,6090],[828,830],[813,815],[823,825],[1130,1132],[1117,1119],[929,931],[1188,1196],[987,989],[6082,6090],[4017,4025],[2747,2755],[5498,5506],[3349,3357],[2863,2871],[4774,4780],[3765,3773],[3543,3551],[2816,2824],[2888,2896],[2742,2750]]